{"version":3,"sources":["context/auth.js","components/CHTNavbar.js","images/covid.jpg","images/covidtesting.jpg","images/covidvaccine.jpg","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Profile.js","pages/Settings.js","pages/Admin.js","pages/Testing.js","pages/Vaccine.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","CHTNavbar","setAuthTokens","token","existingTokens","JSON","parse","localStorage","getItem","getToken","Navbar","sticky","style","background","variant","to","Brand","href","Nav","className","Link","onClick","Home","Jumbotron","fluid","height","Container","color","Button","size","border","Row","Col","md","paddingLeft","Card","Img","src","covid","maxHeight","Body","Title","Text","paddingRight","covidTesting","covidVaccine","Login","props","useState","isLoggedIn","setLoggedIn","isError","setIsError","isAdmin","setIsAdmin","username","setUsername","password","setPassword","referrer","location","state","event","a","preventDefault","fetch","method","headers","body","stringify","response","json","data","status","padding","width","margin","Form","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","block","disabled","length","Alert","Signup","isSignedUp","setSignedUp","errorMessage","setErrorMessage","first_name","setFirst_name","last_name","setLast_name","age","setAge","city","setCity","setState","validateForm","errorMsg","push","map","message","Profile","currentUser","jwt","user","showSymptom","setShowSymptom","showTest","setShowTest","showAddInfo","setAddInfo","showTempAlert","setShowTempAlert","temperature","setTemperature","setCough","setShortnessOfBreath","setFatigue","setMuscleBodyAches","setHeadaches","setLossOfTaste","setSoreThroat","setCongestion","setNausea","setDiarrhea","Accordion","Header","Toggle","as","eventKey","Collapse","Table","responsive","bordered","hover","date","cough","shortnessOfBreath","fatigue","muscleBodyAches","headaches","lossOfTaste","soreThroat","congestion","nausea","diarrhea","item","id","Modal","show","onHide","backdrop","keyboard","Check","label","Footer","isNaN","Settings","firstName","setFirstName","lastName","setLastName","atRisk","setAtRisk","success","setSuccess","getProfile","patchProfile","args","populateProfile","callback","error","useEffect","placeholder","checked","Admin","key","setKey","createData","name","email","dob","rows","descendingComparator","b","orderBy","headCells","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","root","spacing","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","Tooltip","IconButton","aria-label","paper","marginBottom","table","minWidth","clip","overflow","position","top","useStyles","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","filteredRows","setFilteredRows","searched","setSearched","requestSearch","searchedVal","filter","row","toLowerCase","includes","Tabs","activeKey","onSelect","k","Tab","Paper","searchVal","onCancelSearch","TableContainer","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","mapStyles","Testing","findNearby","navigator","permissions","query","then","result","showAlert","pos","currentPosition","axios","post","places","results","console","log","catch","err","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onClose","lat","lng","geolocation","getCurrentPosition","prevState","coords","latitude","longitude","this","google","zoom","initialCenter","center","geometry","address","formatted_address","visible","Component","GoogleApiWrapper","apiKey","process","Vaccine","findVaccine","test","zip","noZipAlert","noMatchAlert","distance","locations","Number","MAX_SAFE_INTEGER","defaultValue","place","provider_brand_name","appointments_available","url","ProtectedRoute","rest","authTokens","render","pathname","path","CHT_TOKENS","App","Provider","setItem","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4df420b0.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n","import { Navbar, Nav, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useAuth } from \"../context/auth\";\n\nconst CHTNavbar = () => {\n  const { setAuthTokens } = useAuth();\n  const token = getToken();\n\n  function logOut() {\n    setAuthTokens(null);\n  }\n\n  function getToken() {\n    const existingTokens = JSON.parse(localStorage.getItem(\"CHT-tokens\"));\n    return existingTokens?.token;\n  }\n\n  return (\n    <Navbar sticky=\"top\" style={{ background: \"#408cb3\" }} variant=\"dark\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"#home\">COVID Health Tracker</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        <LinkContainer to=\"/profile\">\n          <Nav.Link>Profile</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/#\">\n          <Nav.Link>Data</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/testing\">\n          <Nav.Link>Testing</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/vaccine\">\n          <Nav.Link>Vaccine</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/#\">\n          <Nav.Link>News</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      <Nav>\n        {token ? (\n          <>\n            <LinkContainer to=\"/settings\">\n              <Nav.Link>Settings</Nav.Link>\n            </LinkContainer>\n            <Nav.Link onClick={logOut}>Logout</Nav.Link>\n          </>\n        ) : (\n          <>\n            <LinkContainer to=\"/signup\">\n              <Nav.Link>Signup</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/login\">\n              <Nav.Link>Login</Nav.Link>\n            </LinkContainer>\n          </>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default CHTNavbar;\n","export default __webpack_public_path__ + \"static/media/covid.aa223103.jpg\";","export default __webpack_public_path__ + \"static/media/covidtesting.496d9fb8.jpg\";","export default __webpack_public_path__ + \"static/media/covidvaccine.c207afae.jpg\";","import { Jumbotron, Container, Button, Card, Row, Col } from \"react-bootstrap\";\nimport covid from \"../images/covid.jpg\";\nimport covidTesting from \"../images/covidtesting.jpg\";\nimport covidVaccine from \"../images/covidvaccine.jpg\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"400px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>COVID-19 Health Tracker</h1>\n          <h5>Track your symptoms.</h5>\n          <p>\n            As a central hub for COVID-19 data, keep up with important news and\n            statistics about the virus and vaccine while tracking your symptoms.\n            Update your test results and learn more about contact tracing.\n          </p>\n          <Button\n            href=\"/signup\"\n            size=\"lg\"\n            style={{\n              background: \"#5340b3\",\n              color: \"white\",\n              border: \"#202C42\",\n            }}\n          >\n            Signup\n          </Button>{\" \"}\n          <Button\n            href=\"/login\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#8096A8\",\n            }}\n          >\n            Login\n          </Button>\n        </Container>\n      </Jumbotron>\n\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col md={4} style={{ paddingLeft: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img variant=\"top\" src={covid} style={{ maxHeight: 260 }} />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>COVID-19 Data</Card.Title>\n                <Card.Text>Learn more about important COVID-19 data.</Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Data tracker\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingLeft: 50, paddingRight: 50 }}>\n            <Card style={{ background: \"#408db3\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidTesting}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>Testing</Card.Title>\n                <Card.Text>\n                  Find out more about testing and locations near you.\n                </Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingRight: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidVaccine}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>News</Card.Title>\n                <Card.Text>\n                  Read up on news about COVID-19 and the vaccine.\n                </Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      <br />\n\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"350px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h2>Track Your Symptoms</h2>\n          <h5>Stay on top of your health.</h5>\n          <p>\n            If you believe you've come in contact with COVID-19 or have tested\n            postive, input your test results, quarantine, and log your symptoms\n            daily.\n          </p>\n          <Button\n            href=\"/profile\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#202C42\",\n            }}\n          >\n            Log your symptoms\n          </Button>{\" \"}\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\n\nfunction Login(props) {\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  const referrer = props.location.state && props.location.state.referrer || '/';\n  if (isLoggedIn) {\n    return <Redirect to={referrer} />;\n  }\n\n  if (isAdmin) {\n    return <Redirect to=\"/admin\"/>;\n  }\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if(username == \"admin\" && password == \"admin\") {\n      setIsAdmin(true);\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n\n  return (\n    <div style={{ padding: \"80px 0\" }}>\n      <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n        <Card.Body>\n          <Card.Title>\n            <h3>Login</h3>\n          </Card.Title>\n          <Form>\n            <Form.Group size=\"lg\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={handleSubmit}>\n              Login\n            </Button>\n          </Form>\n          <br />\n          {isError && <Alert variant='danger'>The username or password provided were incorrect.</Alert>}\n          <LinkContainer to=\"/signup\">\n            <Card.Link>Create new account</Card.Link>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\n\nfunction Signup() {\n    const [isSignedUp, setSignedUp] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [first_name, setFirst_name] = useState(\"\");\n    const [last_name, setLast_name] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const { setAuthTokens } = useAuth();\n\n    if (isSignedUp) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    function validateForm() {\n        const errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (password === '') {\n            errorMsg.push('Password cannot be blank');\n        }\n        if (first_name === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (last_name === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n        if (state.length !== 2) {\n            errorMsg.push('State must be a two-letter abbreviation');\n        }\n        if (errorMsg.length === 0) {\n            return true;\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (!validateForm()) {\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8080/auth/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    first_name,\n                    last_name,\n                    age,\n                    city,\n                    state\n                })\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                setAuthTokens(data);\n                setSignedUp(true);\n                setErrorMessage(\"\");\n            } else {\n                setErrorMessage(\n                    <p>{response.message}</p>\n                );\n            }\n        } catch (error) {\n            setErrorMessage(\n                <p>Problem with server, please try again.</p>\n            );\n        }\n    }\n\n    return (\n        <div style={{ padding: \"80px 0\" }}>\n            <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n                <Card.Body>\n                    <Card.Title>\n                        <h3>Sign Up</h3>\n                    </Card.Title>\n                    <Form>\n                        <Form.Group size=\"lg\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                type=\"username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"first_name\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={first_name}\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"last_name\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={last_name}\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={age}\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"city\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"state\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button block size=\"lg\" type=\"submit\" onClick={handleSubmit}>\n                            Sign Up\n                        </Button>\n                    </Form>\n                    <br />\n                    {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                    <LinkContainer to=\"/login\">\n                        <Card.Link>Already have an account? Log in</Card.Link>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Jumbotron,\n  Row,\n  Accordion,\n  Card,\n  Table,\n  Modal,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nconst Profile = () => {\n  const { setAuthTokens } = useAuth();\n  const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n\n  //modals\n  const [showSymptom, setShowSymptom] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [showAddInfo, setAddInfo] = useState(false);\n\n  const [showTempAlert, setShowTempAlert] = useState(false);\n\n  //possible symptoms to be logged\n  const [temperature, setTemperature] = useState(\"\");\n  const [cough, setCough] = useState(false);\n  const [shortnessOfBreath, setShortnessOfBreath] = useState(false);\n  const [fatigue, setFatigue] = useState(false);\n  const [muscleBodyAches, setMuscleBodyAches] = useState(false);\n  const [headaches, setHeadaches] = useState(false);\n  const [lossOfTaste, setLossOfTaste] = useState(false);\n  const [soreThroat, setSoreThroat] = useState(false);\n  const [congestion, setCongestion] = useState(false);\n  const [nausea, setNausea] = useState(false);\n  const [diarrhea, setDiarrhea] = useState(false);\n\n  //some dummy data\n  const symptoms = [\n    {\n      date: \"2/25/21\",\n      temperature: 98.6,\n      cough: false,\n      shortnessOfBreath: false,\n      fatigue: false,\n      muscleBodyAches: false,\n      headaches: false,\n      lossOfTaste: false,\n      soreThroat: false,\n      congestion: false,\n      nausea: false,\n      diarrhea: false,\n    },\n    {\n      date: \"2/26/21\",\n      temperature: 99.7,\n      cough: true,\n      shortnessOfBreath: false,\n      fatigue: false,\n      muscleBodyAches: false,\n      headaches: false,\n      lossOfTaste: true,\n      soreThroat: false,\n      congestion: false,\n      nausea: false,\n      diarrhea: false,\n    },\n    {\n      date: \"2/27/21\",\n      temperature: 100.1,\n      cough: true,\n      shortnessOfBreath: true,\n      fatigue: true,\n      muscleBodyAches: true,\n      headaches: true,\n      lossOfTaste: true,\n      soreThroat: true,\n      congestion: true,\n      nausea: true,\n      diarrhea: true,\n    },\n  ];\n\n  function submitSymptoms() {\n    if (!isNaN(temperature)) {\n    } else {\n      setShowTempAlert(true);\n    }\n  }\n\n  return (\n    <>\n      <Jumbotron fluid style={{ background: \"#20475A\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>Hello, {currentUser}</h1>\n        </Container>\n      </Jumbotron>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Accordion>\n              <Card\n                style={{\n                  background: \"#316A87\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"0\"\n                    style={{ color: \"white\" }}\n                  >\n                    Log Symptoms\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Log your symptoms daily. People with COVID-19 have had a\n                    wide range of symptoms reported – ranging from mild symptoms\n                    to severe illness. Symptoms may appear 2-14 days after\n                    exposure to the virus.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowSymptom(true)}\n                    >\n                      Log Symptoms\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#408cb3\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"1\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add Test Results\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Who should get tested?\n                    <li>People who have symptoms of COVID-19.</li>\n                    <li>\n                      People who have had close contact (within 6 feet for a\n                      total of 15 minutes or more) with someone with confirmed\n                      COVID-19.\n                    </li>\n                    <li>\n                      People who have taken part in activities that put them at\n                      higher risk for COVID-19 because they cannot socially\n                      distance as needed, such as travel, attending large social\n                      or mass gatherings, or being in crowded indoor settings.\n                    </li>\n                    <li>\n                      People who have been asked or referred to get testing by\n                      their healthcare provider, or state ​health department.\n                    </li>\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowTest(true)}\n                    >\n                      Add Test Results\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#69A9C9\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"2\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add More Information\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Some people are more likely than others to become severely\n                    ill,\n                    <li>older adults</li>\n                    <li>people with medical conditions</li>\n                    Understanding who is at risk can help determine the severity\n                    and precautions you should take.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setAddInfo(true)}\n                    >\n                      Add More Information\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <br />\n            <Card>\n              <Card.Body>\n                <strong>\n                  Seek immediate medical attention if someone is showing signs\n                  of:\n                </strong>\n                <li>Trouble breathing</li>\n                <li>Persistent pain or pressure in the chest</li>\n                <li>New Confusion</li>\n                <li>Inability to wake or stay awake</li>\n                <li>\n                  Pale, gray, or blue-colored skin, lips, or nail beds,\n                  depending on skin tone\n                </li>\n              </Card.Body>\n            </Card>\n            <br />\n          </Col>\n          <Col md={8}>\n            <Row className=\"justify-content-center\">\n              <Card>\n                <Card.Body>\n                  <h4>Results:</h4>\n                  <p>\n                    <strong>Likelihood: </strong>\n                  </p>\n                  <p>\n                    <strong>Severity:</strong>\n                  </p>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br />\n            <Row>\n              <Table responsive bordered hover>\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Temperature</th>\n                    <th>Cough</th>\n                    <th>Shortness of Breath</th>\n                    <th>Fatigue</th>\n                    <th>Muscle/Body Aches</th>\n                    <th>Headaches</th>\n                    <th>Loss of Taste</th>\n                    <th>Sore Throat</th>\n                    <th>Congestion/Runny Nose</th>\n                    <th>Nausea</th>\n                    <th>Diarrhea</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {symptoms.map((item) => (\n                    <tr key={item.id}>\n                      <td>{item.date}</td>\n                      <td>{item.temperature}</td>\n                      <td>{item.cough ? \"Yes\" : \"No\"}</td>\n                      <td>{item.shortnessOfBreath ? \"Yes\" : \"No\"}</td>\n                      <td>{item.fatigue ? \"Yes\" : \"No\"}</td>\n                      <td>{item.muscleBodyAches ? \"Yes\" : \"No\"}</td>\n                      <td>{item.headaches ? \"Yes\" : \"No\"}</td>\n                      <td>{item.lossOfTaste ? \"Yes\" : \"No\"}</td>\n                      <td>{item.soreThroat ? \"Yes\" : \"No\"}</td>\n                      <td>{item.congestion ? \"Yes\" : \"No\"}</td>\n                      <td>{item.nausea ? \"Yes\" : \"No\"}</td>\n                      <td>{item.diarrhea ? \"Yes\" : \"No\"}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n\n      <Modal\n        show={showSymptom}\n        onHide={() => setShowSymptom(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Log Symptoms</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"temperature\" type=\"number\">\n              <Form.Label>Temperature (&#176;Fahrenheit)</Form.Label>\n              <Form.Control onChange={(e) => setTemperature(e.target.value)} />\n            </Form.Group>\n            <Alert show={showTempAlert} variant=\"danger\">\n              <p>Please input a valid temperature.</p>\n            </Alert>\n            <br />\n            <p>Please select the symptoms you are experiencing.</p>\n            <Form.Check label={\"Cough\"} onChange={(e) => setCough(true)} />\n            <Form.Check\n              label={\"Shortness of breath\"}\n              onChange={(e) => setShortnessOfBreath(true)}\n            />\n            <Form.Check label={\"Fatigue\"} onChange={(e) => setFatigue(true)} />\n            <Form.Check\n              label={\"Muscle or body aches\"}\n              onChange={(e) => setMuscleBodyAches(true)}\n            />\n            <Form.Check\n              label={\"Headache\"}\n              onChange={(e) => setHeadaches(true)}\n            />\n            <Form.Check\n              label={\"Loss of taste\"}\n              onChange={(e) => setLossOfTaste(true)}\n            />\n            <Form.Check\n              label={\"Sore throat\"}\n              onChange={(e) => setSoreThroat(true)}\n            />\n            <Form.Check\n              label={\"Congestion or runny nose\"}\n              onChange={(e) => setCongestion(true)}\n            />\n            <Form.Check label={\"Nausea\"} onChange={(e) => setNausea(true)} />\n            <Form.Check\n              label={\"Diarrhea\"}\n              onChange={(e) => setDiarrhea(true)}\n            />\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => {\n              setShowSymptom(false);\n              setShowTempAlert(false);\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={submitSymptoms}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showTest}\n        onHide={() => setShowTest(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add Test Results</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Control as=\"select\">\n              <option>Negative</option>\n              <option>Positive</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setShowTest(false)}\n          >\n            Close\n          </Button>\n          <Button style={{ background: \"#5340b3\", border: \"#5340b3\" }}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        size=\"lg\"\n        show={showAddInfo}\n        onHide={() => setAddInfo(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add More Information</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"age\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control />\n            </Form.Group>\n            <br />\n            <p>Do you have any of the following:</p>\n            <li>Cancer</li>\n            <li>Chronic kidney disease</li>\n            <li>COPD (chronic obstructive pulmonary disease</li>\n            <li>Down Syndrome</li>\n            <li>\n              Heart conditions, such as heart failure, coronary artery disease,\n              or cardiomyopathies\n            </li>\n            <li>\n              Immunocompromised state (weakened immune system) from solid organ\n              transplant\n            </li>\n            <li>\n              Obesity (body mass index [BMI] of 30 kg/m<sup>2</sup> or higher\n              but &#60; 40 kg/m<sup>2</sup>)\n            </li>\n            <li>\n              Severe Obesity (BMI ≥ 40 kg/m<sup>2</sup>)\n            </li>\n            <li>Pregancy</li>\n            <li>Sickle cell disease</li>\n            <li>Smoking</li>\n            <li>Type 2 diabetes mellitus</li>\n            <br />\n            <Form.Control as=\"select\">\n              <option>No</option>\n              <option>Yes</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setAddInfo(false)}\n          >\n            Close\n          </Button>\n          <Button style={{ background: \"#5340b3\", border: \"#5340b3\" }}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Col,\n    Container,\n    Row,\n    Form,\n    Alert\n} from \"react-bootstrap\";\nimport jwt from \"jwt-decode\";\n\nconst Settings = () => {\n\n    // Form State\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [atRisk, setAtRisk] = useState(false);\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n\n    // Status State\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n\n    // GET /user/profile/:username\n    async function getProfile(username) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                }\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when fetching profile'];\n        }\n    }\n\n    // PATCH /user/profile/:username\n    async function patchProfile(username, args) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                },\n                body: JSON.stringify(args)\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when updating profile'];\n        }\n    }\n\n    // Fill out Placeholder Values\n    async function populateProfile(args, callback, error) {\n        const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n        const [status, data] = await callback(currentUser, args);\n        if (status) {\n            setErrorMessage(\"\");\n            // Only don't set success on first load\n            setSuccess(username !== '');\n            setUsername(data.username);\n            setPassword(\"\");\n            setFirstName(data.first_name);\n            setLastName(data.last_name);\n            setAge(data.age);\n            setAtRisk(data.atRisk);\n            setCity(data.city);\n            setState(data.state);\n        } else {\n            setErrorMessage(data);\n            setSuccess(false);\n            if (error) {\n                error(data);\n            }\n        }\n    }\n\n    // Verify Form Submission\n    function submitPatch() {\n        let errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (firstName === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (lastName === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n\n        if (errorMsg.length === 0) {\n            const args = {\n                username,\n                password,\n                first_name: firstName,\n                last_name: lastName,\n                age,\n                atRisk,\n                city,\n                state\n            };\n            populateProfile(args, patchProfile, null);\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    useEffect(() => {\n        populateProfile(null, getProfile);\n    }, []);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                    <h1>Update Profile</h1>\n                    <Form>\n                        <Form.Group controlId=\"username\" type=\"text\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                placeholder={username}\n                                onChange={(e) => setUsername(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\" type=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"firstName\" type=\"text\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                placeholder={firstName}\n                                onChange={(e) => setFirstName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"lastName\" type=\"text\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                placeholder={lastName}\n                                onChange={(e) => setLastName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"age\" type=\"number\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder={age}\n                                onChange={(e) => setAge(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"atRisk\" type=\"checkbox\">\n                            <Form.Label>At Risk</Form.Label>\n                            <Form.Check\n                                checked={atRisk}\n                                onChange={(e) => setAtRisk(e.target.checked)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"city\" type=\"text\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                placeholder={city}\n                                onChange={(e) => setCity(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"state\" type=\"text\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                placeholder={state}\n                                onChange={(e) => setState(e.target.value)} />\n                        </Form.Group>\n                        <Button\n                            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n                            onClick={submitPatch}>\n                            Save\n                        </Button>\n                        <br />\n                        <br />\n                        {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                        {success && <Alert variant='success'>Profile Updated Successfully. If you changed the username, pleas logout and log back in.</Alert>}\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\nimport { Toolbar, Typography, Paper, Checkbox, IconButton, Tooltip, FormControlLabel, Switch } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchBar from \"material-ui-search-bar\";\nimport { Tab, Tabs } from 'react-bootstrap'\n\nconst Admin = () => {\n    const [key, setKey] = useState('userlist');\n\n    function createData(name, username, email, dob, location) {\n        return { name, username, email, dob, location };\n    }\n\n    //Replace with user data from database\n    const rows = [\n        createData('Tony Stark', 'iamironman1337', 'ironman@avengers.com', 'May 29, 1970', 'Avengers HQ, NY'),\n        createData('Steve Rogers', 'icebergs6', 'captainamerica@avengers.com', 'July 4, 1918', 'Brooklyn, NY'),\n        createData('Bruce Banner', 'punybanner55', 'hulk@avengers.com', 'December 18, 1969', 'Avengers HQ, NY'),\n        createData('Natasha Romanoff', 'notblackwidow2', 'blackwidow@avengers.com', 'January 29, 1984', 'Vormir'),\n        createData('Thor Odinson', 'lightning44', 'thor@avengers.com', 'December 2, 964', 'Asgard, Norway'),\n        createData('Clint Barton', 'nevamiss', 'hawkeye@avengers.com', 'April 14, 1977', 'Saint Marys, WV'),\n        createData('Wanda Maximoff', 'scarlet01', 'scarletwitch@avengers.com', 'July 15, 1989', 'Westview, NJ'),\n        createData('The Vision', 'jarvis6', 'vision@avengers.com', 'May 7, 2015', 'Sword HQ'),\n        createData('Scott Lang', 'small123', 'antman@avengers.com', 'October 8, 1979', 'Avengers HQ, NY'),\n        createData('Groot', 'iamgroot', 'groot@avengers.com', 'March 3, 2014', 'Space'),\n        createData('Peter Parker', 'nowayhome6134', 'spiderman@avengers.com', 'August 10, 2001', 'Queens, NY'),\n        createData('Stephen Strange', 'mrdrstrange1', 'drstrange@avengers.com', 'November 30, 1975', 'Sanctum, NY'),\n    ];\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    const headCells = [\n        { id: 'name', disablePadding: true, label: 'Name' },\n        { id: 'username', disablePadding: false, label: 'Username' },\n        { id: 'email', disablePadding: false, label: 'Email' },\n        { id: 'dob', disablePadding: false, label: 'Date of Birth' },\n        { id: 'location', disablePadding: false, label: 'Location' },\n    ];\n\n    function EnhancedTableHead(props) {\n        const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n        const createSortHandler = (property) => (event) => {\n            onRequestSort(event, property);\n        };\n\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell padding=\"checkbox\">\n                        <Checkbox\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\n                            checked={rowCount > 0 && numSelected === rowCount}\n                            onChange={onSelectAllClick}\n                            inputProps={{ 'aria-label': 'select all users' }}\n                        />\n                    </TableCell>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            padding={headCell.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === headCell.id ? order : false}\n                        >\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={orderBy === headCell.id ? order : 'asc'}\n                                onClick={createSortHandler(headCell.id)}\n                            >\n                                {headCell.label}\n                                {orderBy === headCell.id ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    }\n\n    EnhancedTableHead.propTypes = {\n        classes: PropTypes.object.isRequired,\n        numSelected: PropTypes.number.isRequired,\n        onRequestSort: PropTypes.func.isRequired,\n        onSelectAllClick: PropTypes.func.isRequired,\n        order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    const useToolbarStyles = makeStyles((theme) => ({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1),\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                    color: theme.palette.secondary.main,\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n                }\n                : {\n                    color: theme.palette.text.primary,\n                    backgroundColor: theme.palette.secondary.dark,\n                },\n        title: {\n            flex: '1 1 100%',\n        },\n    }));\n\n    const EnhancedTableToolbar = (props) => {\n        const classes = useToolbarStyles();\n        const { numSelected } = props;\n\n        return (\n            <Toolbar\n                className={clsx(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                {numSelected > 0 ? (\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                            List of Users\n                        </Typography>\n                    )}\n\n                {numSelected > 0 &&\n                    <Tooltip title=\"Remove User(s)\">\n                        <IconButton aria-label=\"clear\">\n                            <ClearIcon />\n                        </IconButton>\n                    </Tooltip>\n                }\n            </Toolbar>\n        );\n    };\n\n    EnhancedTableToolbar.propTypes = {\n        numSelected: PropTypes.number.isRequired,\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }));\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const [filteredRows, setFilteredRows] = useState(rows);\n    const [searched, setSearched] = useState(\"\");\n\n    const requestSearch = (searchedVal) => {\n        const filter = rows.filter((row) => {\n            return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n        });\n        setFilteredRows(filter);\n    };\n\n    const cancelSearch = () => {\n        setSearched(\"\");\n        requestSearch(searched);\n    };\n\n    return (\n        <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k)}\n        >\n            <Tab eventKey=\"userlist\" title=\"User List\">\n                <div className={classes.root}>\n                    <Paper className={classes.paper}>\n                        <SearchBar\n                            placeholder='Search Name'\n                            value={searched}\n                            onChange={(searchVal) => requestSearch(searchVal)}\n                            onCancelSearch={() => cancelSearch()}\n                        />\n                        <EnhancedTableToolbar numSelected={selected.length} />\n\n                        <TableContainer>\n                            <Table\n                                className={classes.table}\n                                aria-labelledby=\"tableTitle\"\n                                size={dense ? 'small' : 'medium'}\n                                aria-label=\"enhanced table\"\n                            >\n                                <EnhancedTableHead\n                                    classes={classes}\n                                    numSelected={selected.length}\n                                    order={order}\n                                    orderBy={orderBy}\n                                    onSelectAllClick={handleSelectAllClick}\n                                    onRequestSort={handleRequestSort}\n                                    rowCount={rows.length}\n                                />\n                                <TableBody>\n                                    {stableSort(filteredRows, getComparator(order, orderBy))\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row, index) => {\n                                            const isItemSelected = isSelected(row.name);\n                                            const labelId = `enhanced-table-checkbox-${index}`;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    onClick={(event) => handleClick(event, row.name)}\n                                                    role=\"checkbox\"\n                                                    aria-checked={isItemSelected}\n                                                    tabIndex={-1}\n                                                    key={row.name}\n                                                    selected={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            inputProps={{ 'aria-labelledby': labelId }}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                        {row.name}\n                                                    </TableCell>\n                                                    <TableCell>{row.username}</TableCell>\n                                                    <TableCell>{row.email}</TableCell>\n                                                    <TableCell>{row.dob}</TableCell>\n                                                    <TableCell>{row.location}</TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                    <FormControlLabel\n                        control={<Switch checked={dense} onChange={handleChangeDense} />}\n                        label=\"Minimize\"\n                    />\n                </div>\n            </Tab>\n            <Tab eventKey=\"pagestats\" title=\"Page Statistics\">\n                <h>Page Statistics</h>\n            </Tab>\n            <Tab eventKey=\"tickets\" title=\"Tickets\">\n                <h>Tickets</h>\n            </Tab>\n        </Tabs>\n    );\n}\n\nexport default Admin;","import { Button, Row, Col, Container, Jumbotron, Alert } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: \"90%\",\n  height: \"90%\",\n};\n\nexport class Testing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPosition: {\n        lat: 32.779167,\n        lng: -96.808891,\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      places: [],\n      showAlert: false,\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState((prevState) => ({\n          currentPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n        }));\n      });\n    }\n  }\n\n  findNearby = () => {\n    navigator.permissions.query({ name: \"geolocation\" }).then((result) => {\n      if (result.state == \"denied\") {\n        this.setState({\n          showAlert: true,\n        });\n        return;\n      }\n    });\n\n    const pos = this.state.currentPosition;\n\n    return axios\n      .post(\"http://localhost:8080/location/testing\", pos)\n      .then((response) => {\n        this.setState({ places: response.data.results });\n        console.log(this.state.places);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for nearby testing locations.</h1>\n            (Be sure to turn location permissions on.)\n            <br />\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findNearby}\n            >\n              Find Testing Locations\n            </Button>\n          </Container>\n        </Jumbotron>\n        <Container fluid>\n          <Row className=\"mt-5\">\n            <Col md={4}>\n              <strong>Who should get tested?</strong>\n              <li>People who have symptoms of COVID-19.</li>\n              <li>\n                People who have had close contact (within 6 feet for a total of\n                15 minutes or more) with someone with confirmed COVID-19.\n              </li>\n              <li>\n                People who have taken part in activities that put them at higher\n                risk for COVID-19 because they cannot socially distance as\n                needed, such as travel, attending large social or mass\n                gatherings, or being in crowded indoor settings.\n              </li>\n              <li>\n                People who have been asked or referred to get testing by their\n                healthcare provider, or state ​health department.\n              </li>\n              <br />\n              <strong>There are two types of tests,</strong>\n              <li>A viral test tells you if you have a current infection.</li>\n              <li>\n                An antibody test may tell you if you've had a past infection.\n              </li>\n              <br />\n              Learn more{\" \"}\n              <a href=\" https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/testing.html\">\n                here.\n              </a>\n            </Col>\n            <Col md={8} style={{ height: \"800px\" }}>\n              <Alert\n                show={this.state.showAlert}\n                variant=\"danger\"\n                style={{ width: \"80%\" }}\n              >\n                Please turn on location permissions.\n              </Alert>\n              <Map\n                google={this.props.google}\n                zoom={12}\n                style={mapStyles}\n                initialCenter={this.state.currentPosition}\n                center={this.state.currentPosition}\n              >\n                {this.state.places.map((item) => (\n                  <Marker\n                    onClick={this.onMarkerClick}\n                    position={item.geometry.location}\n                    name={item.name}\n                    address={item.formatted_address}\n                  />\n                ))}\n\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}\n                  onClose={this.onClose}\n                >\n                  <div>\n                    <strong>{this.state.selectedPlace.name}</strong>\n                    <p>{this.state.selectedPlace.address}</p>\n                  </div>\n                </InfoWindow>\n              </Map>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API,\n})(Testing);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Jumbotron,\n  Container,\n  Form,\n  Col,\n  Card,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n//https://www.vaccinespotter.org/api/\n//https://github.com/GUI/covid-vaccine-spotter\n\nexport default class Vaccine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zip: \"\",\n      distance: Number.MAX_SAFE_INTEGER, // any distance\n      locations: [],\n      noZipAlert: false,\n      noMatchAlert: false,\n    };\n  }\n\n  findVaccine = () => {\n    console.log(/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip));\n    if (!/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip)) {\n      this.setState({\n        noZipAlert: true,\n      });\n      return;\n    }\n    this.setState({\n      noZipAlert: false,\n      noMatchAlert: false,\n    });\n\n    const data = { zip: this.state.zip, distance: this.state.distance };\n    axios\n      .post(\"http://localhost:8080/location/vaccine\", data)\n      .then((response) => {\n        if (response.data == \"No match\") {\n          this.setState({\n            noMatchAlert: true,\n            locations: [],\n          });\n        } else {\n          this.setState({\n            locations: response.data,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for vaccines.</h1>\n            Always be sure to first check\n            <li>your states guidelines on eligibility</li>\n            <li>the availability of a vaccine at each location</li>\n            <li>and to schedule your appointment</li>\n            <br />\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    value={this.state.zip}\n                    onChange={(e) => this.setState({ zip: e.target.value })}\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Within</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"Any Distance\"\n                    onChange={(e) =>\n                      this.setState({ distance: e.target.value })\n                    }\n                  >\n                    <option value={Number.MAX_SAFE_INTEGER}>\n                      Any Distance\n                    </option>\n                    <option value={5}>5 miles</option>\n                    <option value={10}>10 miles</option>\n                    <option value={25}>25 miles</option>\n                    <option value={50}>50 miles</option>\n                    <option value={100}>100 miles</option>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findVaccine}\n            >\n              Find Vaccines\n            </Button>\n          </Container>\n        </Jumbotron>\n\n        <Container fluid className=\"justify-content-center\">\n          <Row className=\"justify-content-md-center mb-5\">\n            <Alert\n              show={this.state.noZipAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              Please enter a zip.\n            </Alert>\n            <Alert\n              show={this.state.noMatchAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              There are no matches for this area.\n            </Alert>\n          </Row>\n        </Container>\n\n        <Container fluid className=\"justify-content-center\">\n          {this.state.locations.map((place) => (\n            <Row className=\"justify-content-md-center mb-5\">\n              <Card\n                style={{ width: \"50%\", background: \"#408cb3\", color: \"white\" }}\n              >\n                <Card.Header>\n                  <h4>{place.provider_brand_name}</h4>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title>\n                    {place.address}, {place.city}, {place.state}\n                  </Card.Title>\n                  <Card.Text>\n                    Appointments available:{\" \"}\n                    {place.appointments_available ? <p>Yes</p> : <p>No</p>}\n                  </Card.Text>\n                  <Button\n                    style={{\n                      background: \"#5340b3\",\n                      border: \"#5340b3\",\n                    }}\n                  >\n                    <a style={{ color: \"white\" }} href={place.url}>\n                      Visit {place.provider_brand_name}'s site\n                    </a>\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          ))}\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n    const { authTokens } = useAuth();\n    return (\n        <Route {...rest} render={props => authTokens\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/login',\n                state: { referrer: rest.path }\n            }} />} />\n    );\n}\n\nexport default ProtectedRoute;\n","import React, { useState } from \"react\";\nimport CHTNavbar from \"./components/CHTNavbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Settings from \"./pages/Settings\";\nimport Admin from \"./pages/Admin\";\nimport Testing from \"./pages/Testing\";\nimport Vaccine from \"./pages/Vaccine\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { AuthContext } from \"./context/auth\";\n\nconst CHT_TOKENS = \"CHT-tokens\";\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(CHT_TOKENS));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(CHT_TOKENS, JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n        <Router>\n          <CHTNavbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/admin\">\n              <Admin />\n            </Route>\n            <Route exact path=\"/testing\">\n              <Testing />\n            </Route>\n            <Route exact path=\"/vaccine\">\n              <Vaccine />\n            </Route>\n            <ProtectedRoute exact path=\"/profile\" component={Profile} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}