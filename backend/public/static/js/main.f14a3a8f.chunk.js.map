{"version":3,"sources":["context/auth.js","components/CHTNavbar.js","images/covid.jpg","images/covidtesting.jpg","images/covidvaccine.jpg","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Profile.js","pages/Settings.js","pages/Admin.js","pages/Testing.js","pages/Users.js","pages/Vaccine.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","CHTNavbar","setAuthTokens","token","existingTokens","JSON","parse","localStorage","getItem","getToken","admin","jwt","user","Navbar","sticky","style","background","variant","to","Brand","href","Nav","className","Link","onClick","Home","Jumbotron","fluid","height","Container","color","Button","size","border","Row","Col","md","paddingLeft","Card","Img","src","covid","maxHeight","Body","Title","Text","paddingRight","covidTesting","covidVaccine","Login","props","useState","isLoggedIn","setLoggedIn","isError","setIsError","isAdmin","setIsAdmin","username","setUsername","password","setPassword","referrer","location","state","event","a","preventDefault","fetch","method","headers","body","stringify","response","json","data","status","padding","width","margin","Form","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","block","disabled","length","Alert","Signup","isSignedUp","setSignedUp","errorMessage","setErrorMessage","first_name","setFirst_name","last_name","setLast_name","age","setAge","city","setCity","setState","validateForm","errorMsg","push","map","message","Profile","currentUser","showSymptom","setShowSymptom","showTest","setShowTest","showAddInfo","setAddInfo","showTempAlert","setShowTempAlert","temperature","setTemperature","setCough","setShortnessOfBreath","setFatigue","setMuscleBodyAches","setHeadaches","setLossOfTaste","setSoreThroat","setCongestion","setNausea","setDiarrhea","Accordion","Header","Toggle","as","eventKey","Collapse","Table","responsive","bordered","hover","date","cough","shortnessOfBreath","fatigue","muscleBodyAches","headaches","lossOfTaste","soreThroat","congestion","nausea","diarrhea","item","id","Modal","show","onHide","backdrop","keyboard","Check","label","Footer","isNaN","Settings","firstName","setFirstName","lastName","setLastName","atRisk","setAtRisk","success","setSuccess","getProfile","patchProfile","args","populateProfile","callback","error","useEffect","placeholder","checked","Admin","url","users","setUsers","isLoading","setLoading","console","log","arr","i","name","useFetch","pathname","mapStyles","Testing","findNearby","navigator","permissions","query","then","result","showAlert","pos","currentPosition","axios","post","places","results","catch","err","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onClose","lat","lng","geolocation","getCurrentPosition","position","prevState","coords","latitude","longitude","this","google","zoom","initialCenter","center","geometry","address","formatted_address","visible","Component","GoogleApiWrapper","apiKey","process","Users","useLocation","rows","descendingComparator","b","orderBy","headCells","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","root","spacing","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","Tooltip","IconButton","aria-label","paper","marginBottom","table","minWidth","clip","overflow","top","useStyles","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","filteredRows","setFilteredRows","searched","setSearched","requestSearch","searchedVal","filter","row","toLowerCase","includes","Paper","searchVal","onCancelSearch","TableContainer","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","Vaccine","findVaccine","test","zip","noZipAlert","noMatchAlert","distance","locations","Number","MAX_SAFE_INTEGER","defaultValue","place","provider_brand_name","appointments_available","ProtectedRoute","rest","authTokens","render","path","CHT_TOKENS","App","Provider","setItem","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f14a3a8f.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n","import { Navbar, Nav, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nconst CHTNavbar = () => {\n  const { setAuthTokens } = useAuth();\n  const token = getToken();\n  const admin = (token) ? jwt(localStorage.getItem(\"CHT-tokens\")).user.admin : 0;\n\n  function logOut() {\n    setAuthTokens(null);\n  }\n\n  function getToken() {\n    const existingTokens = JSON.parse(localStorage.getItem(\"CHT-tokens\"));\n    return existingTokens?.token;\n  }\n\n  return (\n    <Navbar sticky=\"top\" style={{ background: \"#408cb3\" }} variant=\"dark\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"#home\">COVID Health Tracker</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        {admin ? (\n          <>\n            <LinkContainer to=\"/admin\">\n              <Nav.Link>Admin</Nav.Link>\n            </LinkContainer>\n          </>\n        ) : (\n          <>\n            <LinkContainer to=\"/profile\">\n              <Nav.Link>Profile</Nav.Link>\n            </LinkContainer>\n          </>\n        )}\n        <LinkContainer to=\"/#\">\n          <Nav.Link>Data</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/testing\">\n          <Nav.Link>Testing</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/vaccine\">\n          <Nav.Link>Vaccine</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/#\">\n          <Nav.Link>News</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      <Nav>\n        {token ? (\n          <>\n            <LinkContainer to=\"/settings\">\n              <Nav.Link>Settings</Nav.Link>\n            </LinkContainer>\n            <Nav.Link onClick={logOut}>Logout</Nav.Link>\n          </>\n        ) : (\n          <>\n            <LinkContainer to=\"/signup\">\n              <Nav.Link>Signup</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/login\">\n              <Nav.Link>Login</Nav.Link>\n            </LinkContainer>\n          </>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default CHTNavbar;\n","export default __webpack_public_path__ + \"static/media/covid.aa223103.jpg\";","export default __webpack_public_path__ + \"static/media/covidtesting.496d9fb8.jpg\";","export default __webpack_public_path__ + \"static/media/covidvaccine.c207afae.jpg\";","import { Jumbotron, Container, Button, Card, Row, Col } from \"react-bootstrap\";\nimport covid from \"../images/covid.jpg\";\nimport covidTesting from \"../images/covidtesting.jpg\";\nimport covidVaccine from \"../images/covidvaccine.jpg\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"400px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>COVID-19 Health Tracker</h1>\n          <h5>Track your symptoms.</h5>\n          <p>\n            As a central hub for COVID-19 data, keep up with important news and\n            statistics about the virus and vaccine while tracking your symptoms.\n            Update your test results and learn more about contact tracing.\n          </p>\n          <Button\n            href=\"/signup\"\n            size=\"lg\"\n            style={{\n              background: \"#5340b3\",\n              color: \"white\",\n              border: \"#202C42\",\n            }}\n          >\n            Signup\n          </Button>{\" \"}\n          <Button\n            href=\"/login\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#8096A8\",\n            }}\n          >\n            Login\n          </Button>\n        </Container>\n      </Jumbotron>\n\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col md={4} style={{ paddingLeft: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img variant=\"top\" src={covid} style={{ maxHeight: 260 }} />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>COVID-19 Data</Card.Title>\n                <Card.Text>Learn more about important COVID-19 data.</Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Data tracker\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingLeft: 50, paddingRight: 50 }}>\n            <Card style={{ background: \"#408db3\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidTesting}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>Testing</Card.Title>\n                <Card.Text>\n                  Find out more about testing and locations near you.\n                </Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingRight: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidVaccine}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>News</Card.Title>\n                <Card.Text>\n                  Read up on news about COVID-19 and the vaccine.\n                </Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      <br />\n\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"350px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h2>Track Your Symptoms</h2>\n          <h5>Stay on top of your health.</h5>\n          <p>\n            If you believe you've come in contact with COVID-19 or have tested\n            postive, input your test results, quarantine, and log your symptoms\n            daily.\n          </p>\n          <Button\n            href=\"/profile\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#202C42\",\n            }}\n          >\n            Log your symptoms\n          </Button>{\" \"}\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\n\nfunction Login(props) {\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  const referrer = props.location.state && props.location.state.referrer || '/';\n\n  if (isAdmin) {\n    return <Redirect to=\"/admin\" />;\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to={referrer} />;\n  }\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setIsAdmin(jwt(localStorage.getItem(\"CHT-tokens\"))?.user?.admin);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n\n  return (\n    <div style={{ padding: \"80px 0\" }}>\n      <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n        <Card.Body>\n          <Card.Title>\n            <h3>Login</h3>\n          </Card.Title>\n          <Form>\n            <Form.Group size=\"lg\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={handleSubmit}>\n              Login\n            </Button>\n          </Form>\n          <br />\n          {isError && <Alert variant='danger'>The username or password provided were incorrect.</Alert>}\n          <LinkContainer to=\"/signup\">\n            <Card.Link>Create new account</Card.Link>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\n\nfunction Signup() {\n    const [isSignedUp, setSignedUp] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [first_name, setFirst_name] = useState(\"\");\n    const [last_name, setLast_name] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const { setAuthTokens } = useAuth();\n\n    if (isSignedUp) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    function validateForm() {\n        const errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (password === '') {\n            errorMsg.push('Password cannot be blank');\n        }\n        if (first_name === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (last_name === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n        if (state.length !== 2) {\n            errorMsg.push('State must be a two-letter abbreviation');\n        }\n        if (errorMsg.length === 0) {\n            return true;\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (!validateForm()) {\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8080/auth/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    first_name,\n                    last_name,\n                    age,\n                    city,\n                    state\n                })\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                setAuthTokens(data);\n                setSignedUp(true);\n                setErrorMessage(\"\");\n            } else {\n                setErrorMessage(<span>{data.message}</span>);\n            }\n        } catch (error) {\n            setErrorMessage(<span>Problem with server, please try again.</span>);\n        }\n    }\n\n    return (\n        <div style={{ padding: \"80px 0\" }}>\n            <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n                <Card.Body>\n                    <Card.Title>\n                        <h3>Sign Up</h3>\n                    </Card.Title>\n                    <Form>\n                        <Form.Group size=\"lg\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                type=\"username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"first_name\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={first_name}\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"last_name\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={last_name}\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={age}\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"city\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"state\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button block size=\"lg\" type=\"submit\" onClick={handleSubmit}>\n                            Sign Up\n                        </Button>\n                    </Form>\n                    <br />\n                    {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                    <LinkContainer to=\"/login\">\n                        <Card.Link>Already have an account? Log in</Card.Link>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Jumbotron,\n  Row,\n  Accordion,\n  Card,\n  Table,\n  Modal,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nconst Profile = () => {\n  const { setAuthTokens } = useAuth();\n  const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n\n  //modals\n  const [showSymptom, setShowSymptom] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [showAddInfo, setAddInfo] = useState(false);\n\n  const [showTempAlert, setShowTempAlert] = useState(false);\n\n  //possible symptoms to be logged\n  const [temperature, setTemperature] = useState(\"\");\n  const [cough, setCough] = useState(false);\n  const [shortnessOfBreath, setShortnessOfBreath] = useState(false);\n  const [fatigue, setFatigue] = useState(false);\n  const [muscleBodyAches, setMuscleBodyAches] = useState(false);\n  const [headaches, setHeadaches] = useState(false);\n  const [lossOfTaste, setLossOfTaste] = useState(false);\n  const [soreThroat, setSoreThroat] = useState(false);\n  const [congestion, setCongestion] = useState(false);\n  const [nausea, setNausea] = useState(false);\n  const [diarrhea, setDiarrhea] = useState(false);\n\n  //some dummy data\n  const symptoms = [\n    {\n      date: \"2/25/21\",\n      temperature: 98.6,\n      cough: false,\n      shortnessOfBreath: false,\n      fatigue: false,\n      muscleBodyAches: false,\n      headaches: false,\n      lossOfTaste: false,\n      soreThroat: false,\n      congestion: false,\n      nausea: false,\n      diarrhea: false,\n    },\n    {\n      date: \"2/26/21\",\n      temperature: 99.7,\n      cough: true,\n      shortnessOfBreath: false,\n      fatigue: false,\n      muscleBodyAches: false,\n      headaches: false,\n      lossOfTaste: true,\n      soreThroat: false,\n      congestion: false,\n      nausea: false,\n      diarrhea: false,\n    },\n    {\n      date: \"2/27/21\",\n      temperature: 100.1,\n      cough: true,\n      shortnessOfBreath: true,\n      fatigue: true,\n      muscleBodyAches: true,\n      headaches: true,\n      lossOfTaste: true,\n      soreThroat: true,\n      congestion: true,\n      nausea: true,\n      diarrhea: true,\n    },\n  ];\n\n  function submitSymptoms() {\n    if (!isNaN(temperature)) {\n    } else {\n      setShowTempAlert(true);\n    }\n  }\n\n  return (\n    <>\n      <Jumbotron fluid style={{ background: \"#20475A\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>Hello, {currentUser}</h1>\n        </Container>\n      </Jumbotron>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Accordion>\n              <Card\n                style={{\n                  background: \"#316A87\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"0\"\n                    style={{ color: \"white\" }}\n                  >\n                    Log Symptoms\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Log your symptoms daily. People with COVID-19 have had a\n                    wide range of symptoms reported – ranging from mild symptoms\n                    to severe illness. Symptoms may appear 2-14 days after\n                    exposure to the virus.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowSymptom(true)}\n                    >\n                      Log Symptoms\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#408cb3\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"1\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add Test Results\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Who should get tested?\n                    <li>People who have symptoms of COVID-19.</li>\n                    <li>\n                      People who have had close contact (within 6 feet for a\n                      total of 15 minutes or more) with someone with confirmed\n                      COVID-19.\n                    </li>\n                    <li>\n                      People who have taken part in activities that put them at\n                      higher risk for COVID-19 because they cannot socially\n                      distance as needed, such as travel, attending large social\n                      or mass gatherings, or being in crowded indoor settings.\n                    </li>\n                    <li>\n                      People who have been asked or referred to get testing by\n                      their healthcare provider, or state ​health department.\n                    </li>\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowTest(true)}\n                    >\n                      Add Test Results\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#69A9C9\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"2\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add More Information\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Some people are more likely than others to become severely\n                    ill,\n                    <li>older adults</li>\n                    <li>people with medical conditions</li>\n                    Understanding who is at risk can help determine the severity\n                    and precautions you should take.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setAddInfo(true)}\n                    >\n                      Add More Information\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <br />\n            <Card>\n              <Card.Body>\n                <strong>\n                  Seek immediate medical attention if someone is showing signs\n                  of:\n                </strong>\n                <li>Trouble breathing</li>\n                <li>Persistent pain or pressure in the chest</li>\n                <li>New Confusion</li>\n                <li>Inability to wake or stay awake</li>\n                <li>\n                  Pale, gray, or blue-colored skin, lips, or nail beds,\n                  depending on skin tone\n                </li>\n              </Card.Body>\n            </Card>\n            <br />\n          </Col>\n          <Col md={8}>\n            <Row className=\"justify-content-center\">\n              <Card>\n                <Card.Body>\n                  <h4>Results:</h4>\n                  <p>\n                    <strong>Likelihood: </strong>\n                  </p>\n                  <p>\n                    <strong>Severity:</strong>\n                  </p>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br />\n            <Row>\n              <Table responsive bordered hover>\n                <thead>\n                  <tr>\n                    <th>Date</th>\n                    <th>Temperature</th>\n                    <th>Cough</th>\n                    <th>Shortness of Breath</th>\n                    <th>Fatigue</th>\n                    <th>Muscle/Body Aches</th>\n                    <th>Headaches</th>\n                    <th>Loss of Taste</th>\n                    <th>Sore Throat</th>\n                    <th>Congestion/Runny Nose</th>\n                    <th>Nausea</th>\n                    <th>Diarrhea</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {symptoms.map((item) => (\n                    <tr key={item.id}>\n                      <td>{item.date}</td>\n                      <td>{item.temperature}</td>\n                      <td>{item.cough ? \"Yes\" : \"No\"}</td>\n                      <td>{item.shortnessOfBreath ? \"Yes\" : \"No\"}</td>\n                      <td>{item.fatigue ? \"Yes\" : \"No\"}</td>\n                      <td>{item.muscleBodyAches ? \"Yes\" : \"No\"}</td>\n                      <td>{item.headaches ? \"Yes\" : \"No\"}</td>\n                      <td>{item.lossOfTaste ? \"Yes\" : \"No\"}</td>\n                      <td>{item.soreThroat ? \"Yes\" : \"No\"}</td>\n                      <td>{item.congestion ? \"Yes\" : \"No\"}</td>\n                      <td>{item.nausea ? \"Yes\" : \"No\"}</td>\n                      <td>{item.diarrhea ? \"Yes\" : \"No\"}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n\n      <Modal\n        show={showSymptom}\n        onHide={() => setShowSymptom(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Log Symptoms</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"temperature\" type=\"number\">\n              <Form.Label>Temperature (&#176;Fahrenheit)</Form.Label>\n              <Form.Control onChange={(e) => setTemperature(e.target.value)} />\n            </Form.Group>\n            <Alert show={showTempAlert} variant=\"danger\">\n              <p>Please input a valid temperature.</p>\n            </Alert>\n            <br />\n            <p>Please select the symptoms you are experiencing.</p>\n            <Form.Check label={\"Cough\"} onChange={(e) => setCough(true)} />\n            <Form.Check\n              label={\"Shortness of breath\"}\n              onChange={(e) => setShortnessOfBreath(true)}\n            />\n            <Form.Check label={\"Fatigue\"} onChange={(e) => setFatigue(true)} />\n            <Form.Check\n              label={\"Muscle or body aches\"}\n              onChange={(e) => setMuscleBodyAches(true)}\n            />\n            <Form.Check\n              label={\"Headache\"}\n              onChange={(e) => setHeadaches(true)}\n            />\n            <Form.Check\n              label={\"Loss of taste\"}\n              onChange={(e) => setLossOfTaste(true)}\n            />\n            <Form.Check\n              label={\"Sore throat\"}\n              onChange={(e) => setSoreThroat(true)}\n            />\n            <Form.Check\n              label={\"Congestion or runny nose\"}\n              onChange={(e) => setCongestion(true)}\n            />\n            <Form.Check label={\"Nausea\"} onChange={(e) => setNausea(true)} />\n            <Form.Check\n              label={\"Diarrhea\"}\n              onChange={(e) => setDiarrhea(true)}\n            />\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => {\n              setShowSymptom(false);\n              setShowTempAlert(false);\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={submitSymptoms}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showTest}\n        onHide={() => setShowTest(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add Test Results</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Control as=\"select\">\n              <option>Negative</option>\n              <option>Positive</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setShowTest(false)}\n          >\n            Close\n          </Button>\n          <Button style={{ background: \"#5340b3\", border: \"#5340b3\" }}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        size=\"lg\"\n        show={showAddInfo}\n        onHide={() => setAddInfo(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add More Information</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"age\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control />\n            </Form.Group>\n            <br />\n            <p>Do you have any of the following:</p>\n            <li>Cancer</li>\n            <li>Chronic kidney disease</li>\n            <li>COPD (chronic obstructive pulmonary disease</li>\n            <li>Down Syndrome</li>\n            <li>\n              Heart conditions, such as heart failure, coronary artery disease,\n              or cardiomyopathies\n            </li>\n            <li>\n              Immunocompromised state (weakened immune system) from solid organ\n              transplant\n            </li>\n            <li>\n              Obesity (body mass index [BMI] of 30 kg/m<sup>2</sup> or higher\n              but &#60; 40 kg/m<sup>2</sup>)\n            </li>\n            <li>\n              Severe Obesity (BMI ≥ 40 kg/m<sup>2</sup>)\n            </li>\n            <li>Pregancy</li>\n            <li>Sickle cell disease</li>\n            <li>Smoking</li>\n            <li>Type 2 diabetes mellitus</li>\n            <br />\n            <Form.Control as=\"select\">\n              <option>No</option>\n              <option>Yes</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setAddInfo(false)}\n          >\n            Close\n          </Button>\n          <Button style={{ background: \"#5340b3\", border: \"#5340b3\" }}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Col,\n    Container,\n    Row,\n    Form,\n    Alert\n} from \"react-bootstrap\";\nimport jwt from \"jwt-decode\";\n\nconst Settings = () => {\n\n    // Form State\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [atRisk, setAtRisk] = useState(false);\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n\n    // Status State\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n\n    // GET /user/profile/:username\n    async function getProfile(username) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                }\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when fetching profile'];\n        }\n    }\n\n    // PATCH /user/profile/:username\n    async function patchProfile(username, args) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                },\n                body: JSON.stringify(args)\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when updating profile'];\n        }\n    }\n\n    // Fill out Placeholder Values\n    async function populateProfile(args, callback, error) {\n        const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n        const [status, data] = await callback(currentUser, args);\n        if (status) {\n            setErrorMessage(\"\");\n            // Only don't set success on first load\n            setSuccess(username !== '');\n            setUsername(data.username);\n            setPassword(\"\");\n            setFirstName(data.first_name);\n            setLastName(data.last_name);\n            setAge(data.age);\n            setAtRisk(data.atRisk);\n            setCity(data.city);\n            setState(data.state);\n        } else {\n            setErrorMessage(data);\n            setSuccess(false);\n            if (error) {\n                error(data);\n            }\n        }\n    }\n\n    // Verify Form Submission\n    function submitPatch() {\n        let errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (firstName === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (lastName === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n\n        if (errorMsg.length === 0) {\n            const args = {\n                username,\n                password,\n                first_name: firstName,\n                last_name: lastName,\n                age,\n                atRisk,\n                city,\n                state\n            };\n            populateProfile(args, patchProfile, null);\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    useEffect(() => {\n        populateProfile(null, getProfile);\n    }, []);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                    <h1>Update Profile</h1>\n                    <Form>\n                        <Form.Group controlId=\"username\" type=\"text\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                placeholder={username}\n                                onChange={(e) => setUsername(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\" type=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"firstName\" type=\"text\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                placeholder={firstName}\n                                onChange={(e) => setFirstName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"lastName\" type=\"text\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                placeholder={lastName}\n                                onChange={(e) => setLastName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"age\" type=\"number\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder={age}\n                                onChange={(e) => setAge(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"atRisk\" type=\"checkbox\">\n                            <Form.Label>At Risk</Form.Label>\n                            <Form.Check\n                                checked={atRisk}\n                                onChange={(e) => setAtRisk(e.target.checked)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"city\" type=\"text\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                placeholder={city}\n                                onChange={(e) => setCity(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"state\" type=\"text\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                placeholder={state}\n                                onChange={(e) => setState(e.target.value)} />\n                        </Form.Group>\n                        <Button\n                            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n                            onClick={submitPatch}>\n                            Save\n                        </Button>\n                        <br />\n                        <br />\n                        {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                        {success && <Alert variant='success'>Profile Updated Successfully. If you changed the username, pleas logout and log back in.</Alert>}\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Container, Card, Col } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst useFetch = url => {\n  const [users, setUsers] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  function createData(name, username, age, atRisk, city, state) {\n    return { name, username, age, atRisk, city, state };\n  }\n\n  useEffect(async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    const arr = [];\n    for (let i = 0; i < data.length; i++) {\n      arr.push(createData(data[i].first_name + ' ' + data[i].last_name, data[i].username, data[i].age, data[i].atRisk, data[i].city, data[i].state));\n    }\n    setUsers(arr);\n    setLoading(false);\n  }, []);\n\n  return { users, isLoading };\n};\n\nconst Admin = () => {\n  const { users, isLoading } = useFetch(\"http://localhost:8080/admin/\");\n\n  return (\n    <Container fluid>\n      {isLoading ? <div>Loading...</div> :\n        <Col md={3} style={{ padding: 100 }}>\n          <Card style={{ background: \"#40B3A0\" }}>\n            <Card.Body>\n              <Card.Title><Link to={{\n                pathname: '/admin/users',\n                state: users,\n              }}> User List </Link></Card.Title>\n            </Card.Body>\n          </Card>\n        </Col>\n      }\n    </Container>\n  );\n}\n\nexport default Admin;\n\n","import { Button, Row, Col, Container, Jumbotron, Alert } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: \"90%\",\n  height: \"90%\",\n};\n\nexport class Testing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPosition: {\n        lat: 32.779167,\n        lng: -96.808891,\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      places: [],\n      showAlert: false,\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState((prevState) => ({\n          currentPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n        }));\n      });\n    }\n  }\n\n  findNearby = () => {\n    navigator.permissions.query({ name: \"geolocation\" }).then((result) => {\n      if (result.state == \"denied\") {\n        this.setState({\n          showAlert: true,\n        });\n        return;\n      }\n    });\n\n    const pos = this.state.currentPosition;\n\n    return axios\n      .post(\"http://localhost:8080/location/testing\", pos)\n      .then((response) => {\n        this.setState({ places: response.data.results });\n        console.log(this.state.places);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for nearby testing locations.</h1>\n            (Be sure to turn location permissions on.)\n            <br />\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findNearby}\n            >\n              Find Testing Locations\n            </Button>\n          </Container>\n        </Jumbotron>\n        <Container fluid>\n          <Row className=\"mt-5\">\n            <Col md={4}>\n              <strong>Who should get tested?</strong>\n              <li>People who have symptoms of COVID-19.</li>\n              <li>\n                People who have had close contact (within 6 feet for a total of\n                15 minutes or more) with someone with confirmed COVID-19.\n              </li>\n              <li>\n                People who have taken part in activities that put them at higher\n                risk for COVID-19 because they cannot socially distance as\n                needed, such as travel, attending large social or mass\n                gatherings, or being in crowded indoor settings.\n              </li>\n              <li>\n                People who have been asked or referred to get testing by their\n                healthcare provider, or state ​health department.\n              </li>\n              <br />\n              <strong>There are two types of tests,</strong>\n              <li>A viral test tells you if you have a current infection.</li>\n              <li>\n                An antibody test may tell you if you've had a past infection.\n              </li>\n              <br />\n              Learn more{\" \"}\n              <a href=\" https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/testing.html\">\n                here.\n              </a>\n            </Col>\n            <Col md={8} style={{ height: \"800px\" }}>\n              <Alert\n                show={this.state.showAlert}\n                variant=\"danger\"\n                style={{ width: \"80%\" }}\n              >\n                Please turn on location permissions.\n              </Alert>\n              <Map\n                google={this.props.google}\n                zoom={12}\n                style={mapStyles}\n                initialCenter={this.state.currentPosition}\n                center={this.state.currentPosition}\n              >\n                {this.state.places.map((item) => (\n                  <Marker\n                    onClick={this.onMarkerClick}\n                    position={item.geometry.location}\n                    name={item.name}\n                    address={item.formatted_address}\n                  />\n                ))}\n\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}\n                  onClose={this.onClose}\n                >\n                  <div>\n                    <strong>{this.state.selectedPlace.name}</strong>\n                    <p>{this.state.selectedPlace.address}</p>\n                  </div>\n                </InfoWindow>\n              </Map>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API,\n})(Testing);\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\nimport { Toolbar, Typography, Paper, Checkbox, IconButton, Tooltip, FormControlLabel, Switch } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchBar from \"material-ui-search-bar\";\nimport { useLocation } from 'react-router-dom';\n\nconst Users = () => {\n    const { state } = useLocation();\n\n    const rows = [];\n    for (let i = 0; i < state.length; i++) {\n        rows.push(state[i]);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    const headCells = [\n        { id: 'name', disablePadding: true, label: 'Name' },\n        { id: 'username', disablePadding: false, label: 'Username' },\n        { id: 'age', disablePadding: false, label: 'Age' },\n        { id: 'atRisk', disablePadding: false, label: 'At Risk' },\n        { id: 'city', disablePadding: false, label: 'City' },\n        { id: 'state', disablePadding: false, label: 'State' },\n    ];\n\n    function EnhancedTableHead(props) {\n        const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n        const createSortHandler = (property) => (event) => {\n            onRequestSort(event, property);\n        };\n\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell padding=\"checkbox\">\n                        <Checkbox\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\n                            checked={rowCount > 0 && numSelected === rowCount}\n                            onChange={onSelectAllClick}\n                            inputProps={{ 'aria-label': 'select all users' }}\n                        />\n                    </TableCell>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            padding={headCell.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === headCell.id ? order : false}\n                        >\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={orderBy === headCell.id ? order : 'asc'}\n                                onClick={createSortHandler(headCell.id)}\n                            >\n                                {headCell.label}\n                                {orderBy === headCell.id ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    }\n\n    EnhancedTableHead.propTypes = {\n        classes: PropTypes.object.isRequired,\n        numSelected: PropTypes.number.isRequired,\n        onRequestSort: PropTypes.func.isRequired,\n        onSelectAllClick: PropTypes.func.isRequired,\n        order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    const useToolbarStyles = makeStyles((theme) => ({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1),\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                    color: theme.palette.secondary.main,\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n                }\n                : {\n                    color: theme.palette.text.primary,\n                    backgroundColor: theme.palette.secondary.dark,\n                },\n        title: {\n            flex: '1 1 100%',\n        },\n    }));\n\n    const EnhancedTableToolbar = (props) => {\n        const classes = useToolbarStyles();\n        const { numSelected } = props;\n\n        return (\n            <Toolbar\n                className={clsx(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                {numSelected > 0 ? (\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        List of Users\n                    </Typography>\n                )}\n\n                {numSelected > 0 &&\n                    <Tooltip title=\"Remove User(s)\">\n                        <IconButton aria-label=\"clear\">\n                            <ClearIcon />\n                        </IconButton>\n                    </Tooltip>\n                }\n            </Toolbar>\n        );\n    };\n\n    EnhancedTableToolbar.propTypes = {\n        numSelected: PropTypes.number.isRequired,\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }));\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const [filteredRows, setFilteredRows] = useState(rows);\n    const [searched, setSearched] = useState(\"\");\n\n    const requestSearch = (searchedVal) => {\n        const filter = rows.filter((row) => {\n            return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n        });\n        setFilteredRows(filter);\n    };\n\n    const cancelSearch = () => {\n        setSearched(\"\");\n        requestSearch(searched);\n    };\n\n    return (\n\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <SearchBar\n                    placeholder='Search Name'\n                    value={searched}\n                    onChange={(searchVal) => requestSearch(searchVal)}\n                    onCancelSearch={() => cancelSearch()}\n                />\n                <EnhancedTableToolbar numSelected={selected.length} />\n\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(filteredRows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell>{row.username}</TableCell>\n                                            <TableCell>{row.age}</TableCell>\n                                            <TableCell>{row.atRisk}</TableCell>\n                                            <TableCell>{row.city}</TableCell>\n                                            <TableCell>{row.state}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Minimize\"\n            />\n        </div>\n    );\n}\n\nexport default Users;","import React, { Component } from \"react\";\nimport {\n  Button,\n  Jumbotron,\n  Container,\n  Form,\n  Col,\n  Card,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n//https://www.vaccinespotter.org/api/\n//https://github.com/GUI/covid-vaccine-spotter\n\nexport default class Vaccine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zip: \"\",\n      distance: Number.MAX_SAFE_INTEGER, // any distance\n      locations: [],\n      noZipAlert: false,\n      noMatchAlert: false,\n    };\n  }\n\n  findVaccine = () => {\n    console.log(/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip));\n    if (!/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip)) {\n      this.setState({\n        noZipAlert: true,\n      });\n      return;\n    }\n    this.setState({\n      noZipAlert: false,\n      noMatchAlert: false,\n    });\n\n    const data = { zip: this.state.zip, distance: this.state.distance };\n    axios\n      .post(\"http://localhost:8080/location/vaccine\", data)\n      .then((response) => {\n        if (response.data == \"No match\") {\n          this.setState({\n            noMatchAlert: true,\n            locations: [],\n          });\n        } else {\n          this.setState({\n            locations: response.data,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for vaccines.</h1>\n            Always be sure to first check\n            <li>your states guidelines on eligibility</li>\n            <li>the availability of a vaccine at each location</li>\n            <li>and to schedule your appointment</li>\n            <br />\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    value={this.state.zip}\n                    onChange={(e) => this.setState({ zip: e.target.value })}\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Within</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"Any Distance\"\n                    onChange={(e) =>\n                      this.setState({ distance: e.target.value })\n                    }\n                  >\n                    <option value={Number.MAX_SAFE_INTEGER}>\n                      Any Distance\n                    </option>\n                    <option value={5}>5 miles</option>\n                    <option value={10}>10 miles</option>\n                    <option value={25}>25 miles</option>\n                    <option value={50}>50 miles</option>\n                    <option value={100}>100 miles</option>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findVaccine}\n            >\n              Find Vaccines\n            </Button>\n          </Container>\n        </Jumbotron>\n\n        <Container fluid className=\"justify-content-center\">\n          <Row className=\"justify-content-md-center mb-5\">\n            <Alert\n              show={this.state.noZipAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              Please enter a zip.\n            </Alert>\n            <Alert\n              show={this.state.noMatchAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              There are no matches for this area.\n            </Alert>\n          </Row>\n        </Container>\n\n        <Container fluid className=\"justify-content-center\">\n          {this.state.locations.map((place) => (\n            <Row className=\"justify-content-md-center mb-5\">\n              <Card\n                style={{ width: \"50%\", background: \"#408cb3\", color: \"white\" }}\n              >\n                <Card.Header>\n                  <h4>{place.provider_brand_name}</h4>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title>\n                    {place.address}, {place.city}, {place.state}\n                  </Card.Title>\n                  <Card.Text>\n                    Appointments available:{\" \"}\n                    {place.appointments_available ? <p>Yes</p> : <p>No</p>}\n                  </Card.Text>\n                  <Button\n                    style={{\n                      background: \"#5340b3\",\n                      border: \"#5340b3\",\n                    }}\n                  >\n                    <a style={{ color: \"white\" }} href={place.url}>\n                      Visit {place.provider_brand_name}'s site\n                    </a>\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          ))}\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nfunction ProtectedRoute({ component: Component, admin = false, ...rest }) {\n    const { authTokens } = useAuth();\n    try {\n        if (admin) {\n            const isAdmin = jwt(localStorage.getItem(\"CHT-tokens\"))?.user?.admin;\n            return (\n                <Route {...rest} render={props => authTokens && isAdmin\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: '/login',\n                        state: { referrer: rest.path }\n                    }} />} />\n            );\n        } else {\n            return (\n                <Route {...rest} render={props => authTokens\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: '/login',\n                        state: { referrer: rest.path }\n                    }} />} />\n            );\n        }\n    } catch (error) {\n        return (\n            <Redirect to={{\n                pathname: '/login',\n                state: { referrer: rest.path }\n            }} />\n        );\n    }\n}\n\nexport default ProtectedRoute;\n","import React, { useState } from \"react\";\nimport CHTNavbar from \"./components/CHTNavbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Settings from \"./pages/Settings\";\nimport Admin from \"./pages/Admin\";\nimport Testing from \"./pages/Testing\";\nimport Users from \"./pages/Users\"\nimport Vaccine from \"./pages/Vaccine\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { AuthContext } from \"./context/auth\";\n\nconst CHT_TOKENS = \"CHT-tokens\";\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(CHT_TOKENS));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(CHT_TOKENS, JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n        <Router>\n          <CHTNavbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/testing\">\n              <Testing />\n            </Route>\n            <Route exact path=\"/vaccine\">\n              <Vaccine />\n            </Route>\n            <ProtectedRoute exact path=\"/admin\" component={Admin} admin={true} />\n            <ProtectedRoute exact path=\"/admin/users\" component={Users} admin={true} />\n            <ProtectedRoute exact path=\"/profile\" component={Profile} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}