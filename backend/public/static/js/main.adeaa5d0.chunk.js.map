{"version":3,"sources":["context/auth.js","components/CHTNavbar.js","images/covid.jpg","images/covidtesting.jpg","images/covidvaccine.jpg","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Profile.js","pages/Settings.js","pages/Admin.js","pages/Testing.js","pages/Users.js","pages/Vaccine.js","pages/News.js","images/northAmerica.png","images/southAmerica.png","images/europe.png","images/asia.png","images/africa.png","images/australia.png","pages/Data.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","CHTNavbar","setAuthTokens","token","existingTokens","JSON","parse","localStorage","getItem","getToken","admin","jwt","user","Navbar","sticky","style","background","variant","to","Brand","href","Nav","className","Link","onClick","Home","Jumbotron","fluid","height","Container","color","Button","size","border","Row","Col","md","paddingLeft","Card","Img","src","covid","maxHeight","Body","Title","Text","paddingRight","covidTesting","covidVaccine","Login","props","useState","isLoggedIn","setLoggedIn","isError","setIsError","isAdmin","setIsAdmin","username","setUsername","password","setPassword","referrer","location","state","event","a","preventDefault","fetch","method","headers","body","stringify","response","json","data","status","padding","width","margin","Form","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","block","disabled","length","Alert","Signup","isSignedUp","setSignedUp","errorMessage","setErrorMessage","first_name","setFirst_name","last_name","setLast_name","age","setAge","city","setCity","setState","validateForm","errorMsg","push","map","message","Profile","currentUser","showSymptom","setShowSymptom","showTest","setShowTest","showAddInfo","setAddInfo","symptomEditScreen","setSymptomEditScreen","testEditScreen","setTestEditScreen","currentID","setCurrentID","showTempAlert","setShowTempAlert","showConfirmation","setShowConfirmation","currentInput","setCurrentInput","temperature","setTemperature","cough","setCough","shortnessOfBreath","setShortnessOfBreath","fatigue","setFatigue","muscleBodyAches","setMuscleBodyAches","lossOfTaste","setLossOfTaste","soreThroat","setSoreThroat","congestion","setCongestion","nausea","setNausea","other","setOther","symptoms","setSymptoms","symptomColumns","React","useMemo","Header","id","accessor","d","date","substring","shortBreath","bodyAche","tasteLoss","testColumns","Styles","styled","div","Date","setDate","testResult","setTestResult","testType","setTestType","testResults","setTestResults","showResults","setShowResults","covidResults","setCovidResults","severity","setSeverity","reset","getSymptoms","axios","post","then","catch","err","console","error","getTestResults","tests","useEffect","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","Table","columns","useTable","useRowSelect","hooks","visibleColumns","Cell","row","rows","filter","isSelected","getToggleRowSelectedProps","checked","readOnly","getTableProps","getTableBodyProps","headerGroups","prepareRow","selectedFlatRows","selectedRowIds","ButtonGroup","selectedRow","undefined","original","test","congest","textid","log","result","editRow","index","deleteRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","Accordion","Toggle","as","eventKey","Collapse","rS","atRisk","getResults","show","onClose","dismissible","Heading","Modal","onHide","backdrop","keyboard","Footer","Check","label","isNaN","submitSymptoms","selected","dateFormat","submitTestResults","placeholder","submitSymptomEdit","submitTestEdit","Settings","firstName","setFirstName","lastName","setLastName","setAtRisk","success","setSuccess","getProfile","patchProfile","args","populateProfile","callback","Admin","url","users","setUsers","isLoading","setLoading","arr","name","useFetch","pathname","mapStyles","Testing","findNearby","navigator","permissions","query","showAlert","pos","currentPosition","places","results","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","lat","lng","geolocation","getCurrentPosition","position","prevState","coords","latitude","longitude","this","google","zoom","initialCenter","center","item","geometry","address","formatted_address","visible","Component","GoogleApiWrapper","apiKey","process","Users","useLocation","setRows","descendingComparator","b","orderBy","headCells","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","root","spacing","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","Tooltip","IconButton","handleDelete","newRows","includes","requestSearch","searched","setSelected","deleteUsers","paper","marginBottom","table","minWidth","clip","overflow","top","useStyles","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","filteredRows","setFilteredRows","emptyRows","Math","min","setSearched","searchedVal","toLowerCase","Paper","searchVal","onCancelSearch","TableContainer","aria-labelledby","aria-label","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","Vaccine","findVaccine","zip","noZipAlert","noMatchAlert","distance","locations","Number","MAX_SAFE_INTEGER","defaultValue","place","provider_brand_name","appointments_available","News","news","setNews","today","curDate","formatDate","getTime","input","getFullYear","getMonth","getDate","articles","openInNewTab","newWindow","window","open","opener","Media","urlToImage","alt","Badge","source","onMouseEnter","cursor","textDecoration","onMouseOver","onMouseOut","fontWeight","fontSize","content","publishedAt","article","paddingTop","paddingBottom","Data","mapHandler","stateList","AZ","AL","AK","AR","CA","CO","CT","DC","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","AS","GU","MP","PR","VI","UM","abbr","dataset","stateName","stateData","states","forEach","clickedState","stateModal","continents","images","Map","set","northAmerica","southAmerica","europe","asia","africa","australia","Promise","all","get","result1","result2","dataTitleStyle","fontFamily","dataValueStyle","dataItemStyle","continentStyle","marginTop","continent","textAlign","Image","left","transform","bottom","cases","deaths","recovered","todayCases","todayDeaths","ProtectedRoute","authTokens","path","CHT_TOKENS","App","Provider","setItem","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"+OAEaA,EAAcC,0BAEpB,SAASC,IACZ,OAAOC,qBAAWH,G,mBCgEPI,EAhEG,WAAO,IACfC,EAAkBH,IAAlBG,cACFC,EAON,WACE,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,eACvD,cAAOJ,QAAP,IAAOA,OAAP,EAAOA,EAAgBD,MATXM,GACRC,EAASP,EAASQ,YAAIJ,aAAaC,QAAQ,eAAeI,KAAKF,MAAQ,EAW7E,OACE,eAACG,EAAA,EAAD,CAAQC,OAAO,MAAMC,MAAO,CAAEC,WAAY,WAAaC,QAAQ,OAA/D,UACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,QAAnB,oCAEF,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACc,IAAVZ,GACA,cAAC,gBAAD,CAAeQ,GAAG,SAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,sBAGJ,cAAC,gBAAD,CAAeL,GAAG,WAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,wBAEF,cAAC,gBAAD,CAAeL,GAAG,QAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,qBAEF,cAAC,gBAAD,CAAeL,GAAG,WAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,wBAEF,cAAC,gBAAD,CAAeL,GAAG,WAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,wBAEF,cAAC,gBAAD,CAAeL,GAAG,QAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,wBAGJ,cAACF,EAAA,EAAD,UACGlB,EACC,qCACE,cAAC,gBAAD,CAAee,GAAG,YAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,yBAEF,cAACF,EAAA,EAAIE,KAAL,CAAUC,QA1CpB,WACEtB,EAAc,OAyCN,uBAGF,qCACE,cAAC,gBAAD,CAAegB,GAAG,UAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,uBAEF,cAAC,gBAAD,CAAeL,GAAG,SAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,+B,sEC5DC,MAA0B,kCCA1B,MAA0B,yCCA1B,MAA0B,yCC+I1BE,EA1IF,WACX,OACE,gCACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACZ,MAAO,CAAEC,WAAY,UAAWY,OAAQ,SAAzD,SACE,eAACC,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAO,SAA3B,UACE,yDACA,sDACA,wOAKA,cAACC,EAAA,EAAD,CACEX,KAAK,UACLY,KAAK,KACLjB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,WANZ,oBAUU,IACV,cAACF,EAAA,EAAD,CACEX,KAAK,SACLY,KAAK,KACLjB,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,WANZ,wBAcJ,cAACJ,EAAA,EAAD,CAAWF,OAAK,EAAhB,SACE,eAACO,EAAA,EAAD,CAAKZ,UAAU,4BAAf,UACE,cAACa,EAAA,EAAD,CAAKC,GAAI,EAAGrB,MAAO,CAAEsB,YAAa,KAAlC,SACE,eAACC,EAAA,EAAD,CAAMvB,MAAO,CAAEC,WAAY,WAA3B,UACE,cAACsB,EAAA,EAAKC,IAAN,CAAUtB,QAAQ,MAAMuB,IAAKC,EAAO1B,MAAO,CAAE2B,UAAW,OACxD,eAACJ,EAAA,EAAKK,KAAN,CAAW5B,MAAO,CAAEe,MAAO,SAA3B,UACE,cAACQ,EAAA,EAAKM,MAAN,4BACA,cAACN,EAAA,EAAKO,KAAN,wDACA,cAACd,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,WAJZ,kCAYN,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGrB,MAAO,CAAEsB,YAAa,GAAIS,aAAc,IAApD,SACE,eAACR,EAAA,EAAD,CAAMvB,MAAO,CAAEC,WAAY,WAA3B,UACE,cAACsB,EAAA,EAAKC,IAAN,CACEtB,QAAQ,MACRuB,IAAKO,EACLhC,MAAO,CAAE2B,UAAW,OAEtB,eAACJ,EAAA,EAAKK,KAAN,CAAW5B,MAAO,CAAEe,MAAO,SAA3B,UACE,cAACQ,EAAA,EAAKM,MAAN,sBACA,cAACN,EAAA,EAAKO,KAAN,kEAGA,cAACd,EAAA,EAAD,CACEX,KAAK,WACLL,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,WALZ,gCAaN,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGrB,MAAO,CAAE+B,aAAc,KAAnC,SACE,eAACR,EAAA,EAAD,CAAMvB,MAAO,CAAEC,WAAY,WAA3B,UACE,cAACsB,EAAA,EAAKC,IAAN,CACEtB,QAAQ,MACRuB,IAAKQ,EACLjC,MAAO,CAAE2B,UAAW,OAEtB,eAACJ,EAAA,EAAKK,KAAN,CAAW5B,MAAO,CAAEe,MAAO,SAA3B,UACE,cAACQ,EAAA,EAAKM,MAAN,mBACA,cAACN,EAAA,EAAKO,KAAN,8DAGA,cAACd,EAAA,EAAD,CACEX,KAAK,QACLL,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,WALZ,qCAgBV,uBAEA,cAACP,EAAA,EAAD,CAAWC,OAAK,EAACZ,MAAO,CAAEC,WAAY,UAAWY,OAAQ,SAAzD,SACE,eAACC,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAO,SAA3B,UACE,qDACA,6DACA,8KAKA,cAACC,EAAA,EAAD,CACEX,KAAK,WACLY,KAAK,KACLjB,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,WANZ,+BAUU,a,2CCtCLgB,MA1Ff,SAAeC,GAAQ,IAAD,EAEcC,oBAAS,GAFvB,mBAEbC,EAFa,KAEDC,EAFC,OAGUF,oBAAS,GAHnB,mBAGbG,EAHa,KAGJC,EAHI,OAIUJ,oBAAS,GAJnB,mBAIbK,EAJa,KAIJC,EAJI,OAKYN,mBAAS,IALrB,mBAKbO,EALa,KAKHC,EALG,OAMYR,mBAAS,IANrB,mBAMbS,EANa,KAMHC,EANG,KAOZ3D,EAAkBH,IAAlBG,cAEF4D,EAAWZ,EAAMa,SAASC,OAASd,EAAMa,SAASC,MAAMF,UAAY,IAE1E,GAAIN,EACF,OAAO,cAAC,IAAD,CAAUtC,GAAG,WAGtB,GAAIkC,EACF,OAAO,cAAC,IAAD,CAAUlC,GAAI4C,IAhBH,4CAuBpB,WAA4BG,GAA5B,qBAAAC,EAAA,6DACED,EAAME,iBADR,kBAI2BC,MAAM,mCAAoC,CAC/DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMlE,KAAKmE,UAAU,CACnBd,WACAE,eAXR,cAIUa,EAJV,gBAcuBA,EAASC,OAdhC,OAcUC,EAdV,OAe4B,MAApBF,EAASG,QACX1E,EAAcyE,GACdlB,EAAU,UAAC9C,YAAIJ,aAAaC,QAAQ,sBAA1B,iBAAC,EAAyCI,YAA1C,aAAC,EAA+CF,OAC1D2C,GAAY,IAEZE,GAAW,GApBjB,kDAuBIA,GAAW,GAvBf,2DAvBoB,sBAkDpB,OACE,qBAAKxC,MAAO,CAAE8D,QAAS,UAAvB,SACE,cAACvC,EAAA,EAAD,CAAMvB,MAAO,CAAE+D,MAAO,QAASC,OAAQ,UAAvC,SACE,eAACzC,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UACE,yCAEF,eAACoC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,WAAhC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,WAAS,EACTC,KAAK,WACLC,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAO9B,EAAY8B,EAAEC,OAAOH,aAG1C,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,WAAhC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACEE,KAAK,WACLC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,aAG1C,cAACxD,EAAA,EAAD,CAAQ4D,OAAK,EAAC3D,KAAK,KAAKsD,KAAK,SAASM,WAvDvClC,EAASmC,OAAS,GAAKjC,EAASiC,OAAS,GAuDyBrE,QA3EvD,4CA2EV,sBAIF,uBACC8B,GAAW,cAACwC,EAAA,EAAD,CAAO7E,QAAQ,SAAf,+DACZ,cAAC,gBAAD,CAAeC,GAAG,UAAlB,SACE,cAACoB,EAAA,EAAKf,KAAN,2CC0FGwE,I,EAAAA,EA7Kf,WAAmB,IAAD,EACoB5C,oBAAS,GAD7B,mBACP6C,EADO,KACKC,EADL,OAE0B9C,mBAAS,IAFnC,mBAEP+C,EAFO,KAEOC,EAFP,OAGkBhD,mBAAS,IAH3B,mBAGPO,EAHO,KAGGC,EAHH,OAIkBR,mBAAS,IAJ3B,mBAIPS,EAJO,KAIGC,EAJH,OAKsBV,mBAAS,IAL/B,mBAKPiD,EALO,KAKKC,EALL,OAMoBlD,mBAAS,IAN7B,mBAMPmD,EANO,KAMIC,EANJ,OAOQpD,mBAAS,IAPjB,mBAOPqD,EAPO,KAOFC,EAPE,OAQUtD,mBAAS,IARnB,mBAQPuD,EARO,KAQDC,EARC,OASYxD,mBAAS,IATrB,mBASPa,EATO,KASA4C,EATA,KAUN1G,EAAkBH,IAAlBG,cAER,GAAI8F,EACA,OAAO,cAAC,IAAD,CAAU9E,GAAG,aAGxB,SAAS2F,IACL,IAAMC,EAAW,GA4BjB,GA3BiB,KAAbpD,GACAoD,EAASC,KAAK,4BAED,KAAbnD,GACAkD,EAASC,KAAK,4BAEC,KAAfX,GACAU,EAASC,KAAK,8BAEA,KAAdT,GACAQ,EAASC,KAAK,6BAEN,KAARP,GACAM,EAASC,KAAK,uBAEdP,GAAO,GACPM,EAASC,KAAK,yCAEL,KAATL,GACAI,EAASC,KAAK,wBAEJ,KAAV/C,GACA8C,EAASC,KAAK,yBAEG,IAAjB/C,EAAM6B,QACNiB,EAASC,KAAK,2CAEM,IAApBD,EAASjB,OACT,OAAO,EAEPM,EACI,qCACI,oDACA,6BACKW,EAASE,KAAI,SAAAvB,GAAC,OAAK,6BAAKA,aApD/B,4CA2Dd,WAA4BxB,GAA5B,iBAAAC,EAAA,yDACID,EAAME,iBACD0C,IAFT,0EAM+BzC,MAAM,oCAAqC,CAC9DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMlE,KAAKmE,UAAU,CACjBd,WACAE,WACAwC,aACAE,YACAE,MACAE,OACA1C,YAlBhB,cAMcS,EANd,gBAqB2BA,EAASC,OArBpC,OAqBcC,EArBd,OAsBgC,MAApBF,EAASG,QACT1E,EAAcyE,GACdsB,GAAY,GACZE,EAAgB,KAEhBA,EAAgB,+BAAOxB,EAAKsC,WA3BxC,kDA8BQd,EAAgB,2EA9BxB,2DA3Dc,sBA6Fd,OACI,qBAAKpF,MAAO,CAAE8D,QAAS,UAAvB,SACI,cAACvC,EAAA,EAAD,CAAMvB,MAAO,CAAE+D,MAAO,QAASC,OAAQ,UAAvC,SACI,eAACzC,EAAA,EAAKK,KAAN,WACI,cAACL,EAAA,EAAKM,MAAN,UACI,2CAEJ,eAACoC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,WAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACIC,WAAS,EACTC,KAAK,WACLC,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAO9B,EAAY8B,EAAEC,OAAOH,aAG9C,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,WAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,WACLC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,aAG9C,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,aAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,OACLC,MAAOa,EACPZ,SAAU,SAACC,GAAD,OAAOY,EAAcZ,EAAEC,OAAOH,aAGhD,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,YAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,OACLC,MAAOe,EACPd,SAAU,SAACC,GAAD,OAAOc,EAAad,EAAEC,OAAOH,aAG/C,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,MAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,kBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,SACLC,MAAOiB,EACPhB,SAAU,SAACC,GAAD,OAAOgB,EAAOhB,EAAEC,OAAOH,aAGzC,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,OAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,OACLC,MAAOmB,EACPlB,SAAU,SAACC,GAAD,OAAOkB,EAAQlB,EAAEC,OAAOH,aAG1C,eAACP,EAAA,EAAKC,MAAN,CAAYjD,KAAK,KAAKkD,UAAU,QAAhC,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOmB,EAASnB,EAAEC,OAAOH,aAG3C,cAACxD,EAAA,EAAD,CAAQ4D,OAAK,EAAC3D,KAAK,KAAKsD,KAAK,SAAS9D,QA9J5C,4CA8JM,wBAIJ,uBACkB,KAAjB0E,GAAuB,cAACJ,EAAA,EAAD,CAAO7E,QAAQ,SAAf,SAAyBiF,IACjD,cAAC,gBAAD,CAAehF,GAAG,SAAlB,SACI,cAACoB,EAAA,EAAKf,KAAN,wD,4HC65BT2F,EAljCC,WAAO,IAAD,EACdC,EAAcxG,YAAIJ,aAAaC,QAAQ,eAAeI,KAAKA,KAD7C,EAIkBuC,oBAAS,GAJ3B,mBAIbiE,EAJa,KAIAC,EAJA,OAKYlE,oBAAS,GALrB,mBAKbmE,EALa,KAKHC,EALG,OAMcpE,oBAAS,GANvB,mBAMbqE,EANa,KAMAC,EANA,OAO8BtE,oBAAS,GAPvC,mBAObuE,EAPa,KAOMC,EAPN,OAQwBxE,oBAAS,GARjC,mBAQbyE,EARa,KAQGC,EARH,OASc1E,mBAAS,IATvB,mBASb2E,EATa,KASFC,EATE,OAWsB5E,oBAAS,GAX/B,oBAWb6E,GAXa,MAWEC,GAXF,SAY4B9E,oBAAS,GAZrC,qBAYb+E,GAZa,MAYKC,GAZL,SAcoBhF,oBAAS,GAd7B,qBAcbiF,GAda,MAcCC,GAdD,SAiBkBlF,mBAAS,IAjB3B,qBAiBbmF,GAjBa,MAiBAC,GAjBA,SAkBMpF,oBAAS,GAlBf,qBAkBbqF,GAlBa,MAkBNC,GAlBM,SAmB8BtF,oBAAS,GAnBvC,qBAmBbuF,GAnBa,MAmBMC,GAnBN,SAoBUxF,oBAAS,GApBnB,qBAoBbyF,GApBa,MAoBJC,GApBI,SAqB0B1F,oBAAS,GArBnC,qBAqBb2F,GArBa,MAqBIC,GArBJ,SAsBkB5F,oBAAS,GAtB3B,qBAsBb6F,GAtBa,MAsBAC,GAtBA,SAuBgB9F,oBAAS,GAvBzB,qBAuBb+F,GAvBa,MAuBDC,GAvBC,SAwBgBhG,oBAAS,GAxBzB,qBAwBbiG,GAxBa,MAwBDC,GAxBC,SAyBQlG,oBAAS,GAzBjB,qBAyBbmG,GAzBa,MAyBLC,GAzBK,SA0BMpG,mBAAS,IA1Bf,qBA0BbqG,GA1Ba,MA0BNC,GA1BM,SA4BYtG,mBAAS,IA5BrB,qBA4BbuG,GA5Ba,MA4BHC,GA5BG,MA8BdC,GAAiBC,IAAMC,SAC3B,iBAAM,CACJ,CACEC,OAAQ,OACRC,GAAI,OACJC,SAAU,SAACC,GAAD,OAAOA,EAAEC,KAAKC,UAAU,EAAG,MAEvC,CACEL,OAAQ,OACRE,SAAU,eAEZ,CACEF,OAAQ,QACRC,GAAI,QACJC,SAAU,SAACC,GAAD,OAAQA,EAAE1B,MAAQ,MAAQ,OAEtC,CACEuB,OAAQ,sBACRC,GAAI,cACJC,SAAU,SAACC,GAAD,OAAQA,EAAEG,YAAc,MAAQ,OAE5C,CACEN,OAAQ,UACRC,GAAI,UACJC,SAAU,SAACC,GAAD,OAAQA,EAAEtB,QAAU,MAAQ,OAExC,CACEmB,OAAQ,oBACRC,GAAI,WACJC,SAAU,SAACC,GAAD,OAAQA,EAAEI,SAAW,MAAQ,OAEzC,CACEP,OAAQ,gBACRC,GAAI,YACJC,SAAU,SAACC,GAAD,OAAQA,EAAEK,UAAY,MAAQ,OAE1C,CACER,OAAQ,cACRC,GAAI,aACJC,SAAU,SAACC,GAAD,OAAQA,EAAEhB,WAAa,MAAQ,OAE3C,CACEa,OAAQ,aACRC,GAAI,aACJC,SAAU,SAACC,GAAD,OAAQA,EAAEd,WAAa,MAAQ,OAE3C,CACEW,OAAQ,SACRC,GAAI,SACJC,SAAU,SAACC,GAAD,OAAQA,EAAEZ,OAAS,MAAQ,OAEvC,CACES,OAAQ,QACRE,SAAU,YAGd,IAGIO,GAAcX,IAAMC,SACxB,iBAAM,CACJ,CACEC,OAAQ,OACRC,GAAI,OACJC,SAAU,SAACC,GAAD,OAAOA,EAAEC,KAAKC,UAAU,EAAG,MAEvC,CACEL,OAAQ,OACRE,SAAU,QAEZ,CACEF,OAAQ,SACRE,SAAU,aAGd,IAGIQ,GAASC,IAAOC,IAAV,wdA5GQ,GA0IIxH,mBAAS,IAAIyH,MA1IjB,qBA0IbT,GA1Ia,MA0IPU,GA1IO,SA2IgB1H,mBAAS,YA3IzB,qBA2Ib2H,GA3Ia,MA2IDC,GA3IC,SA4IY5H,mBAAS,IA5IrB,qBA4Ib6H,GA5Ia,MA4IHC,GA5IG,SA8IkB9H,mBAAS,IA9I3B,qBA8Ib+H,GA9Ia,MA8IAC,GA9IA,SAgJkBhI,oBAAS,GAhJ3B,qBAgJbiI,GAhJa,MAgJAC,GAhJA,SAiJoBlI,mBAAS,IAjJ7B,qBAiJbmI,GAjJa,MAiJCC,GAjJD,SAkJYpI,mBAAS,IAlJrB,qBAkJbqI,GAlJa,MAkJHC,GAlJG,MAoMpB,SAASC,KACPnD,GAAe,IACfE,IAAS,GACTE,IAAqB,GACrBE,IAAW,GACXE,IAAmB,GACnBE,IAAe,GACfE,IAAc,GACdE,IAAc,GACdE,IAAU,GACVE,GAAS,IACToB,GAAQ,IAAID,MACZK,GAAY,IACZF,GAAc,YAGhB,SAASY,KACP,OAAOC,IACJC,KAAK,yCAA0C,CAAEnI,SAAUyD,IAC3D2E,MAAK,SAACrH,GACLkF,GAAYlF,EAASE,KAAK+E,aAE3BqC,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAoCpB,SAASG,KACP,OAAOP,IACJC,KAAK,sCAAuC,CAAEnI,SAAUyD,IACxD2E,MAAK,SAACrH,GACL0G,GAAe1G,EAASE,KAAKyH,UAE9BL,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAlHpBK,qBAAU,WACRV,KACAQ,OACC,IAwIH,IAAMG,GAAwBzC,IAAM0C,YAClC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAa9C,IAAM+C,SACnBC,EAAcL,GAAOG,EAM3B,OAJA9C,IAAMwC,WAAU,WACdQ,EAAYC,QAAQL,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,mCACE,mCAAOnH,KAAK,WAAWkH,IAAKK,GAAiBH,SAMrD,SAASK,GAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASrI,EAAQ,EAARA,KAAQ,EAU5BsI,mBACF,CACED,UACArI,QAEFuI,gBACA,SAACC,GACCA,EAAMC,eAAerG,MAAK,SAACiG,GAAD,OACxB,CACEhD,GAAI,YACJD,OAAQ,kBAAM,yBACdsD,KAAM,YAAc,IAAXC,EAAU,EAAVA,IACP,OACEC,EAAKC,QAAO,SAACF,GAAD,OAASA,EAAIG,cAAY5H,OAAS,GAC9CyH,EAAIG,WAGF,8BACE,cAACnB,GAAD,eACMgB,EAAII,gCAMZ,8BACE,cAACpB,GAAD,CACEqB,SAAS,EACTC,UAAQ,EACR7M,MAAOuM,EAAII,4BAA4B3M,aAtB3B,mBA6BrBiM,UA3CPa,EAH8B,EAG9BA,cACAC,EAJ8B,EAI9BA,kBACAC,EAL8B,EAK9BA,aACAR,EAN8B,EAM9BA,KACAS,EAP8B,EAO9BA,WACAC,EAR8B,EAQ9BA,iBAR8B,EAS9BjK,MAASkK,eA2CX,OACE,qCACE,eAACC,EAAA,EAAD,WACE,cAACpM,EAAA,EAAD,CAAQd,QAAQ,YAAYO,QAAS,kBA2C7C,SAAiB4M,GACf,GAA0B,GAAtBA,EAAYvI,OACd,YAEmCwI,IAAjCD,EAAY,GAAGE,SAASC,MAC1BhG,GAAe6F,EAAY,GAAGE,SAAShG,aACvCG,GAAS2F,EAAY,GAAGE,SAAS9F,OACjCG,GAAqByF,EAAY,GAAGE,SAASjE,aAC7CxB,GAAWuF,EAAY,GAAGE,SAAS1F,SACnCG,GAAmBqF,EAAY,GAAGE,SAAShE,UAC3CrB,GAAemF,EAAY,GAAGE,SAAS/D,WACvCpB,GAAciF,EAAY,GAAGE,SAASpF,YACtCG,GAAc+E,EAAY,GAAGE,SAASE,SACtCjF,GAAU6E,EAAY,GAAGE,SAAShF,QAClCG,GAAS2E,EAAY,GAAGE,SAAS9E,OACjCzB,EAAaqG,EAAY,GAAGE,SAASG,QACrC9G,GAAqB,KAErBsE,QAAQyC,IAAIN,EAAY,GAAGE,UAC3BrD,GAAYmD,EAAY,GAAGE,SAASC,MACpC1D,GAAQ,IAAID,KAAKwD,EAAY,GAAGE,SAASnE,OACzCY,GAAcqD,EAAY,GAAGE,SAASK,QACtC5G,EAAaqG,EAAY,GAAGE,SAASG,QACrC5G,GAAkB,IAlE6B+G,CAAQX,IAAnD,kBAGA,cAAClM,EAAA,EAAD,CACEd,QAAQ,YACRO,QAAS,kBAkHnB,SAAmB4M,GACjB,GAA0B,GAAtBA,EAAYvI,OACd,OAEF,QAAqCwI,IAAjCD,EAAY,GAAGE,SAASC,KAAoB,CAC9C,IAAM5J,EAAO,CACXqF,GAAIN,GAAS0E,EAAY,GAAGS,OAAOJ,QAErC,OAAO7C,IACJC,KAAK,8CAA+ClH,GACpDmH,MAAK,SAACrH,GACL4D,GAAgB,0CAChBF,IAAoB,GACpBwD,QAEDI,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAGlB,IAAMrH,EAAO,CACXqF,GAAIkB,GAAYkD,EAAY,GAAGS,OAAOJ,QAExC,OAAO7C,IACJC,KAAK,2CAA4ClH,GACjDmH,MAAK,SAACrH,GACL4D,GAAgB,0CAChBF,IAAoB,GACpBgE,QAEDJ,OAAM,SAACC,GACNC,QAAQC,MAAMF,MAhJG8C,CAAUb,IAF3B,uBAOF,uBACA,uBACA,kDAAWJ,KAAX,cACE,gCACGE,EAAa/G,KAAI,SAAC+H,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYzK,QAAQ0C,KAAI,SAACiI,GAAD,OACvB,8CAAQA,EAAOC,kBAAf,aACGD,EAAOE,OAAO,wBAMzB,iDAAWrB,KAAX,aACGP,EAAKvG,KAAI,SAACsG,EAAK8B,GAEd,OADApB,EAAWV,GAET,8CAAQA,EAAI+B,eAAZ,aACG/B,EAAIgC,MAAMtI,KAAI,SAACuI,GACd,OACE,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKJ,OAAO,8BA2H9D,OACE,qCACE,cAACzN,EAAA,EAAD,CAAWC,OAAK,EAACZ,MAAO,CAAEC,WAAY,WAAtC,SACE,cAACa,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAO,SAA3B,SACE,yCAAYqF,SAGhB,cAACtF,EAAA,EAAD,CAAWF,OAAK,EAAhB,SACE,eAACO,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,eAACsN,EAAA,EAAD,WACE,eAACnN,EAAA,EAAD,CACEvB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,SAJZ,UAOE,cAACK,EAAA,EAAKyH,OAAN,UACE,cAAC0F,EAAA,EAAUC,OAAX,CACEC,GAAI5N,IACJd,QAAQ,OACR2O,SAAS,IACT7O,MAAO,CAAEe,MAAO,SAJlB,4BASF,cAAC2N,EAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,eAACtN,EAAA,EAAKK,KAAN,CAAW5B,MAAO,CAAEC,WAAY,WAAhC,qNAKE,uBACA,uBACA,cAACe,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,WAEVT,QAAS,kBAAM6F,GAAe,IANhC,kCAaN,eAAC/E,EAAA,EAAD,CACEvB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,SAJZ,UAOE,cAACK,EAAA,EAAKyH,OAAN,UACE,cAAC0F,EAAA,EAAUC,OAAX,CACEC,GAAI5N,IACJd,QAAQ,OACR2O,SAAS,IACT7O,MAAO,CAAEe,MAAO,SAJlB,gCASF,cAAC2N,EAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,eAACtN,EAAA,EAAKK,KAAN,CAAW5B,MAAO,CAAEC,WAAY,WAAhC,mCAEE,uEACA,2JAKA,qQAMA,uJAIA,uBACA,cAACe,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,WAEVT,QAAS,kBAAM+F,GAAY,IAN7B,sCAaN,eAACjF,EAAA,EAAD,CACEvB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,SAJZ,UAOE,cAACK,EAAA,EAAKyH,OAAN,UACE,cAAC0F,EAAA,EAAUC,OAAX,CACEC,GAAI5N,IACJd,QAAQ,OACR2O,SAAS,IACT7O,MAAO,CAAEe,MAAO,SAJlB,oCASF,cAAC2N,EAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,eAACtN,EAAA,EAAKK,KAAN,CAAW5B,MAAO,CAAEC,WAAY,WAAhC,4EAGE,8CACA,gEAJF,gGAOE,uBACA,uBACA,cAACe,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,WAEVT,QAAS,kBAAMiG,GAAW,IAN5B,6CAcR,uBACA,cAACnF,EAAA,EAAD,UACE,eAACA,EAAA,EAAKK,KAAN,WACE,sGAIA,mDACA,0EACA,+CACA,iEACA,mHAMJ,0BAEF,eAACR,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACF,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,cAACS,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,UACZc,MAAO,QACPG,OAAQ,WAEVT,QAAS,YA/gBvB,WACE,GAAuB,GAAnBkI,GAAS7D,OAAb,CAKA,IAAIiK,EAAKpG,GAASA,GAAS7D,OAAS,GAElCiK,EAAGxH,aAAe,OAClBwH,EAAGtH,OACHsH,EAAGzF,aACHyF,EAAGxF,UACHwF,EAAGtB,SACHsB,EAAGlH,SACHkH,EAAGxG,QACHwG,EAAG5G,YACH4G,EAAGvF,WAEHgB,GACE,uLAEFK,IACGC,KAAK,2CAA4C,CAChDnI,SAAUyD,IAEX2E,MAAK,SAACrH,GACDA,EAASE,KAAK,GAAG6B,KAAO,IAAM/B,EAASE,KAAK,GAAGoL,OACjDtE,GAAY,mNAEZA,GAAY,gFAGfM,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAGlBT,GACE,uKAEFE,GAAY,mFArCZF,GAAgB,gCA8gBJyE,GACA3E,IAAe,IARnB,6BAcF,uBACA,cAACnJ,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,cAACwE,EAAA,EAAD,CACEmK,KAAM/H,GACNjH,QAAQ,UACRiP,QAAS,kBAAM/H,IAAoB,IACnCgI,aAAW,EAJb,SAME,cAACrK,EAAA,EAAMsK,QAAP,UAAgBhI,SAGpB,uBACA,cAAClG,EAAA,EAAD,UACE,cAACuI,GAAD,UACE,cAACsC,GAAD,CAAOC,QAASpD,GAAgBjF,KAAM+E,SAG1C,cAACxH,EAAA,EAAD,UACE,cAACuI,GAAD,UACE,cAACsC,GAAD,CAAOC,QAASxC,GAAa7F,KAAMuG,iBAO7C,eAACmF,EAAA,EAAD,CACEJ,KAAM7E,GACNkF,OAAQ,kBAAMjF,IAAe,IAC7BkF,SAAS,SACTC,UAAU,EAJZ,UAME,eAACH,EAAA,EAAM1N,KAAP,WACE,4BACE,+CAAkB2I,QAEpB,4BACE,iCAASE,UAGb,cAAC6E,EAAA,EAAMI,OAAP,UACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,kBAAM6J,IAAe,IAFhC,wBASJ,eAACgF,EAAA,EAAD,CACEJ,KAAM7I,EACNkJ,OAAQ,kBAAMjJ,GAAe,IAC7BkJ,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMtG,OAAP,UACE,cAACsG,EAAA,EAAMzN,MAAP,6BAEF,cAACyN,EAAA,EAAM1N,KAAP,UACE,eAACqC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,cAAcI,KAAK,SAAzC,UACE,cAACN,EAAA,EAAKG,MAAN,2CACA,cAACH,EAAA,EAAKI,QAAN,CAAcI,SAAU,SAACC,GAAD,OAAO8C,GAAe9C,EAAEC,OAAOH,aAEzD,cAACO,EAAA,EAAD,CAAOmK,KAAMjI,GAAe/G,QAAQ,SAApC,SACE,oEAEF,uBACA,iFACA,cAAC+D,EAAA,EAAK0L,MAAN,CAAYC,MAAO,QAASnL,SAAU,SAACC,GAAD,OAAOgD,IAAUD,OACvD,cAACxD,EAAA,EAAK0L,MAAN,CACEC,MAAO,sBACPnL,SAAU,SAACC,GAAD,OAAOkD,IAAsBD,OAEzC,cAAC1D,EAAA,EAAK0L,MAAN,CACEC,MAAO,UACPnL,SAAU,SAACC,GAAD,OAAOoD,IAAYD,OAE/B,cAAC5D,EAAA,EAAK0L,MAAN,CACEC,MAAO,uBACPnL,SAAU,SAACC,GAAD,OAAOsD,IAAoBD,OAEvC,cAAC9D,EAAA,EAAK0L,MAAN,CACEC,MAAO,gBACPnL,SAAU,SAACC,GAAD,OAAOwD,IAAgBD,OAEnC,cAAChE,EAAA,EAAK0L,MAAN,CACEC,MAAO,cACPnL,SAAU,SAACC,GAAD,OAAO0D,IAAeD,OAElC,cAAClE,EAAA,EAAK0L,MAAN,CACEC,MAAO,2BACPnL,SAAU,SAACC,GAAD,OAAO4D,IAAeD,OAElC,cAACpE,EAAA,EAAK0L,MAAN,CAAYC,MAAO,SAAUnL,SAAU,SAACC,GAAD,OAAO8D,IAAWD,OACzD,eAACtE,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAAQI,KAAK,OAAnC,UACE,cAACN,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcI,SAAU,SAACC,GAAD,OAAOgE,GAAShE,EAAEC,OAAOH,kBAIvD,eAAC8K,EAAA,EAAMI,OAAP,WACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,WACP6F,GAAe,GACfY,IAAiB,IAJrB,mBASA,cAAClG,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,UAAWiB,OAAQ,WACxCT,QAAS,YAnkBnB,WACE,GAA0B,GAAtB8G,GAAYzC,SAAe+K,MAAMtI,IAArC,CAIA,IAAM3D,EAAO,CACXjB,SAAUyD,EACVmB,YAAaA,GACbE,MAAOA,GACP6B,YAAa3B,GACbE,QAASA,GACT0B,SAAUxB,GACVyB,UAAWvB,GACXE,WAAYA,GACZE,WAAYA,GACZE,OAAQA,GACRE,MAAOA,IAET,OAAOoC,IACJC,KAAK,+CAAgDlH,GACrDmH,MAAK,SAACrH,GACLkH,KACAtD,GAAgB,mDAChBF,IAAoB,GACpBd,GAAe,GACfqE,QAEDK,OAAM,SAACC,GACNC,QAAQC,MAAMF,MA1BhB/D,IAAiB,GAkkBT4I,IAHJ,0BAWJ,eAACR,EAAA,EAAD,CACEJ,KAAM3I,EACNgJ,OAAQ,kBAAM/I,GAAY,IAC1BgJ,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMtG,OAAP,UACE,cAACsG,EAAA,EAAMzN,MAAP,iCAEF,cAACyN,EAAA,EAAM1N,KAAP,UACE,eAACqC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWI,KAAK,OAAtC,UACE,cAACN,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcI,SAAU,SAACC,GAAD,OAAOwF,GAAYxF,EAAEC,OAAOH,aAEtD,cAAC,IAAD,CACEuL,SAAU3G,GACV3E,SAAU,SAAC2E,GAAD,OAAUU,GAAQV,IAC5B4G,WAAW,eAEb,uBACA,uBACA,eAAC/L,EAAA,EAAKI,QAAN,CACEuK,GAAG,SACHpK,MAAO,WACPC,SAAU,SAACC,GAAD,OAAOsF,GAActF,EAAEC,OAAOH,QAH1C,UAKE,wBAAQA,MAAO,WAAf,sBACA,wBAAQA,MAAO,WAAf,8BAIN,eAAC8K,EAAA,EAAMI,OAAP,WACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,kBAAM+F,GAAY,IAF7B,mBAMA,cAACxF,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,UAAWiB,OAAQ,WACxCT,QAAS,YA1kBnB,WACE,IAAMmD,EAAO,CACXjB,SAAUyD,EACVgD,KAAMA,GACN7E,KAAM0F,GACN2D,OAAQ7D,IAEHc,IACJC,KAAK,kDAAmDlH,GACxDmH,MAAK,SAACrH,GACL0H,KACAtB,GAAQ,IAAID,MACZvC,GAAgB,uDAChBF,IAAoB,GACpBuD,QAEDK,OAAM,SAACC,GACNC,QAAQC,MAAMF,MA0jBRgF,GACAzJ,GAAY,IAJhB,0BAYJ,eAAC8I,EAAA,EAAD,CACErO,KAAK,KACLiO,KAAMzI,EACN8I,OAAQ,kBAAM7I,GAAW,IACzB8I,SAAS,SACTC,UAAU,EALZ,UAOE,cAACH,EAAA,EAAMtG,OAAP,UACE,cAACsG,EAAA,EAAMzN,MAAP,qCAEF,eAACyN,EAAA,EAAM1N,KAAP,WACE,uBACA,2JAIA,wCACA,wDACA,6EACA,+CACA,uHAIA,8GAIA,2EAC2C,oCAD3C,2BAEe,oCAFf,OAIA,oEAC+B,oCAD/B,OAGA,0CACA,qDACA,yCACA,0DACA,uBACA,8JAIA,uBACA,qFAEF,eAAC0N,EAAA,EAAMI,OAAP,WACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,kBAAMiG,GAAW,IAF5B,mBAMA,cAAC,OAAD,CAAMvG,GAAG,YAAT,SACE,cAACa,EAAA,GAAD,GACEhB,MAAO,CAAEC,WAAY,UAAWiB,OAAQ,YAD1C,sBAES,CAAEjB,WAAY,UAAWiB,OAAQ,YAF1C,uDAUN,eAACoO,EAAA,EAAD,CACEJ,KAAMvI,EACN4I,OAAQ,kBAAM3I,GAAqB,IACnC4I,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMtG,OAAP,UACE,cAACsG,EAAA,EAAMzN,MAAP,6BAEF,cAACyN,EAAA,EAAM1N,KAAP,UACE,eAACqC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,cAAcI,KAAK,SAAzC,UACE,cAACN,EAAA,EAAKG,MAAN,2CACA,cAACH,EAAA,EAAKI,QAAN,CACE6L,YAAa3I,GACb9C,SAAU,SAACC,GAAD,OAAO8C,GAAe9C,EAAEC,OAAOH,aAG7C,cAACO,EAAA,EAAD,CAAOmK,KAAMjI,GAAe/G,QAAQ,SAApC,SACE,oEAEF,uBACA,iFACA,cAAC+D,EAAA,EAAK0L,MAAN,CACEC,MAAO,QACPnL,SAAU,SAACC,GAAD,OAAOgD,IAAUD,KAC3BmF,QAASnF,KAEX,cAACxD,EAAA,EAAK0L,MAAN,CACEC,MAAO,sBACPnL,SAAU,SAACC,GAAD,OAAOkD,IAAsBD,KACvCiF,QAASjF,KAEX,cAAC1D,EAAA,EAAK0L,MAAN,CACEC,MAAO,UACPnL,SAAU,SAACC,GAAD,OAAOoD,IAAYD,KAC7B+E,QAAS/E,KAEX,cAAC5D,EAAA,EAAK0L,MAAN,CACEC,MAAO,uBACPnL,SAAU,SAACC,GAAD,OAAOsD,IAAoBD,KACrC6E,QAAS7E,KAEX,cAAC9D,EAAA,EAAK0L,MAAN,CACEC,MAAO,gBACPnL,SAAU,SAACC,GAAD,OAAOwD,IAAgBD,KACjC2E,QAAS3E,KAEX,cAAChE,EAAA,EAAK0L,MAAN,CACEC,MAAO,cACPnL,SAAU,SAACC,GAAD,OAAO0D,IAAeD,KAChCyE,QAASzE,KAEX,cAAClE,EAAA,EAAK0L,MAAN,CACEC,MAAO,2BACPnL,SAAU,SAACC,GAAD,OAAO4D,IAAeD,KAChCuE,QAASvE,KAEX,cAACpE,EAAA,EAAK0L,MAAN,CACEC,MAAO,SACPnL,SAAU,SAACC,GAAD,OAAO8D,IAAWD,KAC5BqE,QAASrE,KAEX,eAACtE,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAAQI,KAAK,OAAnC,UACE,cAACN,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CACEI,SAAU,SAACC,GAAD,OAAOgE,GAAShE,EAAEC,OAAOH,QACnC0L,YAAazH,aAKrB,eAAC6G,EAAA,EAAMI,OAAP,WACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,kBAAMmG,GAAqB,IAFtC,mBAMA,cAAC5F,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,UAAWiB,OAAQ,WACxCT,QAAS,YAnkBnB,WACE,IAAMmD,EAAO,CACXqF,GAAIlC,EACJQ,YAAaA,GACbE,MAAOA,GACP6B,YAAa3B,GACbE,QAASA,GACT0B,SAAUxB,GACVyB,UAAWvB,GACXE,WAAYA,GACZE,WAAYA,GACZE,OAAQA,GACRE,MAAOA,IAEFoC,IACJC,KAAK,4CAA6ClH,GAClDmH,MAAK,SAACrH,GACLkH,KACAhE,GAAqB,GACrBU,GAAgB,yCAChBF,IAAoB,GACpBuD,QAEDK,OAAM,SAACC,GACNC,QAAQC,MAAMF,MA6iBRkF,IAJJ,0BAYJ,eAACb,EAAA,EAAD,CACEJ,KAAMrI,EACN0I,OAAQ,kBAAMzI,GAAkB,IAChC0I,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMtG,OAAP,UACE,cAACsG,EAAA,EAAMzN,MAAP,0BAEF,cAACyN,EAAA,EAAM1N,KAAP,UACE,eAACqC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWI,KAAK,OAAtC,UACE,cAACN,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACE6L,YAAajG,GACbxF,SAAU,SAACC,GAAD,OAAOwF,GAAYxF,EAAEC,OAAOH,aAE1C,cAAC,IAAD,CACEuL,SAAU3G,GACV3E,SAAU,SAAC2E,GAAD,OAAUU,GAAQV,IAC5B4G,WAAW,eAEb,uBACA,uBACA,eAAC/L,EAAA,EAAKI,QAAN,CACEuK,GAAG,SACHpK,MAAOuF,GACPtF,SAAU,SAACC,GAAD,OAAOsF,GAActF,EAAEC,OAAOH,QAH1C,UAKE,wBAAQA,MAAO,WAAf,sBACA,wBAAQA,MAAO,WAAf,8BAIN,eAAC8K,EAAA,EAAMI,OAAP,WACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,kBAAMqG,GAAkB,IAFnC,mBAMA,cAAC9F,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,UAAWiB,OAAQ,WACxCT,QAAS,YA5lBnB,WACE,IAAMmD,EAAO,CACXqF,GAAIlC,EACJqC,KAAMA,GACNoE,KAAMvD,GACN2D,OAAQ7D,IAEHc,IACJC,KAAK,yCAA0ClH,GAC/CmH,MAAK,SAACrH,GACL0H,KACAtE,GAAkB,GAClBQ,GAAgB,yCAChBF,IAAoB,GACpBuD,QAEDK,OAAM,SAACC,GACNC,QAAQC,MAAMF,MA6kBRmF,IAJJ,8BC71BKC,EAjNE,WAAM,MAGajO,mBAAS,IAHtB,mBAGZO,EAHY,KAGFC,EAHE,OAIaR,mBAAS,IAJtB,mBAIZS,EAJY,KAIFC,EAJE,OAKeV,mBAAS,IALxB,mBAKZkO,EALY,KAKDC,EALC,OAManO,mBAAS,IANtB,mBAMZoO,EANY,KAMFC,EANE,OAOGrO,mBAAS,IAPZ,mBAOZqD,EAPY,KAOPC,EAPO,OAQStD,oBAAS,GARlB,mBAQZ4M,EARY,KAQJ0B,EARI,OASKtO,mBAAS,IATd,mBASZuD,EATY,KASNC,EATM,OAUOxD,mBAAS,IAVhB,mBAUZa,EAVY,KAUL4C,EAVK,OAaqBzD,mBAAS,IAb9B,mBAaZ+C,EAbY,KAaEC,EAbF,OAcWhD,oBAAS,GAdpB,mBAcZuO,EAdY,KAcHC,EAdG,cAiBJC,EAjBI,8EAiBnB,WAA0BlO,GAA1B,iBAAAQ,EAAA,+EAE+BE,MAAM,sCAAD,OAAuCV,GAAY,CAC3EW,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B/D,aAAaC,QAAQ,kBANhE,cAEciE,EAFd,gBAS2BA,EAASC,OATpC,UAScC,EATd,OAUgC,MAApBF,EAASG,OAVrB,0CAWmB,EAAC,EAAMD,EAAK/D,OAX/B,iCAamB,EAAC,EAAO+D,EAAKsC,UAbhC,mFAgBe,EAAC,EAAO,yCAhBvB,2DAjBmB,+BAsCJ4K,GAtCI,mFAsCnB,WAA4BnO,EAAUoO,GAAtC,iBAAA5N,EAAA,+EAE+BE,MAAM,sCAAD,OAAuCV,GAAY,CAC3EW,OAAQ,QACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B/D,aAAaC,QAAQ,gBAEpD+D,KAAMlE,KAAKmE,UAAUsN,KARjC,cAEcrN,EAFd,gBAU2BA,EAASC,OAVpC,UAUcC,EAVd,OAWgC,MAApBF,EAASG,OAXrB,0CAYmB,EAAC,EAAMD,EAAK/D,OAZ/B,iCAcmB,EAAC,EAAO+D,EAAKsC,UAdhC,mFAiBe,EAAC,EAAO,yCAjBvB,2DAtCmB,+BA4DJ8K,GA5DI,qFA4DnB,WAA+BD,EAAME,EAAU9F,GAA/C,uBAAAhI,EAAA,6DACUiD,EAAcxG,YAAIJ,aAAaC,QAAQ,eAAeI,KAAKA,KADrE,SAEiCoR,EAAS7K,EAAa2K,GAFvD,mCAEWlN,EAFX,KAEmBD,EAFnB,KAGQC,GACAuB,EAAgB,IAEhBwL,EAAwB,KAAbjO,GACXC,EAAYgB,EAAKjB,UACjBG,EAAY,IACZyN,EAAa3M,EAAKyB,YAClBoL,EAAY7M,EAAK2B,WACjBG,EAAO9B,EAAK6B,KACZiL,EAAU9M,EAAKoL,QACfpJ,EAAQhC,EAAK+B,MACbE,EAASjC,EAAKX,SAEdmC,EAAgBxB,GAChBgN,GAAW,GACPzF,GACAA,EAAMvH,IAnBlB,4CA5DmB,sBAyInB,OAJA0H,qBAAU,WACN0F,GAAgB,KAAMH,KACvB,IAGC,cAAC/P,EAAA,EAAD,CAAWF,OAAK,EAAhB,SACI,cAACO,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,gDACA,eAAC6C,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWI,KAAK,OAAtC,UACI,cAACN,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACI6L,YAAavN,EACb8B,SAAU,SAACC,GAAD,OAAO9B,EAAY8B,EAAEC,OAAOH,aAE9C,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWI,KAAK,WAAtC,UACI,cAACN,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CACIG,MAAO3B,EACP0B,KAAK,WACLE,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,aAE9C,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAAYI,KAAK,OAAvC,UACI,cAACN,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CACI6L,YAAaI,EACb7L,SAAU,SAACC,GAAD,OAAO6L,EAAa7L,EAAEC,OAAOH,aAE/C,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,WAAWI,KAAK,OAAtC,UACI,cAACN,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACI6L,YAAaM,EACb/L,SAAU,SAACC,GAAD,OAAO+L,EAAY/L,EAAEC,OAAOH,aAE9C,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,MAAMI,KAAK,SAAjC,UACI,cAACN,EAAA,EAAKG,MAAN,kBACA,cAACH,EAAA,EAAKI,QAAN,CACIE,KAAK,SACL2L,YAAazK,EACbhB,SAAU,SAACC,GAAD,OAAOgB,EAAOhB,EAAEC,OAAOH,aAEzC,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,SAASI,KAAK,WAApC,UACI,cAACN,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAK0L,MAAN,CACI/C,QAASoC,EACTvK,SAAU,SAACC,GAAD,OAAOgM,EAAUhM,EAAEC,OAAOiI,eAE5C,eAAC3I,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAOI,KAAK,OAAlC,UACI,cAACN,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CACI6L,YAAavK,EACblB,SAAU,SAACC,GAAD,OAAOkB,EAAQlB,EAAEC,OAAOH,aAE1C,eAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAAQI,KAAK,OAAnC,UACI,cAACN,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CACI6L,YAAajN,EACbwB,SAAU,SAACC,GAAD,OAAOmB,EAASnB,EAAEC,OAAOH,aAE3C,cAACxD,EAAA,EAAD,CACIhB,MAAO,CAAEC,WAAY,UAAWiB,OAAQ,WACxCT,QA9GxB,WACI,IAAIsF,EAAW,GACE,KAAbpD,GACAoD,EAASC,KAAK,4BAEA,KAAdsK,GACAvK,EAASC,KAAK,8BAED,KAAbwK,GACAzK,EAASC,KAAK,6BAEN,KAARP,GACAM,EAASC,KAAK,uBAEdP,GAAO,GACPM,EAASC,KAAK,yCAEL,KAATL,GACAI,EAASC,KAAK,wBAEJ,KAAV/C,GACA8C,EAASC,KAAK,yBAGM,IAApBD,EAASjB,OAWTkM,GAVa,CACTrO,WACAE,WACAwC,WAAYiL,EACZ/K,UAAWiL,EACX/K,MACAuJ,SACArJ,OACA1C,SAEkB6N,GAAc,MAEpC1L,EACI,qCACI,oDACA,6BACKW,EAASE,KAAI,SAAAvB,GAAC,OAAK,6BAAKA,cAmEzB,kBAKA,uBACA,uBACkB,KAAjBS,GAAuB,cAACJ,EAAA,EAAD,CAAO7E,QAAQ,SAAf,SAAyBiF,IAChDwL,GAAW,cAAC5L,EAAA,EAAD,CAAO7E,QAAQ,UAAf,iHCrKrBgR,EArBD,WAAO,IAAD,EAtBH,SAAAC,GAAQ,IAAD,EACI/O,mBAAS,MADb,mBACfgP,EADe,KACRC,EADQ,OAEUjP,oBAAS,GAFnB,mBAEfkP,EAFe,KAEJC,EAFI,KAmBtB,OAXAjG,oBAAS,sBAAC,kCAAAnI,EAAA,sEACeE,MAAM8N,GADrB,cACFzN,EADE,gBAEWA,EAASC,OAFpB,OAIR,IAFMC,EAFE,OAGF4N,EAAM,GACHnD,EAAI,EAAGA,EAAIzK,EAAKkB,OAAQuJ,IAC/BmD,EAAIxL,KARC,CAAEyL,KAQa7N,EAAKyK,GAAGhJ,WAAa,IAAMzB,EAAKyK,GAAG9I,UAR1C5C,SAQqDiB,EAAKyK,GAAG1L,SARnD8C,IAQ6D7B,EAAKyK,GAAG5I,IARhEuJ,OAQqEpL,EAAKyK,GAAGW,OARrErJ,KAQ6E/B,EAAKyK,GAAG1I,KAR/E1C,MAQqFW,EAAKyK,GAAGpL,QAEzIoO,EAASG,GACTD,GAAW,GARH,4CASP,IAEI,CAAEH,QAAOE,aAIaI,CAAS,qCAA9BN,EADU,EACVA,MAAOE,EADG,EACHA,UAEf,OACE,cAACxQ,EAAA,EAAD,CAAWF,OAAK,EAAhB,SACG0Q,EAAY,6CACX,cAAClQ,EAAA,EAAD,CAAKC,GAAI,EAAGrB,MAAO,CAAE8D,QAAS,KAA9B,SACE,cAACvC,EAAA,EAAD,CAAMvB,MAAO,CAAEC,WAAY,WAA3B,SACE,cAACsB,EAAA,EAAKK,KAAN,UACE,cAACL,EAAA,EAAKM,MAAN,UAAY,cAAC,OAAD,CAAM1B,GAAI,CACpBwR,SAAU,eACV1O,MAAOmO,GAFG,oC,4CC/BpBQ,GAAY,CAChB7N,MAAO,MACPlD,OAAQ,OAGGgR,GAAb,oDACE,WAAY1P,GAAQ,IAAD,8BACjB,cAAMA,IA2BR2P,WAAa,WACXC,UAAUC,YAAYC,MAAM,CAAER,KAAM,gBAAiB1G,MAAK,SAAC6C,GACrC,UAAhBA,EAAO3K,OACT,EAAK4C,SAAS,CACZqM,WAAW,OAMjB,IAAMC,EAAM,EAAKlP,MAAMmP,gBAEvB,OAAOvH,IACJC,KAAK,yCAA0CqH,GAC/CpH,MAAK,SAACrH,GACL,EAAKmC,SAAS,CAAEwM,OAAQ3O,EAASE,KAAK0O,UACtCpH,QAAQyC,IAAI,EAAK1K,MAAMoP,WAExBrH,OAAM,SAACC,GACNC,QAAQC,MAAMF,OA/CD,EAmDnBsH,cAAgB,SAACpQ,EAAOqQ,EAAQ9N,GAC9B,EAAKmB,SAAS,CACZ4M,cAAetQ,EACfuQ,aAAcF,EACdG,mBAAmB,KAvDJ,EA2DnBxD,QAAU,SAAChN,GACL,EAAKc,MAAM0P,mBACb,EAAK9M,SAAS,CACZ8M,mBAAmB,EACnBD,aAAc,QA7DlB,EAAKzP,MAAQ,CACXmP,gBAAiB,CACfQ,IAAK,UACLC,KAAM,WAERF,mBAAmB,EACnBD,aAAc,GACdD,cAAe,GACfJ,OAAQ,GACRH,WAAW,GAXI,EADrB,sDAgBE,WAAqB,IAAD,OACdH,UAAUe,aACZf,UAAUe,YAAYC,oBAAmB,SAACC,GACxC,EAAKnN,UAAS,SAACoN,GAAD,MAAgB,CAC5Bb,gBAAiB,CACfQ,IAAKI,EAASE,OAAOC,SACrBN,IAAKG,EAASE,OAAOE,oBAtBjC,oBAqEE,WAAU,IAAD,OACP,OACE,qCACE,cAACzS,EAAA,EAAD,CAAWC,OAAK,EAACZ,MAAO,CAAEC,WAAY,WAAtC,SACE,eAACa,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAO,SAA3B,UACE,sEADF,6CAGE,uBACA,cAACC,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,SAEVT,QAAS4S,KAAKvB,WANhB,yCAYJ,cAAChR,EAAA,EAAD,CAAWF,OAAK,EAAhB,SACE,eAACO,EAAA,EAAD,CAAKZ,UAAU,OAAf,UACE,eAACa,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,4DACA,uEACA,2JAIA,qQAMA,uJAIA,uBACA,mEACA,yFACA,+FAGA,uBAvBF,aAwBa,IACX,mBAAGhB,KAAK,2EAAR,sBAIF,eAACe,EAAA,EAAD,CAAKC,GAAI,EAAGrB,MAAO,CAAEa,OAAQ,SAA7B,UACE,cAACkE,EAAA,EAAD,CACEmK,KAAMmE,KAAKpQ,MAAMiP,UACjBhS,QAAQ,SACRF,MAAO,CAAE+D,MAAO,OAHlB,kDAOA,eAAC,OAAD,CACEuP,OAAQD,KAAKlR,MAAMmR,OACnBC,KAAM,GACNvT,MAAO4R,GACP4B,cAAeH,KAAKpQ,MAAMmP,gBAC1BqB,OAAQJ,KAAKpQ,MAAMmP,gBALrB,UAOGiB,KAAKpQ,MAAMoP,OAAOpM,KAAI,SAACyN,GAAD,OACrB,cAAC,UAAD,CACEjT,QAAS,EAAK8R,cACdS,SAAUU,EAAKC,SAAS3Q,SACxByO,KAAMiC,EAAKjC,KACXmC,QAASF,EAAKG,uBAIlB,cAAC,cAAD,CACErB,OAAQa,KAAKpQ,MAAMyP,aACnBoB,QAAST,KAAKpQ,MAAM0P,kBACpBxD,QAASkE,KAAKlE,QAHhB,SAKE,gCACE,iCAASkE,KAAKpQ,MAAMwP,cAAchB,OAClC,4BAAI4B,KAAKpQ,MAAMwP,cAAcmB,iCAvJjD,GAA6BG,aAkKdC,+BAAiB,CAC9BC,OAAQC,2CADKF,CAEZnC,I,qOCgMYsC,GAlWD,WAAO,IACTlR,EAAUmR,cAAVnR,MADQ,EAEQb,mBAASa,GAFjB,mBAETuJ,EAFS,KAEH6H,EAFG,KAIhB,SAASC,EAAqBnR,EAAGoR,EAAGC,GAChC,OAAID,EAAEC,GAAWrR,EAAEqR,IACP,EAERD,EAAEC,GAAWrR,EAAEqR,GACR,EAEJ,EAmBX,IAAMC,EAAY,CACd,CAAExL,GAAI,OAAQyL,gBAAgB,EAAM9E,MAAO,QAC3C,CAAE3G,GAAI,WAAYyL,gBAAgB,EAAO9E,MAAO,YAChD,CAAE3G,GAAI,MAAOyL,gBAAgB,EAAO9E,MAAO,OAC3C,CAAE3G,GAAI,SAAUyL,gBAAgB,EAAO9E,MAAO,WAC9C,CAAE3G,GAAI,OAAQyL,gBAAgB,EAAO9E,MAAO,QAC5C,CAAE3G,GAAI,QAASyL,gBAAgB,EAAO9E,MAAO,UAGjD,SAAS+E,EAAkBxS,GAAQ,IACvByS,EAAoFzS,EAApFyS,QAASC,EAA2E1S,EAA3E0S,iBAAkBC,EAAyD3S,EAAzD2S,MAAON,EAAkDrS,EAAlDqS,QAASO,EAAyC5S,EAAzC4S,YAAaC,EAA4B7S,EAA5B6S,SAAUC,EAAkB9S,EAAlB8S,cAK1E,OACI,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWtR,QAAQ,WAAnB,SACI,cAACuR,GAAA,EAAD,CACI3J,cAAeqJ,EAAc,GAAKA,EAAcC,EAChDpI,QAASoI,EAAW,GAAKD,IAAgBC,EACzCvQ,SAAUoQ,EACVS,WAAY,CAAE,aAAc,wBAGnCb,EAAUxO,KAAI,SAACsP,GAAD,OACX,cAACH,GAAA,EAAD,CAEItR,QAASyR,EAASb,eAAiB,OAAS,UAC5Cc,cAAehB,IAAYe,EAAStM,IAAK6L,EAH7C,SAKI,eAACW,GAAA,EAAD,CACIC,OAAQlB,IAAYe,EAAStM,GAC7B0M,UAAWnB,IAAYe,EAAStM,GAAK6L,EAAQ,MAC7CrU,SAxBGmV,EAwBwBL,EAAStM,GAxBpB,SAAC/F,GACrC+R,EAAc/R,EAAO0S,KAoBL,UAKKL,EAAS3F,MACT4E,IAAYe,EAAStM,GAClB,sBAAM1I,UAAWqU,EAAQiB,eAAzB,SACe,SAAVf,EAAmB,oBAAsB,qBAE9C,SAdHS,EAAStM,IAjBR,IAAC2M,UAkD/B,IAAME,EAAmBC,cAAW,SAACC,GAAD,MAAY,CAC5CC,KAAM,CACF3U,YAAa0U,EAAME,QAAQ,GAC3BnU,aAAciU,EAAME,QAAQ,IAEhCC,UAC2B,UAAvBH,EAAMI,QAAQ7R,KACR,CACExD,MAAOiV,EAAMI,QAAQC,UAAUC,KAC/BC,gBAAiBC,aAAQR,EAAMI,QAAQC,UAAUI,MAAO,MAE1D,CACE1V,MAAOiV,EAAMI,QAAQM,KAAKC,QAC1BJ,gBAAiBP,EAAMI,QAAQC,UAAUO,MAErDC,MAAO,CACHC,KAAM,gBAIRC,EAAuB,SAAC5U,GAC1B,IAAMyS,EAAUkB,IACRf,EAA0B5S,EAA1B4S,YAAahF,EAAa5N,EAAb4N,SAWrB,OACI,eAACiH,GAAA,EAAD,CACIzW,UAAW0W,aAAKrC,EAAQqB,KAAT,eACVrB,EAAQuB,UAAYpB,EAAc,IAF3C,UAKKA,EAAc,EACX,eAACmC,GAAA,EAAD,CAAY3W,UAAWqU,EAAQiC,MAAO9V,MAAM,UAAUb,QAAQ,YAAYiX,UAAU,MAApF,UACKpC,EADL,eAIA,cAACmC,GAAA,EAAD,CAAY3W,UAAWqU,EAAQiC,MAAO3W,QAAQ,KAAK+I,GAAG,aAAakO,UAAU,MAA7E,2BAKHpC,EAAc,GACX,cAACqC,GAAA,EAAD,CAASP,MAAM,iBAAf,SACI,cAACQ,GAAA,EAAD,CAAY5W,QAAS,kBA3BjB,WAChBsP,EAAS9J,KAAI,SAAAtD,GAAQ,OAAI2U,EAAa3U,MACtC,IAAM4U,EAAU/K,EAAKC,QAAO,SAACF,GAAD,OAAUwD,EAASyH,SAASjL,EAAI5J,aAE5D0R,EAAQkD,GACRE,EAAcC,EAAUH,GACxBI,EAAY,IAqB2BC,IAA3B,SACI,cAAC,KAAD,YAoClBhD,EAxBYmB,cAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFlS,MAAO,QAEX8T,MAAO,CACH9T,MAAO,OACP+T,aAAc9B,EAAME,QAAQ,IAEhC6B,MAAO,CACHC,SAAU,KAEdnC,eAAgB,CACZ3U,OAAQ,EACR+W,KAAM,gBACNpX,OAAQ,EACRmD,QAAS,EACTkU,SAAU,SACVpU,QAAS,EACTkP,SAAU,WACVmF,IAAK,GACLpU,MAAO,MAICqU,GAnLA,EAoLUtP,IAAM1G,SAAS,OApLzB,mBAoLT0S,EApLS,KAoLFuD,EApLE,OAqLcvP,IAAM1G,SAAS,QArL7B,mBAqLToS,EArLS,KAqLA8D,EArLA,OAsLgBxP,IAAM1G,SAAS,IAtL/B,mBAsLT2N,EAtLS,KAsLC4H,EAtLD,OAuLQ7O,IAAM1G,SAAS,GAvLvB,mBAuLTmW,EAvLS,KAuLHC,EAvLG,OAwLU1P,IAAM1G,UAAS,GAxLzB,mBAwLTqW,EAxLS,KAwLFC,EAxLE,OAyLsB5P,IAAM1G,SAAS,GAzLrC,mBAyLTuW,EAzLS,KAyLIC,EAzLJ,KA2OVtB,EAAe,SAAC3U,GAClB,IAAMiB,EAAO,CACTjB,SAAUA,GAEd,OAAOkI,IACFC,KAAK,qCAAsClH,GAC3CmH,MAAK,SAACrH,GACHwH,QAAQyC,IAAIjK,MAEfsH,OAAM,SAACC,GACJC,QAAQC,MAAMF,OArPV,EA0PwB7I,mBAASoK,GA1PjC,mBA0PTqM,EA1PS,KA0PKC,EA1PL,KA2PVC,EAAYJ,EAAcK,KAAKC,IAAIN,EAAanM,EAAK1H,OAASyT,EAAOI,GA3P3D,EA4PgBvW,mBAAS,IA5PzB,mBA4PTsV,EA5PS,KA4PCwB,EA5PD,KA8PVzB,EAAgB,SAAC0B,EAAa3M,GAChC0M,EAAYC,GACZ,IAAM5B,EAAU/K,EAAKC,QAAO,SAACF,GACzB,OAAOA,EAAIkF,KAAK2H,cAAc5B,SAAS2B,EAAYC,kBAEvDN,EAAgBvB,IAQpB,OACI,sBAAKhX,UAAWqU,EAAQqB,KAAxB,UACI,eAACoD,GAAA,EAAD,CAAO9Y,UAAWqU,EAAQiD,MAA1B,UACI,cAAC,KAAD,CACI3H,YAAY,cACZ1L,MAAOkT,EACPjT,SAAU,SAAC6U,GAAD,OAAe7B,EAAc6B,EAAW9M,IAClD+M,eAAgB,kBAX5BL,EAAY,SACZzB,EAAcC,EAAUlL,MAYhB,cAACuK,EAAD,CAAsBhC,YAAahF,EAASjL,OAAQiL,SAAUA,IAE9D,cAACyJ,GAAA,EAAD,UACI,eAAC,KAAD,CACIjZ,UAAWqU,EAAQmD,MACnB0B,kBAAgB,aAChBxY,KAAMwX,EAAQ,QAAU,SACxBiB,aAAW,iBAJf,UAMI,cAAC/E,EAAD,CACIC,QAASA,EACTG,YAAahF,EAASjL,OACtBgQ,MAAOA,EACPN,QAASA,EACTK,iBAjGK,SAAC3R,GAC1B,GAAIA,EAAMyB,OAAOiI,QAAjB,CACI,IAAM+M,EAAed,EAAa5S,KAAI,SAAC2T,GAAD,OAAOA,EAAEjX,YAC/CgV,EAAYgC,QAGhBhC,EAAY,KA4FQ1C,cAxGE,SAAC/R,EAAO0S,GAE9ByC,EADc7D,IAAYoB,GAAsB,QAAVd,EACrB,OAAS,OAC1BwD,EAAW1C,IAsGSZ,SAAUxI,EAAK1H,SAEnB,eAAC+U,GAAA,EAAD,WAlRpB,SAAoBC,EAAOC,GACvB,IAAMC,EAAiBF,EAAM7T,KAAI,SAACgU,EAAInM,GAAL,MAAe,CAACmM,EAAInM,MAMrD,OALAkM,EAAeE,MAAK,SAAC/W,EAAGoR,GACpB,IAAMO,EAAQiF,EAAW5W,EAAE,GAAIoR,EAAE,IACjC,OAAc,IAAVO,EAAoBA,EACjB3R,EAAE,GAAKoR,EAAE,MAEbyF,EAAe/T,KAAI,SAACgU,GAAD,OAAQA,EAAG,MA4QhBE,CAAWtB,EAzRpC,SAAuB/D,EAAON,GAC1B,MAAiB,SAAVM,EACD,SAAC3R,EAAGoR,GAAJ,OAAUD,EAAqBnR,EAAGoR,EAAGC,IACrC,SAACrR,EAAGoR,GAAJ,OAAWD,EAAqBnR,EAAGoR,EAAGC,IAsRE4F,CAActF,EAAON,IAC1C6F,MAAM9B,EAAOI,EAAaJ,EAAOI,EAAcA,GAC/C1S,KAAI,SAACsG,EAAKuB,GACP,IAjDZnL,EAiDkB2X,GAjDlB3X,EAiD8C4J,EAAI5J,UAjDL,IAAhCoN,EAASwK,QAAQ5X,IAkDZ6X,EAAO,kCAA8B1M,GAE3C,OACI,eAACqH,GAAA,EAAD,CACIsF,OAAK,EACLha,QAAS,SAACyC,GAAD,OAtG7B,SAACA,EAAOP,GACxB,IAAM+X,EAAgB3K,EAASwK,QAAQ5X,GACnCgY,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAO7K,EAAUpN,GAClB,IAAlB+X,EACPC,EAAcA,EAAYC,OAAO7K,EAASsK,MAAM,IACzCK,IAAkB3K,EAASjL,OAAS,EAC3C6V,EAAcA,EAAYC,OAAO7K,EAASsK,MAAM,GAAI,IAC7CK,EAAgB,IACvBC,EAAcA,EAAYC,OACtB7K,EAASsK,MAAM,EAAGK,GAClB3K,EAASsK,MAAMK,EAAgB,KAIvC/C,EAAYgD,GAqF4CE,CAAY3X,EAAOqJ,EAAI5J,WAC3CmY,KAAK,WACLC,eAAcT,EACdU,UAAW,EAEXjL,SAAUuK,EAPd,UASI,cAAClF,GAAA,EAAD,CAAWtR,QAAQ,WAAnB,SACI,cAACuR,GAAA,EAAD,CACIzI,QAAS0N,EACThF,WAAY,CAAE,kBAAmBkF,OAGzC,cAACpF,GAAA,EAAD,CAAW+B,UAAU,KAAKlO,GAAIuR,EAASS,MAAM,MAAMnX,QAAQ,OAA3D,SACKyI,EAAIkF,OAET,cAAC2D,GAAA,EAAD,UAAY7I,EAAI5J,WAChB,cAACyS,GAAA,EAAD,UAAY7I,EAAI9G,MAChB,cAAC2P,GAAA,EAAD,UAAY7I,EAAIyC,SAChB,cAACoG,GAAA,EAAD,UAAY7I,EAAI5G,OAChB,cAACyP,GAAA,EAAD,UAAY7I,EAAItJ,UAhBXsJ,EAAIkF,SAoBxBsH,EAAY,GACT,cAAC5D,GAAA,EAAD,CAAUnV,MAAO,CAAEa,QAAS4X,EAAQ,GAAK,IAAMM,GAA/C,SACI,cAAC3D,GAAA,EAAD,CAAW8F,QAAS,cAMxC,cAACC,GAAA,EAAD,CACIC,mBAAoB,CAAC,EAAG,GAAI,IAC5BjE,UAAU,MACVkE,MAAO7O,EAAK1H,OACZ6T,YAAaA,EACbJ,KAAMA,EACN+C,aAxHS,SAACpY,EAAOqY,GAC7B/C,EAAQ+C,IAwHIC,oBArHgB,SAACtY,GAC7B0V,EAAe6C,SAASvY,EAAMyB,OAAOH,MAAO,KAC5CgU,EAAQ,SAsHJ,cAACkD,GAAA,EAAD,CACIC,QAAS,cAACC,GAAA,EAAD,CAAQhP,QAAS6L,EAAOhU,SApHnB,SAACvB,GACvBwV,EAASxV,EAAMyB,OAAOiI,YAoHdgD,MAAM,iBCxVDiM,G,oDACnB,WAAY1Z,GAAQ,IAAD,8BACjB,cAAMA,IAUR2Z,YAAc,WAEZ,GADA5Q,QAAQyC,IAAI,4BAA4BH,KAAK,EAAKvK,MAAM8Y,MACnD,4BAA4BvO,KAAK,EAAKvK,MAAM8Y,KAAjD,CAMA,EAAKlW,SAAS,CACZmW,YAAY,EACZC,cAAc,IAGhB,IAAMrY,EAAO,CAAEmY,IAAK,EAAK9Y,MAAM8Y,IAAKG,SAAU,EAAKjZ,MAAMiZ,UACzDrR,IACGC,KAAK,yCAA0ClH,GAC/CmH,MAAK,SAACrH,GACgB,YAAjBA,EAASE,KACX,EAAKiC,SAAS,CACZoW,cAAc,EACdE,UAAW,KAGb,EAAKtW,SAAS,CACZsW,UAAWzY,EAASE,UAIzBoH,OAAM,SAACC,GACNC,QAAQC,MAAMF,WA1BhB,EAAKpF,SAAS,CACZmW,YAAY,KAbhB,EAAK/Y,MAAQ,CACX8Y,IAAK,GACLG,SAAUE,OAAOC,iBACjBF,UAAW,GACXH,YAAY,EACZC,cAAc,GAPC,E,2CA4CnB,WAAU,IAAD,OACP,OACE,qCACE,cAACtb,EAAA,EAAD,CAAWC,OAAK,EAACZ,MAAO,CAAEC,WAAY,WAAtC,SACE,eAACa,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAO,SAA3B,UACE,sDADF,gCAGE,uEACA,gFACA,kEACA,uBACA,cAACkD,EAAA,EAAD,UACE,eAACA,EAAA,EAAK9C,IAAN,WACE,eAAC8C,EAAA,EAAKC,MAAN,CAAY0K,GAAIxN,IAAK+C,UAAU,cAA/B,UACE,cAACF,EAAA,EAAKG,MAAN,kBACA,cAACH,EAAA,EAAKI,QAAN,CACEG,MAAO6O,KAAKpQ,MAAM8Y,IAClBtX,SAAU,SAACC,GAAD,OAAO,EAAKmB,SAAS,CAAEkW,IAAKrX,EAAEC,OAAOH,cAGnD,eAACP,EAAA,EAAKC,MAAN,CAAY0K,GAAIxN,IAAK+C,UAAU,gBAA/B,UACE,cAACF,EAAA,EAAKG,MAAN,qBACA,eAACH,EAAA,EAAKI,QAAN,CACEuK,GAAG,SACH0N,aAAa,eACb7X,SAAU,SAACC,GAAD,OACR,EAAKmB,SAAS,CAAEqW,SAAUxX,EAAEC,OAAOH,SAJvC,UAOE,wBAAQA,MAAO4X,OAAOC,iBAAtB,0BAGA,wBAAQ7X,MAAO,EAAf,qBACA,wBAAQA,MAAO,GAAf,sBACA,wBAAQA,MAAO,GAAf,sBACA,wBAAQA,MAAO,GAAf,sBACA,wBAAQA,MAAO,IAAf,kCAKR,cAACxD,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,QACZc,MAAO,UACPG,OAAQ,SAEVT,QAAS4S,KAAKyI,YANhB,gCAaJ,cAAChb,EAAA,EAAD,CAAWF,OAAK,EAACL,UAAU,yBAA3B,SACE,eAACY,EAAA,EAAD,CAAKZ,UAAU,iCAAf,UACE,cAACwE,EAAA,EAAD,CACEmK,KAAMmE,KAAKpQ,MAAM+Y,WACjB9b,QAAQ,SACRF,MAAO,CAAE+D,MAAO,OAHlB,iCAOA,cAACgB,EAAA,EAAD,CACEmK,KAAMmE,KAAKpQ,MAAMgZ,aACjB/b,QAAQ,SACRF,MAAO,CAAE+D,MAAO,OAHlB,sDAUJ,cAACjD,EAAA,EAAD,CAAWF,OAAK,EAACL,UAAU,yBAA3B,SACG8S,KAAKpQ,MAAMkZ,UAAUlW,KAAI,SAACsW,GAAD,OACxB,cAACpb,EAAA,EAAD,CAAKZ,UAAU,iCAAf,SACE,eAACgB,EAAA,EAAD,CACEvB,MAAO,CAAE+D,MAAO,MAAO9D,WAAY,UAAWc,MAAO,SADvD,UAGE,cAACQ,EAAA,EAAKyH,OAAN,UACE,6BAAKuT,EAAMC,wBAEb,eAACjb,EAAA,EAAKK,KAAN,WACE,eAACL,EAAA,EAAKM,MAAN,WACG0a,EAAM3I,QADT,KACoB2I,EAAM5W,KAD1B,KACkC4W,EAAMtZ,SAExC,eAAC1B,EAAA,EAAKO,KAAN,qCAC0B,IACvBya,EAAME,uBAAyB,oCAAa,sCAE/C,cAACzb,EAAA,EAAD,CACEhB,MAAO,CACLC,WAAY,UACZiB,OAAQ,WAHZ,SAME,oBAAGlB,MAAO,CAAEe,MAAO,SAAWV,KAAMkc,EAAMpL,IAA1C,mBACSoL,EAAMC,oBADf,mC,GA7IiBzI,a,oBCgJtB2I,GAlIF,WAAO,IAAD,EA1BF,WAAO,IAAD,EACKta,mBAAS,MADd,mBACZua,EADY,KACNC,EADM,OAEaxa,oBAAS,GAFtB,mBAEZkP,EAFY,KAEDC,EAFC,KAIbsL,EAAQ,IAAIhT,KACZiT,EAAUC,EAAWF,GAErB1L,EAAM,gEADK4L,EAAW,IAAIlT,KAAKgT,EAAMG,UAAY,SACkC,OAASF,EAAtF,6DAEZ,SAASC,EAAWE,GAEhB,OADWA,EAAMC,cAAgB,KAAOD,EAAME,WAAa,GAAK,IAAMF,EAAMG,UAahF,OATA9R,oBAAS,sBAAC,8BAAAnI,EAAA,sEACiBE,MAAM8N,EAAK,CAC9B,OAAU,QAFR,cACAzN,EADA,gBAIaA,EAASC,OAJtB,OAIAC,EAJA,OAKNgZ,EAAQhZ,EAAKyZ,UACb9L,GAAW,GANL,2CAOP,IAEI,CAAEoL,OAAMrL,aAIaI,GAApBiL,EADO,EACPA,KAAMrL,EADC,EACDA,UAERgM,EAAe,SAACnM,GAClB,IAAMoM,EAAYC,OAAOC,KAAKtM,EAAK,SAAU,uBACzCoM,IAAWA,EAAUG,OAAS,OAgBtC,OACI,mCACKpM,EAAY,6CACT,qCACI,cAAC3Q,EAAA,EAAD,CAAWC,OAAK,EAACZ,MAAO,CAAEC,WAAY,WAAtC,SACI,cAACa,EAAA,EAAD,UACI,eAAC6c,GAAA,EAAD,WACI,qBACI5Z,MAAO,IACPlD,OAAQ,IACRN,UAAU,OACVkB,IAAKkb,EAAK,GAAGiB,WACbC,IAAI,kBAER,eAACF,GAAA,EAAM/b,KAAP,WACI,+BAAM,cAACkc,GAAA,EAAD,CAAO5d,QAAQ,OAAf,SAAuByc,EAAK,GAAGoB,OAAOtM,SAC5C,oBACIuM,aAAc,SAAA9a,GAAK,OA9BnC,SAAAA,GAChB,IAAM+W,EAAK/W,EAAMyB,OACjBsV,EAAGja,MAAMe,MAAQ,UACjBkZ,EAAGja,MAAMie,OAAS,UAClBhE,EAAGja,MAAMke,eAAiB,YA0B6BC,CAAYjb,IACnCkb,WAAY,SAAAlb,GAAK,OAxBlC,SAAAA,GACf,IAAM+W,EAAK/W,EAAMyB,OACjBsV,EAAGja,MAAMe,MAAQ,QACjBkZ,EAAGja,MAAMke,eAAiB,OAqB2BE,CAAWlb,IAChCzC,QAAS,kBAAM6c,EAAaX,EAAK,GAAGxL,MACpCnR,MAAO,CAAEe,MAAO,QAASsd,WAAY,QAJzC,SAKK1B,EAAK,GAAG9F,QAEb,mBAAG7W,MAAO,CAAEe,MAAO,QAASud,SAAU,OAAtC,SAAgD3B,EAAK,GAAG4B,QAAQlV,UAAU,EAAG,OAC7E,mBAAGrJ,MAAO,CAAEe,MAAO,UAAnB,SAAgC4b,EAAK,GAAG6B,YAAYnV,UAAU,EAAG,gBAKjF,eAACvI,EAAA,EAAD,WACI,cAACK,EAAA,EAAD,UACKwb,EAAKtC,MAAM,EAAG,GAAGpU,KAAI,SAACwY,GAcnB,OACI,cAACrd,EAAA,EAAD,UACI,cAACuc,GAAA,EAAD,UACI,eAACA,GAAA,EAAM/b,KAAP,WACI,qBACImC,MAAO,IACPlD,OAAQ,IACRN,UAAU,OACVkB,IAAKgd,EAAQb,WACbC,IAAI,qBAER,mBAAGG,aAAc,SAAA9a,GAAK,OAxBlB,SAAAA,GAChB,IAAM+W,EAAK/W,EAAMyB,OACjBsV,EAAGja,MAAMe,MAAQ,UACjBkZ,EAAGja,MAAMie,OAAS,UAClBhE,EAAGja,MAAMke,eAAiB,YAoBYC,CAAYjb,IAClCkb,WAAY,SAAAlb,GAAK,OAlBlB,SAAAA,GACf,IAAM+W,EAAK/W,EAAMyB,OACjBsV,EAAGja,MAAMe,MAAQ,OACjBkZ,EAAGja,MAAMke,eAAiB,OAeWE,CAAWlb,IAChCzC,QAAS,kBAAM6c,EAAamB,EAAQtN,MACpCnR,MAAO,CAAEse,SAAU,MAAOva,MAAO,QAAShD,MAAO,QAHrD,SAIK0d,EAAQ5H,MAAMxN,UAAU,EAAG,IAAM,oBAQ7DsT,EAAKtC,MAAM,GAAGpU,KAAI,SAACwY,GAYhB,OACI,eAACd,GAAA,EAAD,CAAO3d,MAAO,CAAE0e,WAAY,OAAQC,cAAe,QAAnD,UACI,qBACI5a,MAAO,IACPlD,OAAQ,IACRN,UAAU,OACVkB,IAAKgd,EAAQb,WACbC,IAAI,qBAER,eAACF,GAAA,EAAM/b,KAAP,WACI,6BAAI,cAACkc,GAAA,EAAD,CAAO5d,QAAQ,OAAf,SAAuBue,EAAQV,OAAOtM,SAC1C,oBACIuM,aAAc,SAAA9a,GAAK,OAvBf,SAAAA,GAChB,IAAM+W,EAAK/W,EAAMyB,OACjBsV,EAAGja,MAAMe,MAAQ,UACjBkZ,EAAGja,MAAMie,OAAS,UAoBiBE,CAAYjb,IACnCkb,WAAY,SAAAlb,GAAK,OAlBd,SAAAA,GACJA,EAAMyB,OACd3E,MAAMe,MAAQ,UAgBgBqd,CAAWlb,IAChCzC,QAAS,kBAAM6c,EAAamB,EAAQtN,MAHxC,SAIKsN,EAAQ5H,QACb,4BAAI4H,EAAQF,QAAQlV,UAAU,EAAG,OACjC,mBAAGrJ,MAAO,CAAEe,MAAO,UAAnB,SAAgC0d,EAAQD,YAAYnV,UAAU,EAAG,wB,oDCpJ1F,I,OAAA,IAA0B,0CCA1B,OAA0B,yCCA1B,OAA0B,mCCA1B,OAA0B,iCCA1B,OAA0B,mCCA1B,OAA0B,sCCuBpBuV,G,oDACnB,WAAYzc,GAAQ,IAAD,8BACjB,cAAMA,IAiCR0c,WAAa,SAAC3b,GACZ,IAAM4b,EAAS,aACbC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,cACJC,GAAI,uBACJC,GAAI,WACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,YACJC,GAAI,QACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,YACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,OACJC,GAAI,WACJC,GAAI,SACJC,GAAI,eACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,UACJC,GAAI,iBACJC,GAAI,OACJC,GAAI,2BACJC,GAAI,cACJC,GAAI,sBACJC,GAAI,+BAzDS,KA0DT,wBAEFC,EAAOtf,EAAMyB,OAAO8d,QAAQhR,KAChCvG,QAAQyC,IAAI6U,GACZ,IAAIE,EAAY5D,EAAU0D,GACtBG,EAAY,GAChB,EAAK1f,MAAM2f,OAAOC,SAAQ,SAAUnP,EAAM5F,GACpC4F,EAAKzQ,QAAUyf,IACjBC,EAAYjP,MAGhB,EAAK7N,SAAS,CAAEid,aAAcH,EAAWI,YAAY,KAtGrD,EAAK9f,MAAQ,CACX+f,WAAY,GACZC,OAAQ,IAAIC,IACZN,OAAQ,GACRE,aAAc,GACdC,YAAY,GAEd,EAAK9f,MAAMggB,OAAOE,IAAI,gBAAiBC,IACvC,EAAKngB,MAAMggB,OAAOE,IAAI,gBAAiBE,IACvC,EAAKpgB,MAAMggB,OAAOE,IAAI,SAAUG,IAChC,EAAKrgB,MAAMggB,OAAOE,IAAI,OAAQI,IAC9B,EAAKtgB,MAAMggB,OAAOE,IAAI,SAAUK,IAChC,EAAKvgB,MAAMggB,OAAOE,IAAI,oBAAqBM,IAd1B,E,sDAiBnB,WAAqB,IAAD,OAClBC,QAAQC,IAAI,CACV9Y,IAAM+Y,IAAI,yCACV/Y,IAAM+Y,IAAI,uCAET7Y,MAAK,YAAyB,IAAD,mBAAtB8Y,EAAsB,KAAbC,EAAa,KAC5B,EAAKje,SAAS,CACZmd,WAAYa,EAAQjgB,KACpBgf,OAAQkB,EAAQlgB,OAElBsH,QAAQyC,IAAI,EAAK1K,MAAM2f,WAExB5X,OAAM,SAACC,GACNC,QAAQyC,IAAI1C,Q,oBA6ElB,WAAU,IAAD,OACD8Y,EAAiB,CACrBC,WAAY,YACZ1F,SAAU,MACVvd,MAAO,SAEHkjB,EAAiB,CACrBD,WAAY,YACZ1F,SAAU,MACVvd,MAAO,SAEHmjB,EAAgB,CACpBpM,aAAc,OACd/W,MAAO,SAEHojB,EAAiB,CACrB7F,SAAU,MACV0F,WAAY,YACZlM,aAAc,QACd/W,MAAO,SAET,OACE,qCACE,eAACJ,EAAA,EAAD,CACEC,OAAK,EACLZ,MAAO,CACLC,WAAY,WAHhB,UAME,cAACa,EAAA,EAAD,CAAWd,MAAO,CAAEe,MAAO,QAAS+W,aAAc,QAASsM,UAAW,SAAtE,SACE,cAACjjB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,cAAC,KAAD,CAAQE,QAAS4S,KAAKwL,iBAGzBxL,KAAKpQ,MAAM+f,WAAW/c,KAAI,SAACoe,GAAD,OACzB,eAACvjB,EAAA,EAAD,CACEd,MAAO,CAAEgT,SAAU,WAAYsR,UAAW,SAAUxM,aAAc,SAClElX,OAAK,EAFP,UAIE,cAAC2jB,GAAA,EAAD,CACE9iB,IAAK,EAAKwB,MAAMggB,OAAOW,IAAIS,EAAUA,WACrCzjB,OAAK,EACLZ,MAAO,CAAE+D,MAAO,OAAQlD,OAAQ,WAElC,cAACM,EAAA,EAAD,CACEnB,MAAO,CACLgT,SAAU,WACVmF,IAAK,MACLqM,KAAM,MACNC,UAAW,yBALf,SAQE,eAACrjB,EAAA,EAAD,WACE,cAAC,KAAD,CAAMsjB,QAAM,EAAZ,SACE,cAACvjB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAOmkB,EAAX,SAA4BE,EAAUA,gBAG1C,cAAC,KAAD,CAAMK,QAAM,EAAZ,SACE,eAACvjB,EAAA,EAAD,CAAKnB,MAAOkkB,EAAZ,UACE,eAAC9iB,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAO+jB,EAAX,4BAEF,cAAC5iB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAOikB,EAAX,SAA4BI,EAAUM,aAG1C,eAACvjB,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAO+jB,EAAX,6BAEF,cAAC5iB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAOikB,EAAX,SAA4BI,EAAUO,mBAK9C,cAAC,KAAD,CAAMF,QAAM,EAAZ,SACE,cAACvjB,EAAA,EAAD,CAAKnB,MAAOkkB,EAAZ,SACE,eAAC9iB,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAO+jB,EAAX,gCAEF,cAAC5iB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAOikB,EAAX,SAA4BI,EAAUQ,qBAK9C,cAAC,KAAD,CAAMH,QAAM,EAAZ,SACE,eAACvjB,EAAA,EAAD,CAAKnB,MAAO,CAAE+D,MAAO,QAArB,UACE,eAAC3C,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAO+jB,EAAX,8BAEF,cAAC5iB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAOikB,EAAX,SAA4BI,EAAUS,kBAG1C,eAAC1jB,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAO+jB,EAAX,+BAEF,cAAC5iB,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oBAAIP,MAAOikB,EAAX,SACGI,EAAUU,sCAW/B,eAACzV,EAAA,EAAD,CACEJ,KAAMmE,KAAKpQ,MAAM8f,WACjBxT,OAAQ,kBAAM,EAAK1J,SAAS,CAAEkd,YAAY,KAC1CvT,SAAS,SACTC,UAAU,EAJZ,UAME,cAACH,EAAA,EAAMtG,OAAP,UACE,cAACsG,EAAA,EAAMzN,MAAP,UAAcwR,KAAKpQ,MAAM6f,aAAa7f,UAExC,eAACqM,EAAA,EAAM1N,KAAP,WACE,eAACT,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,gDAEF,cAACY,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,6BAAK8S,KAAKpQ,MAAM6f,aAAa6B,aAGjC,eAACvjB,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,iDAEF,cAACY,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,6BAAK8S,KAAKpQ,MAAM6f,aAAa8B,iBAInC,cAACzjB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,oDAEF,cAACY,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,6BAAK8S,KAAKpQ,MAAM6f,aAAa+B,mBAInC,eAAC1jB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,kDAEF,cAACY,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,6BAAK8S,KAAKpQ,MAAM6f,aAAagC,kBAGjC,eAAC1jB,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,mDAEF,cAACY,EAAA,EAAD,CAAKZ,UAAU,yBAAf,SACE,6BAAK8S,KAAKpQ,MAAM6f,aAAaiC,yBAKrC,cAACzV,EAAA,EAAMI,OAAP,UACE,cAAC1O,EAAA,EAAD,CACEhB,MAAO,CAAEC,WAAY,OAAQiB,OAAQ,QACrCT,QAAS,kBAAM,EAAKoF,SAAS,CAAEkd,YAAY,KAF7C,+B,GA3RsBhP,aCenBiR,OAjCf,YAA2E,IAAtCjR,EAAqC,EAAhDoD,UAAgD,IAA1BxX,aAA0B,SAARgM,EAAQ,qCAC9DsZ,EAAejmB,IAAfimB,WACR,IACI,GAAItlB,EAAO,CAAC,IAAD,IACD8C,EAAO,UAAG7C,YAAIJ,aAAaC,QAAQ,sBAA5B,iBAAG,EAAyCI,YAA5C,aAAG,EAA+CF,MAC/D,OACI,cAAC,IAAD,2BAAWgM,GAAX,IAAiByC,OAAQ,SAAAjM,GAAK,OAAI8iB,GAAcxiB,EAC1C,cAACsR,EAAD,eAAe5R,IACf,cAAC,IAAD,CAAUhC,GAAI,CACZwR,SAAU,SACV1O,MAAO,CAAEF,SAAU4I,EAAKuZ,aAIpC,OACI,cAAC,IAAD,2BAAWvZ,GAAX,IAAiByC,OAAQ,SAAAjM,GAAK,OAAI8iB,EAC5B,cAAClR,EAAD,eAAe5R,IACf,cAAC,IAAD,CAAUhC,GAAI,CACZwR,SAAU,SACV1O,MAAO,CAAEF,SAAU4I,EAAKuZ,aAI1C,MAAO/Z,GACL,OACI,cAAC,IAAD,CAAUhL,GAAI,CACVwR,SAAU,SACV1O,MAAO,CAAEF,SAAU4I,EAAKuZ,WCflCC,GAAa,aAmDJC,OAjDf,WACE,IAAM/lB,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ0lB,KAD1C,EAEuB/iB,mBAAS/C,GAFhC,mBAEN4lB,EAFM,KAEM9lB,EAFN,KASb,OACE,qBAAKoB,UAAU,MAAf,SACE,cAACzB,EAAYumB,SAAb,CAAsB7gB,MAAO,CAAEygB,aAAY9lB,cAP7B,SAACyE,GACjBpE,aAAa8lB,QAAQH,GAAY7lB,KAAKmE,UAAUG,IAChDzE,EAAcyE,KAKZ,SACE,eAAC,gBAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACE2hB,OAAK,EACLL,KAAK,SACL9W,OAAQ,SAACjM,GAAD,OAAW,cAAC,EAAD,eAAWA,OAEhC,cAAC,IAAD,CAAOojB,OAAK,EAACL,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOK,OAAK,EAACL,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOK,OAAK,EAACL,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOK,OAAK,EAACL,KAAK,QAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOK,OAAK,EAACL,KAAK,QAAlB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBK,OAAK,EAACL,KAAK,SAAS/N,UAAWjG,EAAOvR,OAAO,IAC7D,cAAC,GAAD,CAAgB4lB,OAAK,EAACL,KAAK,eAAe/N,UAAWhD,GAAOxU,OAAO,IACnE,cAAC,GAAD,CAAgB4lB,OAAK,EAACL,KAAK,WAAW/N,UAAWhR,IACjD,cAAC,GAAD,CAAgBof,OAAK,EAACL,KAAK,YAAY/N,UAAW9G,IAClD,cAAC,IAAD,CAAO6U,KAAK,IAAZ,SACE,cAAC,EAAD,iBC/CCM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3a,MAAK,YAAkD,IAA/C4a,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCDdO,IAAS5X,OAAO,cAAC,GAAD,IAAQ6X,SAASC,eAAe,SAEhDV,O","file":"static/js/main.adeaa5d0.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n","import { Navbar, Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nconst CHTNavbar = () => {\n  const { setAuthTokens } = useAuth();\n  const token = getToken();\n  const admin = (token) ? jwt(localStorage.getItem(\"CHT-tokens\")).user.admin : 0;\n\n  function logOut() {\n    setAuthTokens(null);\n  }\n\n  function getToken() {\n    const existingTokens = JSON.parse(localStorage.getItem(\"CHT-tokens\"));\n    return existingTokens?.token;\n  }\n\n  return (\n    <Navbar sticky=\"top\" style={{ background: \"#408cb3\" }} variant=\"dark\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"#home\">COVID Health Tracker</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        {(admin === 1) &&\n          <LinkContainer to=\"/admin\">\n            <Nav.Link>Admin</Nav.Link>\n          </LinkContainer>\n        }\n        <LinkContainer to=\"/profile\">\n          <Nav.Link>Profile</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/data\">\n          <Nav.Link>Data</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/testing\">\n          <Nav.Link>Testing</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/vaccine\">\n          <Nav.Link>Vaccine</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/news\">\n          <Nav.Link>News</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      <Nav>\n        {token ? (\n          <>\n            <LinkContainer to=\"/settings\">\n              <Nav.Link>Settings</Nav.Link>\n            </LinkContainer>\n            <Nav.Link onClick={logOut}>Logout</Nav.Link>\n          </>\n        ) : (\n          <>\n            <LinkContainer to=\"/signup\">\n              <Nav.Link>Signup</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/login\">\n              <Nav.Link>Login</Nav.Link>\n            </LinkContainer>\n          </>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default CHTNavbar;\n","export default __webpack_public_path__ + \"static/media/covid.aa223103.jpg\";","export default __webpack_public_path__ + \"static/media/covidtesting.496d9fb8.jpg\";","export default __webpack_public_path__ + \"static/media/covidvaccine.c207afae.jpg\";","import { Jumbotron, Container, Button, Card, Row, Col } from \"react-bootstrap\";\nimport covid from \"../images/covid.jpg\";\nimport covidTesting from \"../images/covidtesting.jpg\";\nimport covidVaccine from \"../images/covidvaccine.jpg\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"400px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>COVID-19 Health Tracker</h1>\n          <h5>Track your symptoms.</h5>\n          <p>\n            As a central hub for COVID-19 data, keep up with important news and\n            statistics about the virus and vaccine while tracking your symptoms.\n            Update your test results and learn more about contact tracing.\n          </p>\n          <Button\n            href=\"/signup\"\n            size=\"lg\"\n            style={{\n              background: \"#5340b3\",\n              color: \"white\",\n              border: \"#202C42\",\n            }}\n          >\n            Signup\n          </Button>{\" \"}\n          <Button\n            href=\"/login\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#8096A8\",\n            }}\n          >\n            Login\n          </Button>\n        </Container>\n      </Jumbotron>\n\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col md={4} style={{ paddingLeft: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img variant=\"top\" src={covid} style={{ maxHeight: 260 }} />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>COVID-19 Data</Card.Title>\n                <Card.Text>Learn more about important COVID-19 data.</Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Data tracker\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingLeft: 50, paddingRight: 50 }}>\n            <Card style={{ background: \"#408db3\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidTesting}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>Testing</Card.Title>\n                <Card.Text>\n                  Find out more about testing and locations near you.\n                </Card.Text>\n                <Button\n                  href=\"/testing\"\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingRight: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidVaccine}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>News</Card.Title>\n                <Card.Text>\n                  Read up on news about COVID-19 and the vaccine.\n                </Card.Text>\n                <Button\n                  href=\"/news\"\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      <br />\n\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"350px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h2>Track Your Symptoms</h2>\n          <h5>Stay on top of your health.</h5>\n          <p>\n            If you believe you've come in contact with COVID-19 or have tested\n            postive, input your test results, quarantine, and log your symptoms\n            daily.\n          </p>\n          <Button\n            href=\"/profile\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#202C42\",\n            }}\n          >\n            Log your symptoms\n          </Button>{\" \"}\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\n\nfunction Login(props) {\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  const referrer = props.location.state && props.location.state.referrer || '/';\n\n  if (isAdmin) {\n    return <Redirect to=\"/admin\" />;\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to={referrer} />;\n  }\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setIsAdmin(jwt(localStorage.getItem(\"CHT-tokens\"))?.user?.admin);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n\n  return (\n    <div style={{ padding: \"80px 0\" }}>\n      <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n        <Card.Body>\n          <Card.Title>\n            <h3>Login</h3>\n          </Card.Title>\n          <Form>\n            <Form.Group size=\"lg\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={handleSubmit}>\n              Login\n            </Button>\n          </Form>\n          <br />\n          {isError && <Alert variant='danger'>The username or password provided were incorrect.</Alert>}\n          <LinkContainer to=\"/signup\">\n            <Card.Link>Create new account</Card.Link>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\n\nfunction Signup() {\n    const [isSignedUp, setSignedUp] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [first_name, setFirst_name] = useState(\"\");\n    const [last_name, setLast_name] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const { setAuthTokens } = useAuth();\n\n    if (isSignedUp) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    function validateForm() {\n        const errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (password === '') {\n            errorMsg.push('Password cannot be blank');\n        }\n        if (first_name === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (last_name === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n        if (state.length !== 2) {\n            errorMsg.push('State must be a two-letter abbreviation');\n        }\n        if (errorMsg.length === 0) {\n            return true;\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (!validateForm()) {\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8080/auth/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    first_name,\n                    last_name,\n                    age,\n                    city,\n                    state\n                })\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                setAuthTokens(data);\n                setSignedUp(true);\n                setErrorMessage(\"\");\n            } else {\n                setErrorMessage(<span>{data.message}</span>);\n            }\n        } catch (error) {\n            setErrorMessage(<span>Problem with server, please try again.</span>);\n        }\n    }\n\n    return (\n        <div style={{ padding: \"80px 0\" }}>\n            <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n                <Card.Body>\n                    <Card.Title>\n                        <h3>Sign Up</h3>\n                    </Card.Title>\n                    <Form>\n                        <Form.Group size=\"lg\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                type=\"username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"first_name\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={first_name}\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"last_name\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={last_name}\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={age}\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"city\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"state\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button block size=\"lg\" type=\"submit\" onClick={handleSubmit}>\n                            Sign Up\n                        </Button>\n                    </Form>\n                    <br />\n                    {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                    <LinkContainer to=\"/login\">\n                        <Card.Link>Already have an account? Log in</Card.Link>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Col,\n  Container,\n  Jumbotron,\n  Row,\n  Accordion,\n  Card,\n  Modal,\n  Form,\n  Alert,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport jwt from \"jwt-decode\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Link } from \"react-router-dom\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport styled from \"styled-components\";\n\nconst Profile = () => {\n  const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n\n  //modals\n  const [showSymptom, setShowSymptom] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [showAddInfo, setAddInfo] = useState(false);\n  const [symptomEditScreen, setSymptomEditScreen] = useState(false);\n  const [testEditScreen, setTestEditScreen] = useState(false);\n  const [currentID, setCurrentID] = useState(\"\");\n\n  const [showTempAlert, setShowTempAlert] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const [currentInput, setCurrentInput] = useState(false);\n\n  //symptom input\n  const [temperature, setTemperature] = useState(\"\");\n  const [cough, setCough] = useState(false);\n  const [shortnessOfBreath, setShortnessOfBreath] = useState(false);\n  const [fatigue, setFatigue] = useState(false);\n  const [muscleBodyAches, setMuscleBodyAches] = useState(false);\n  const [lossOfTaste, setLossOfTaste] = useState(false);\n  const [soreThroat, setSoreThroat] = useState(false);\n  const [congestion, setCongestion] = useState(false);\n  const [nausea, setNausea] = useState(false);\n  const [other, setOther] = useState(\"\");\n\n  const [symptoms, setSymptoms] = useState([]);\n\n  const symptomColumns = React.useMemo(\n    () => [\n      {\n        Header: \"Date\",\n        id: \"date\",\n        accessor: (d) => d.date.substring(0, 10),\n      },\n      {\n        Header: \"Temp\",\n        accessor: \"temperature\",\n      },\n      {\n        Header: \"Cough\",\n        id: \"cough\",\n        accessor: (d) => (d.cough ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Shortness of Breath\",\n        id: \"shortBreath\",\n        accessor: (d) => (d.shortBreath ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Fatigue\",\n        id: \"fatigue\",\n        accessor: (d) => (d.fatigue ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Muscle/Body Aches\",\n        id: \"bodyAche\",\n        accessor: (d) => (d.bodyAche ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Loss of Taste\",\n        id: \"tasteLoss\",\n        accessor: (d) => (d.tasteLoss ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Sore Throat\",\n        id: \"soreThroat\",\n        accessor: (d) => (d.soreThroat ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Congestion\",\n        id: \"congestion\",\n        accessor: (d) => (d.congestion ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Nausea\",\n        id: \"nausea\",\n        accessor: (d) => (d.nausea ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Other\",\n        accessor: \"other\",\n      },\n    ],\n    []\n  );\n\n  const testColumns = React.useMemo(\n    () => [\n      {\n        Header: \"Date\",\n        id: \"date\",\n        accessor: (d) => d.date.substring(0, 10),\n      },\n      {\n        Header: \"Type\",\n        accessor: \"test\",\n      },\n      {\n        Header: \"Result\",\n        accessor: \"result\",\n      }\n    ],\n    []\n  );\n\n  const Styles = styled.div`\n    padding: 1rem;\n\n    table {\n      border-spacing: 0;\n      border: 1px solid black;\n\n      tr {\n        :last-child {\n          td {\n            border-bottom: 0;\n          }\n        }\n      }\n\n      th,\n      td {\n        margin: 0;\n        padding: 0.5rem;\n        border-bottom: 1px solid black;\n        border-right: 1px solid black;\n\n        :last-child {\n          border-right: 0;\n        }\n      }\n    }\n  `;\n\n  //test input\n  const [date, setDate] = useState(new Date());\n  const [testResult, setTestResult] = useState(\"Negative\");\n  const [testType, setTestType] = useState(\"\");\n\n  const [testResults, setTestResults] = useState([]);\n\n  const [showResults, setShowResults] = useState(false);\n  const [covidResults, setCovidResults] = useState(\"\");\n  const [severity, setSeverity] = useState(\"\");\n\n  useEffect(() => {\n    getSymptoms();\n    getTestResults();\n  }, []);\n\n  function getResults() {\n    if (symptoms.length == 0) {\n      setCovidResults(\"You have no logged symptoms.\");\n      return;\n    }\n    // most recent symptoms\n    var rS = symptoms[symptoms.length - 1];\n    if (\n      rS.temperature >= 100.4 ||\n      rS.cough ||\n      rS.shortBreath ||\n      rS.bodyAche ||\n      rS.congest ||\n      rS.fatigue ||\n      rS.nausea ||\n      rS.soreThroat ||\n      rS.tasteLoss\n    ) {\n      setCovidResults(\n        \"Based on your most recent symptoms, you may have COVID-19. The CDC recommends that anyone with symptoms of COVID-19 should get tested. It is important to stay home and quarentine.\"\n      );\n      axios\n        .post(\"http://localhost:8080/profile/ageAndRisk\", {\n          username: currentUser,\n        })\n        .then((response) => {\n          if (response.data[0].age >= 60 || response.data[0].atRisk) {\n            setSeverity(\"Severity: You may be at an increased risk of becoming more seriously ill due to COVID-19 because of your age or medical condition. Call your medical provider, clinician advice line, or telemedicine provider.\");\n          } else {\n            setSeverity(\"Severity: You are not at an increased risk of becoming more severely ill.\");\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      setCovidResults(\n        \"Based on your most recent symptoms, you are unlikely to have COVID-19. If you believe you may be infected, taking a COVID-19 test will give a more accurate result.\"\n      );\n      setSeverity(\"Severity: You are not at an increased risk of becoming more severely ill.\");\n    }\n  }\n\n  function reset() {\n    setTemperature(\"\");\n    setCough(false);\n    setShortnessOfBreath(false);\n    setFatigue(false);\n    setMuscleBodyAches(false);\n    setLossOfTaste(false);\n    setSoreThroat(false);\n    setCongestion(false);\n    setNausea(false);\n    setOther(\"\");\n    setDate(new Date());\n    setTestType(\"\");\n    setTestResult(\"Negative\");\n  }\n\n  function getSymptoms() {\n    return axios\n      .post(\"http://localhost:8080/profile/symptoms\", { username: currentUser })\n      .then((response) => {\n        setSymptoms(response.data.symptoms);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function submitSymptoms() {\n    if (temperature.length == 0 || isNaN(temperature)) {\n      setShowTempAlert(true);\n      return;\n    }\n    const data = {\n      username: currentUser,\n      temperature: temperature,\n      cough: cough,\n      shortBreath: shortnessOfBreath,\n      fatigue: fatigue,\n      bodyAche: muscleBodyAches,\n      tasteLoss: lossOfTaste,\n      soreThroat: soreThroat,\n      congestion: congestion,\n      nausea: nausea,\n      other: other,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/submitSymptoms\", data)\n      .then((response) => {\n        getSymptoms();\n        setCurrentInput(\"Your symptoms have been successfully submitted.\");\n        setShowConfirmation(true);\n        setShowSymptom(false);\n        reset();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function getTestResults() {\n    return axios\n      .post(\"http://localhost:8080/profile/tests\", { username: currentUser })\n      .then((response) => {\n        setTestResults(response.data.tests);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function submitTestResults() {\n    const data = {\n      username: currentUser,\n      date: date,\n      type: testType,\n      result: testResult,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/submitTestResults\", data)\n      .then((response) => {\n        getTestResults();\n        setDate(new Date());\n        setCurrentInput(\"Your test results have been successfully submitted.\");\n        setShowConfirmation(true);\n        reset();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef();\n      const resolvedRef = ref || defaultRef;\n\n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n      }, [resolvedRef, indeterminate]);\n\n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      );\n    }\n  );\n\n  function Table({ columns, data }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      selectedFlatRows,\n      state: { selectedRowIds },\n    } = useTable(\n      {\n        columns,\n        data,\n      },\n      useRowSelect,\n      (hooks) => {\n        hooks.visibleColumns.push((columns) => [\n          {\n            id: \"selection\",\n            Header: () => <div />,\n            Cell: ({ row }) => {\n              if (\n                rows.filter((row) => row.isSelected).length < 1 ||\n                row.isSelected\n              ) {\n                return (\n                  <div>\n                    <IndeterminateCheckbox\n                      {...row.getToggleRowSelectedProps()}\n                    />\n                  </div>\n                );\n              } else {\n                return (\n                  <div>\n                    <IndeterminateCheckbox\n                      checked={false}\n                      readOnly\n                      style={row.getToggleRowSelectedProps().style}\n                    />\n                  </div>\n                );\n              }\n            },\n          },\n          ...columns,\n        ]);\n      }\n    );\n\n    // Render the UI for table\n    return (\n      <>\n        <ButtonGroup>\n          <Button variant=\"secondary\" onClick={() => editRow(selectedFlatRows)}>\n            Edit\n          </Button>\n          <Button\n            variant=\"secondary\"\n            onClick={() => deleteRow(selectedFlatRows)}\n          >\n            Delete\n          </Button>\n        </ButtonGroup>\n        <br />\n        <br />\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  function editRow(selectedRow) {\n    if (selectedRow.length == 0) {\n      return;\n    }\n    if (selectedRow[0].original.test === undefined) {\n      setTemperature(selectedRow[0].original.temperature);\n      setCough(selectedRow[0].original.cough);\n      setShortnessOfBreath(selectedRow[0].original.shortBreath);\n      setFatigue(selectedRow[0].original.fatigue);\n      setMuscleBodyAches(selectedRow[0].original.bodyAche);\n      setLossOfTaste(selectedRow[0].original.tasteLoss);\n      setSoreThroat(selectedRow[0].original.soreThroat);\n      setCongestion(selectedRow[0].original.congest);\n      setNausea(selectedRow[0].original.nausea);\n      setOther(selectedRow[0].original.other);\n      setCurrentID(selectedRow[0].original.textid);\n      setSymptomEditScreen(true);\n    } else {\n      console.log(selectedRow[0].original);\n      setTestType(selectedRow[0].original.test);\n      setDate(new Date(selectedRow[0].original.date));\n      setTestResult(selectedRow[0].original.result);\n      setCurrentID(selectedRow[0].original.textid);\n      setTestEditScreen(true);\n    }\n  }\n\n  function submitSymptomEdit() {\n    const data = {\n      id: currentID,\n      temperature: temperature,\n      cough: cough,\n      shortBreath: shortnessOfBreath,\n      fatigue: fatigue,\n      bodyAche: muscleBodyAches,\n      tasteLoss: lossOfTaste,\n      soreThroat: soreThroat,\n      congestion: congestion,\n      nausea: nausea,\n      other: other,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/editSymptom\", data)\n      .then((response) => {\n        getSymptoms();\n        setSymptomEditScreen(false);\n        setCurrentInput(\"The row has been successfully edited.\");\n        setShowConfirmation(true);\n        reset();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function submitTestEdit() {\n    const data = {\n      id: currentID,\n      date: date,\n      test: testType,\n      result: testResult,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/editTest\", data)\n      .then((response) => {\n        getTestResults();\n        setTestEditScreen(false);\n        setCurrentInput(\"The row has been successfully edited.\");\n        setShowConfirmation(true);\n        reset();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function deleteRow(selectedRow) {\n    if (selectedRow.length == 0) {\n      return;\n    }\n    if (selectedRow[0].original.test === undefined) {\n      const data = {\n        id: symptoms[selectedRow[0].index].textid,\n      };\n      return axios\n        .post(\"http://localhost:8080/profile/deleteSymptom\", data)\n        .then((response) => {\n          setCurrentInput(\"The row has been successfully deleted.\");\n          setShowConfirmation(true);\n          getSymptoms();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      const data = {\n        id: testResults[selectedRow[0].index].textid,\n      };\n      return axios\n        .post(\"http://localhost:8080/profile/deleteTest\", data)\n        .then((response) => {\n          setCurrentInput(\"The row has been successfully deleted.\");\n          setShowConfirmation(true);\n          getTestResults();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }\n\n  return (\n    <>\n      <Jumbotron fluid style={{ background: \"#20475A\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>Hello, {currentUser}</h1>\n        </Container>\n      </Jumbotron>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Accordion>\n              <Card\n                style={{\n                  background: \"#316A87\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"0\"\n                    style={{ color: \"white\" }}\n                  >\n                    Log Symptoms\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Log your symptoms daily. People with COVID-19 have had a\n                    wide range of symptoms reported – ranging from mild symptoms\n                    to severe illness. Symptoms may appear 2-14 days after\n                    exposure to the virus.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowSymptom(true)}\n                    >\n                      Log Symptoms\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#408cb3\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"1\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add Test Results\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Who should get tested?\n                    <li>People who have symptoms of COVID-19.</li>\n                    <li>\n                      People who have had close contact (within 6 feet for a\n                      total of 15 minutes or more) with someone with confirmed\n                      COVID-19.\n                    </li>\n                    <li>\n                      People who have taken part in activities that put them at\n                      higher risk for COVID-19 because they cannot socially\n                      distance as needed, such as travel, attending large social\n                      or mass gatherings, or being in crowded indoor settings.\n                    </li>\n                    <li>\n                      People who have been asked or referred to get testing by\n                      their healthcare provider, or state ​health department.\n                    </li>\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowTest(true)}\n                    >\n                      Add Test Results\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#69A9C9\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"2\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add More Information\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Some people are more likely than others to become severely\n                    ill,\n                    <li>older adults</li>\n                    <li>people with medical conditions</li>\n                    Understanding who is at risk can help determine the severity\n                    and precautions you should take.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setAddInfo(true)}\n                    >\n                      Add More Information\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <br />\n            <Card>\n              <Card.Body>\n                <strong>\n                  Seek immediate medical attention if someone is showing signs\n                  of:\n                </strong>\n                <li>Trouble breathing</li>\n                <li>Persistent pain or pressure in the chest</li>\n                <li>New Confusion</li>\n                <li>Inability to wake or stay awake</li>\n                <li>\n                  Pale, gray, or blue-colored skin, lips, or nail beds,\n                  depending on skin tone\n                </li>\n              </Card.Body>\n            </Card>\n            <br />\n          </Col>\n          <Col md={8}>\n            <Row className=\"justify-content-center\">\n              <Button\n                style={{\n                  background: \"#5340b3\",\n                  color: \"white\",\n                  border: \"#202C42\",\n                }}\n                onClick={() => {\n                  getResults();\n                  setShowResults(true);\n                }}\n              >\n                Check Results\n              </Button>\n            </Row>\n            <br />\n            <Row className=\"justify-content-center\">\n              <Alert\n                show={showConfirmation}\n                variant=\"success\"\n                onClose={() => setShowConfirmation(false)}\n                dismissible\n              >\n                <Alert.Heading>{currentInput}</Alert.Heading>\n              </Alert>\n            </Row>\n            <br />\n            <Row>\n              <Styles>\n                <Table columns={symptomColumns} data={symptoms} />\n              </Styles>\n            </Row>\n            <Row>\n              <Styles>\n                <Table columns={testColumns} data={testResults} />\n              </Styles>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n\n      <Modal\n        show={showResults}\n        onHide={() => setShowResults(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Body>\n          <p>\n            <strong>Results: {covidResults}</strong>\n          </p>\n          <p>\n            <strong>{severity}</strong>\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setShowResults(false)}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showSymptom}\n        onHide={() => setShowSymptom(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Log Symptoms</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"temperature\" type=\"number\">\n              <Form.Label>Temperature (&#176;Fahrenheit)</Form.Label>\n              <Form.Control onChange={(e) => setTemperature(e.target.value)} />\n            </Form.Group>\n            <Alert show={showTempAlert} variant=\"danger\">\n              <p>Please input a valid temperature.</p>\n            </Alert>\n            <br />\n            <p>Please select the symptoms you are experiencing.</p>\n            <Form.Check label={\"Cough\"} onChange={(e) => setCough(!cough)} />\n            <Form.Check\n              label={\"Shortness of breath\"}\n              onChange={(e) => setShortnessOfBreath(!shortnessOfBreath)}\n            />\n            <Form.Check\n              label={\"Fatigue\"}\n              onChange={(e) => setFatigue(!fatigue)}\n            />\n            <Form.Check\n              label={\"Muscle or body aches\"}\n              onChange={(e) => setMuscleBodyAches(!muscleBodyAches)}\n            />\n            <Form.Check\n              label={\"Loss of taste\"}\n              onChange={(e) => setLossOfTaste(!lossOfTaste)}\n            />\n            <Form.Check\n              label={\"Sore throat\"}\n              onChange={(e) => setSoreThroat(!soreThroat)}\n            />\n            <Form.Check\n              label={\"Congestion or runny nose\"}\n              onChange={(e) => setCongestion(!congestion)}\n            />\n            <Form.Check label={\"Nausea\"} onChange={(e) => setNausea(!nausea)} />\n            <Form.Group controlId=\"other\" type=\"text\">\n              <Form.Label>Other</Form.Label>\n              <Form.Control onChange={(e) => setOther(e.target.value)} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => {\n              setShowSymptom(false);\n              setShowTempAlert(false);\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              submitSymptoms();\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showTest}\n        onHide={() => setShowTest(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add Test Results</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"testType\" type=\"text\">\n              <Form.Label>Test Type</Form.Label>\n              <Form.Control onChange={(e) => setTestType(e.target.value)} />\n            </Form.Group>\n            <DatePicker\n              selected={date}\n              onChange={(date) => setDate(date)}\n              dateFormat=\"MM/dd/yyyy\"\n            />\n            <br />\n            <br />\n            <Form.Control\n              as=\"select\"\n              value={\"Negative\"}\n              onChange={(e) => setTestResult(e.target.value)}\n            >\n              <option value={\"Negative\"}>Negative</option>\n              <option value={\"Positive\"}>Positive</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setShowTest(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              submitTestResults();\n              setShowTest(false);\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        size=\"lg\"\n        show={showAddInfo}\n        onHide={() => setAddInfo(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add More Information</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <br />\n          <p>\n            Adults of any age with certain underlying medical conditions are at\n            increased risk for severe illness. The conditions are:\n          </p>\n          <li>Cancer</li>\n          <li>Chronic kidney disease</li>\n          <li>COPD (chronic obstructive pulmonary disease</li>\n          <li>Down Syndrome</li>\n          <li>\n            Heart conditions, such as heart failure, coronary artery disease, or\n            cardiomyopathies\n          </li>\n          <li>\n            Immunocompromised state (weakened immune system) from solid organ\n            transplant\n          </li>\n          <li>\n            Obesity (body mass index [BMI] of 30 kg/m<sup>2</sup> or higher but\n            &#60; 40 kg/m<sup>2</sup>)\n          </li>\n          <li>\n            Severe Obesity (BMI ≥ 40 kg/m<sup>2</sup>)\n          </li>\n          <li>Pregancy</li>\n          <li>Sickle cell disease</li>\n          <li>Smoking</li>\n          <li>Type 2 diabetes mellitus</li>\n          <br />\n          <p>\n            Older adults are at the highest risk, and the greatest risk for\n            severe illness from COVID-19 is among those aged 85 or older.\n          </p>\n          <br />\n          <p>You can add this information in the setting page.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setAddInfo(false)}\n          >\n            Close\n          </Button>\n          <Link to=\"/settings\">\n            <Button\n              style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n              style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            >\n              Go to settings\n            </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={symptomEditScreen}\n        onHide={() => setSymptomEditScreen(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Edit Symptom</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"temperature\" type=\"number\">\n              <Form.Label>Temperature (&#176;Fahrenheit)</Form.Label>\n              <Form.Control\n                placeholder={temperature}\n                onChange={(e) => setTemperature(e.target.value)}\n              />\n            </Form.Group>\n            <Alert show={showTempAlert} variant=\"danger\">\n              <p>Please input a valid temperature.</p>\n            </Alert>\n            <br />\n            <p>Please select the symptoms you are experiencing.</p>\n            <Form.Check\n              label={\"Cough\"}\n              onChange={(e) => setCough(!cough)}\n              checked={cough}\n            />\n            <Form.Check\n              label={\"Shortness of breath\"}\n              onChange={(e) => setShortnessOfBreath(!shortnessOfBreath)}\n              checked={shortnessOfBreath}\n            />\n            <Form.Check\n              label={\"Fatigue\"}\n              onChange={(e) => setFatigue(!fatigue)}\n              checked={fatigue}\n            />\n            <Form.Check\n              label={\"Muscle or body aches\"}\n              onChange={(e) => setMuscleBodyAches(!muscleBodyAches)}\n              checked={muscleBodyAches}\n            />\n            <Form.Check\n              label={\"Loss of taste\"}\n              onChange={(e) => setLossOfTaste(!lossOfTaste)}\n              checked={lossOfTaste}\n            />\n            <Form.Check\n              label={\"Sore throat\"}\n              onChange={(e) => setSoreThroat(!soreThroat)}\n              checked={soreThroat}\n            />\n            <Form.Check\n              label={\"Congestion or runny nose\"}\n              onChange={(e) => setCongestion(!congestion)}\n              checked={congestion}\n            />\n            <Form.Check\n              label={\"Nausea\"}\n              onChange={(e) => setNausea(!nausea)}\n              checked={nausea}\n            />\n            <Form.Group controlId=\"other\" type=\"text\">\n              <Form.Label>Other</Form.Label>\n              <Form.Control\n                onChange={(e) => setOther(e.target.value)}\n                placeholder={other}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setSymptomEditScreen(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              //setEditScreen(false);\n              submitSymptomEdit();\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={testEditScreen}\n        onHide={() => setTestEditScreen(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Edit Test</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"testType\" type=\"text\">\n              <Form.Label>Test Type</Form.Label>\n              <Form.Control\n                placeholder={testType}\n                onChange={(e) => setTestType(e.target.value)} />\n            </Form.Group>\n            <DatePicker\n              selected={date}\n              onChange={(date) => setDate(date)}\n              dateFormat=\"MM/dd/yyyy\"\n            />\n            <br />\n            <br />\n            <Form.Control\n              as=\"select\"\n              value={testResult}\n              onChange={(e) => setTestResult(e.target.value)}\n            >\n              <option value={\"Negative\"}>Negative</option>\n              <option value={\"Positive\"}>Positive</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setTestEditScreen(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              //setEditScreen(false);\n              submitTestEdit();\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Col,\n    Container,\n    Row,\n    Form,\n    Alert\n} from \"react-bootstrap\";\nimport jwt from \"jwt-decode\";\n\nconst Settings = () => {\n\n    // Form State\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [atRisk, setAtRisk] = useState(false);\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n\n    // Status State\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n\n    // GET /user/profile/:username\n    async function getProfile(username) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                }\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when fetching profile'];\n        }\n    }\n\n    // PATCH /user/profile/:username\n    async function patchProfile(username, args) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                },\n                body: JSON.stringify(args)\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when updating profile'];\n        }\n    }\n\n    // Fill out Placeholder Values\n    async function populateProfile(args, callback, error) {\n        const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n        const [status, data] = await callback(currentUser, args);\n        if (status) {\n            setErrorMessage(\"\");\n            // Only don't set success on first load\n            setSuccess(username !== '');\n            setUsername(data.username);\n            setPassword(\"\");\n            setFirstName(data.first_name);\n            setLastName(data.last_name);\n            setAge(data.age);\n            setAtRisk(data.atRisk);\n            setCity(data.city);\n            setState(data.state);\n        } else {\n            setErrorMessage(data);\n            setSuccess(false);\n            if (error) {\n                error(data);\n            }\n        }\n    }\n\n    // Verify Form Submission\n    function submitPatch() {\n        let errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (firstName === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (lastName === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n\n        if (errorMsg.length === 0) {\n            const args = {\n                username,\n                password,\n                first_name: firstName,\n                last_name: lastName,\n                age,\n                atRisk,\n                city,\n                state\n            };\n            populateProfile(args, patchProfile, null);\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    useEffect(() => {\n        populateProfile(null, getProfile);\n    }, []);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                    <h1>Update Profile</h1>\n                    <Form>\n                        <Form.Group controlId=\"username\" type=\"text\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                placeholder={username}\n                                onChange={(e) => setUsername(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\" type=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"firstName\" type=\"text\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                placeholder={firstName}\n                                onChange={(e) => setFirstName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"lastName\" type=\"text\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                placeholder={lastName}\n                                onChange={(e) => setLastName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"age\" type=\"number\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder={age}\n                                onChange={(e) => setAge(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"atRisk\" type=\"checkbox\">\n                            <Form.Label>At Risk</Form.Label>\n                            <Form.Check\n                                checked={atRisk}\n                                onChange={(e) => setAtRisk(e.target.checked)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"city\" type=\"text\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                placeholder={city}\n                                onChange={(e) => setCity(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"state\" type=\"text\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                placeholder={state}\n                                onChange={(e) => setState(e.target.value)} />\n                        </Form.Group>\n                        <Button\n                            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n                            onClick={submitPatch}>\n                            Save\n                        </Button>\n                        <br />\n                        <br />\n                        {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                        {success && <Alert variant='success'>Profile Updated Successfully. If you changed the username, pleas logout and log back in.</Alert>}\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Container, Card, Col } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst useFetch = url => {\n  const [users, setUsers] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  function createData(name, username, age, atRisk, city, state) {\n    return { name, username, age, atRisk, city, state };\n  }\n\n  useEffect(async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const arr = [];\n    for (let i = 0; i < data.length; i++) {\n      arr.push(createData(data[i].first_name + ' ' + data[i].last_name, data[i].username, data[i].age, data[i].atRisk, data[i].city, data[i].state));\n    }\n    setUsers(arr);\n    setLoading(false);\n  }, []);\n\n  return { users, isLoading };\n};\n\nconst Admin = () => {\n  const { users, isLoading } = useFetch(\"http://localhost:8080/admin/users\");\n\n  return (\n    <Container fluid>\n      {isLoading ? <div>Loading...</div> :\n        <Col md={3} style={{ padding: 100 }}>\n          <Card style={{ background: \"#40B3A0\" }}>\n            <Card.Body>\n              <Card.Title><Link to={{\n                pathname: '/admin/users',\n                state: users,\n              }}> User List </Link></Card.Title>\n            </Card.Body>\n          </Card>\n        </Col>\n      }\n    </Container>\n  );\n}\n\nexport default Admin;\n\n","import { Button, Row, Col, Container, Jumbotron, Alert } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: \"90%\",\n  height: \"90%\",\n};\n\nexport class Testing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPosition: {\n        lat: 32.779167,\n        lng: -96.808891,\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      places: [],\n      showAlert: false,\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState((prevState) => ({\n          currentPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n        }));\n      });\n    }\n  }\n\n  findNearby = () => {\n    navigator.permissions.query({ name: \"geolocation\" }).then((result) => {\n      if (result.state == \"denied\") {\n        this.setState({\n          showAlert: true,\n        });\n        return;\n      }\n    });\n\n    const pos = this.state.currentPosition;\n\n    return axios\n      .post(\"http://localhost:8080/location/testing\", pos)\n      .then((response) => {\n        this.setState({ places: response.data.results });\n        console.log(this.state.places);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for nearby testing locations.</h1>\n            (Be sure to turn location permissions on.)\n            <br />\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findNearby}\n            >\n              Find Testing Locations\n            </Button>\n          </Container>\n        </Jumbotron>\n        <Container fluid>\n          <Row className=\"mt-5\">\n            <Col md={4}>\n              <strong>Who should get tested?</strong>\n              <li>People who have symptoms of COVID-19.</li>\n              <li>\n                People who have had close contact (within 6 feet for a total of\n                15 minutes or more) with someone with confirmed COVID-19.\n              </li>\n              <li>\n                People who have taken part in activities that put them at higher\n                risk for COVID-19 because they cannot socially distance as\n                needed, such as travel, attending large social or mass\n                gatherings, or being in crowded indoor settings.\n              </li>\n              <li>\n                People who have been asked or referred to get testing by their\n                healthcare provider, or state ​health department.\n              </li>\n              <br />\n              <strong>There are two types of tests,</strong>\n              <li>A viral test tells you if you have a current infection.</li>\n              <li>\n                An antibody test may tell you if you've had a past infection.\n              </li>\n              <br />\n              Learn more{\" \"}\n              <a href=\" https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/testing.html\">\n                here.\n              </a>\n            </Col>\n            <Col md={8} style={{ height: \"800px\" }}>\n              <Alert\n                show={this.state.showAlert}\n                variant=\"danger\"\n                style={{ width: \"80%\" }}\n              >\n                Please turn on location permissions.\n              </Alert>\n              <Map\n                google={this.props.google}\n                zoom={12}\n                style={mapStyles}\n                initialCenter={this.state.currentPosition}\n                center={this.state.currentPosition}\n              >\n                {this.state.places.map((item) => (\n                  <Marker\n                    onClick={this.onMarkerClick}\n                    position={item.geometry.location}\n                    name={item.name}\n                    address={item.formatted_address}\n                  />\n                ))}\n\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}\n                  onClose={this.onClose}\n                >\n                  <div>\n                    <strong>{this.state.selectedPlace.name}</strong>\n                    <p>{this.state.selectedPlace.address}</p>\n                  </div>\n                </InfoWindow>\n              </Map>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API,\n})(Testing);\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\nimport { Toolbar, Typography, Paper, Checkbox, IconButton, Tooltip, FormControlLabel, Switch } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SearchBar from \"material-ui-search-bar\";\nimport { useLocation } from 'react-router-dom';\nimport axios from \"axios\";\n\nconst Users = () => {\n    const { state } = useLocation();\n    const [rows, setRows] = useState(state);\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    const headCells = [\n        { id: 'name', disablePadding: true, label: 'Name' },\n        { id: 'username', disablePadding: false, label: 'Username' },\n        { id: 'age', disablePadding: false, label: 'Age' },\n        { id: 'atRisk', disablePadding: false, label: 'At Risk' },\n        { id: 'city', disablePadding: false, label: 'City' },\n        { id: 'state', disablePadding: false, label: 'State' },\n    ];\n\n    function EnhancedTableHead(props) {\n        const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n        const createSortHandler = (property) => (event) => {\n            onRequestSort(event, property);\n        };\n\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell padding=\"checkbox\">\n                        <Checkbox\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\n                            checked={rowCount > 0 && numSelected === rowCount}\n                            onChange={onSelectAllClick}\n                            inputProps={{ 'aria-label': 'select all users' }}\n                        />\n                    </TableCell>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            padding={headCell.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === headCell.id ? order : false}\n                        >\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={orderBy === headCell.id ? order : 'asc'}\n                                onClick={createSortHandler(headCell.id)}\n                            >\n                                {headCell.label}\n                                {orderBy === headCell.id ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    }\n\n    EnhancedTableHead.propTypes = {\n        classes: PropTypes.object.isRequired,\n        numSelected: PropTypes.number.isRequired,\n        onRequestSort: PropTypes.func.isRequired,\n        onSelectAllClick: PropTypes.func.isRequired,\n        order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    const useToolbarStyles = makeStyles((theme) => ({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1),\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                    color: theme.palette.secondary.main,\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n                }\n                : {\n                    color: theme.palette.text.primary,\n                    backgroundColor: theme.palette.secondary.dark,\n                },\n        title: {\n            flex: '1 1 100%',\n        },\n    }));\n\n    const EnhancedTableToolbar = (props) => {\n        const classes = useToolbarStyles();\n        const { numSelected, selected } = props;\n\n        const deleteUsers = () => {\n            selected.map(username => handleDelete(username));\n            const newRows = rows.filter((row) => !selected.includes(row.username));\n\n            setRows(newRows);\n            requestSearch(searched, newRows);\n            setSelected([]);\n        }\n\n        return (\n            <Toolbar\n                className={clsx(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                {numSelected > 0 ? (\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        List of Users\n                    </Typography>\n                )}\n\n                {numSelected > 0 &&\n                    <Tooltip title=\"Remove User(s)\">\n                        <IconButton onClick={() => deleteUsers()}>\n                            <DeleteForeverIcon />\n                        </IconButton>\n                    </Tooltip>\n                }\n            </Toolbar>\n        );\n    };\n\n    EnhancedTableToolbar.propTypes = {\n        numSelected: PropTypes.number.isRequired,\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }));\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = filteredRows.map((n) => n.username);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, username) => {\n        const selectedIndex = selected.indexOf(username);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, username);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const handleDelete = (username) => {\n        const data = {\n            username: username,\n        };\n        return axios\n            .post(\"http://localhost:8080/admin/delete\", data)\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    const isSelected = (username) => selected.indexOf(username) !== -1;\n    const [filteredRows, setFilteredRows] = useState(rows);\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const [searched, setSearched] = useState(\"\");\n\n    const requestSearch = (searchedVal, rows) => {\n        setSearched(searchedVal);\n        const newRows = rows.filter((row) => {\n            return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n        });\n        setFilteredRows(newRows);\n    };\n\n    const cancelSearch = () => {\n        setSearched(\"\");\n        requestSearch(searched, rows);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <SearchBar\n                    placeholder='Search Name'\n                    value={searched}\n                    onChange={(searchVal) => requestSearch(searchVal, rows)}\n                    onCancelSearch={() => cancelSearch()}\n                />\n                <EnhancedTableToolbar numSelected={selected.length} selected={selected} />\n\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(filteredRows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.username);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.username)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell>{row.username}</TableCell>\n                                            <TableCell>{row.age}</TableCell>\n                                            <TableCell>{row.atRisk}</TableCell>\n                                            <TableCell>{row.city}</TableCell>\n                                            <TableCell>{row.state}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Minimize\"\n            />\n        </div>\n    );\n}\n\nexport default Users;","import React, { Component } from \"react\";\nimport {\n  Button,\n  Jumbotron,\n  Container,\n  Form,\n  Col,\n  Card,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n//https://www.vaccinespotter.org/api/\n//https://github.com/GUI/covid-vaccine-spotter\n\nexport default class Vaccine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zip: \"\",\n      distance: Number.MAX_SAFE_INTEGER, // any distance\n      locations: [],\n      noZipAlert: false,\n      noMatchAlert: false,\n    };\n  }\n\n  findVaccine = () => {\n    console.log(/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip));\n    if (!/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip)) {\n      this.setState({\n        noZipAlert: true,\n      });\n      return;\n    }\n    this.setState({\n      noZipAlert: false,\n      noMatchAlert: false,\n    });\n\n    const data = { zip: this.state.zip, distance: this.state.distance };\n    axios\n      .post(\"http://localhost:8080/location/vaccine\", data)\n      .then((response) => {\n        if (response.data == \"No match\") {\n          this.setState({\n            noMatchAlert: true,\n            locations: [],\n          });\n        } else {\n          this.setState({\n            locations: response.data,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for vaccines.</h1>\n            Always be sure to first check\n            <li>your states guidelines on eligibility</li>\n            <li>the availability of a vaccine at each location</li>\n            <li>and to schedule your appointment</li>\n            <br />\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    value={this.state.zip}\n                    onChange={(e) => this.setState({ zip: e.target.value })}\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Within</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"Any Distance\"\n                    onChange={(e) =>\n                      this.setState({ distance: e.target.value })\n                    }\n                  >\n                    <option value={Number.MAX_SAFE_INTEGER}>\n                      Any Distance\n                    </option>\n                    <option value={5}>5 miles</option>\n                    <option value={10}>10 miles</option>\n                    <option value={25}>25 miles</option>\n                    <option value={50}>50 miles</option>\n                    <option value={100}>100 miles</option>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findVaccine}\n            >\n              Find Vaccines\n            </Button>\n          </Container>\n        </Jumbotron>\n\n        <Container fluid className=\"justify-content-center\">\n          <Row className=\"justify-content-md-center mb-5\">\n            <Alert\n              show={this.state.noZipAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              Please enter a zip.\n            </Alert>\n            <Alert\n              show={this.state.noMatchAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              There are no matches for this area.\n            </Alert>\n          </Row>\n        </Container>\n\n        <Container fluid className=\"justify-content-center\">\n          {this.state.locations.map((place) => (\n            <Row className=\"justify-content-md-center mb-5\">\n              <Card\n                style={{ width: \"50%\", background: \"#408cb3\", color: \"white\" }}\n              >\n                <Card.Header>\n                  <h4>{place.provider_brand_name}</h4>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title>\n                    {place.address}, {place.city}, {place.state}\n                  </Card.Title>\n                  <Card.Text>\n                    Appointments available:{\" \"}\n                    {place.appointments_available ? <p>Yes</p> : <p>No</p>}\n                  </Card.Text>\n                  <Button\n                    style={{\n                      background: \"#5340b3\",\n                      border: \"#5340b3\",\n                    }}\n                  >\n                    <a style={{ color: \"white\" }} href={place.url}>\n                      Visit {place.provider_brand_name}'s site\n                    </a>\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          ))}\n        </Container>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Badge, Col, Container, Jumbotron, Media, Row } from \"react-bootstrap\";\n\nconst useFetch = () => {\n    const [news, setNews] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n    const key = \"bb279f1560c14af2b31fb0c75c8e4187\"\n    const today = new Date();\n    const curDate = formatDate(today);\n    const prevDate = formatDate(new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000));\n    const url = \"https://newsapi.org/v2/everything?q=covid19&language=en&from=\" + prevDate + \"&to=\" + curDate + \"&sortBy=popularity&apiKey=\" + key;\n\n    function formatDate(input) {\n        let date = input.getFullYear() + '-' + (input.getMonth() + 1) + '-' + input.getDate();\n        return date;\n    }\n\n    useEffect(async () => {\n        const response = await fetch(url, {\n            \"method\": \"GET\",\n        });\n        const data = await response.json();\n        setNews(data.articles);\n        setLoading(false);\n    }, []);\n\n    return { news, isLoading };\n};\n\nconst News = () => {\n    const { news, isLoading } = useFetch();\n\n    const openInNewTab = (url) => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    const onMouseOver = event => {\n        const el = event.target;\n        el.style.color = \"#0078ff\";\n        el.style.cursor = \"pointer\";\n        el.style.textDecoration = \"underline\"\n    };\n\n    const onMouseOut = event => {\n        const el = event.target;\n        el.style.color = \"white\";\n        el.style.textDecoration = \"none\"\n    };\n\n    return (\n        <>\n            {isLoading ? <div>Loading...</div> :\n                <>\n                    <Jumbotron fluid style={{ background: \"#20475A\" }}>\n                        <Container>\n                            <Media>\n                                <img\n                                    width={500}\n                                    height={315}\n                                    className=\"mr-3\"\n                                    src={news[0].urlToImage}\n                                    alt=\"Loading Image\"\n                                />\n                                <Media.Body>\n                                    <span><Badge variant=\"info\">{news[0].source.name}</Badge></span>\n                                    <h2\n                                        onMouseEnter={event => onMouseOver(event)}\n                                        onMouseOut={event => onMouseOut(event)}\n                                        onClick={() => openInNewTab(news[0].url)}\n                                        style={{ color: \"white\", fontWeight: \"bold\" }}>\n                                        {news[0].title}\n                                    </h2>\n                                    <p style={{ color: \"white\", fontSize: \"95%\" }}>{news[0].content.substring(0, 200)}</p>\n                                    <p style={{ color: \"silver\" }}>{news[0].publishedAt.substring(0, 10)}</p>\n                                </Media.Body>\n                            </Media>\n                        </Container>\n                    </Jumbotron>\n                    <Container>\n                        <Row>\n                            {news.slice(1, 6).map((article) => {\n                                const onMouseOver = event => {\n                                    const el = event.target;\n                                    el.style.color = \"#0078ff\";\n                                    el.style.cursor = \"pointer\";\n                                    el.style.textDecoration = \"underline\"\n                                };\n\n                                const onMouseOut = event => {\n                                    const el = event.target;\n                                    el.style.color = \"blue\";\n                                    el.style.textDecoration = \"none\"\n                                };\n\n                                return (\n                                    <Col>\n                                        <Media>\n                                            <Media.Body>\n                                                <img\n                                                    width={180}\n                                                    height={100}\n                                                    className=\"mr-3\"\n                                                    src={article.urlToImage}\n                                                    alt=\"Loading Image...\"\n                                                />\n                                                <p onMouseEnter={event => onMouseOver(event)}\n                                                    onMouseOut={event => onMouseOut(event)}\n                                                    onClick={() => openInNewTab(article.url)}\n                                                    style={{ fontSize: \"80%\", width: \"180px\", color: \"blue\" }}>\n                                                    {article.title.substring(0, 50) + \"...\"}\n                                                </p>\n                                            </Media.Body>\n                                        </Media>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                        {news.slice(6).map((article) => {\n                            const onMouseOver = event => {\n                                const el = event.target;\n                                el.style.color = \"#0078ff\";\n                                el.style.cursor = \"pointer\";\n                            };\n\n                            const onMouseOut = event => {\n                                const el = event.target;\n                                el.style.color = \"#000000\";\n                            };\n\n                            return (\n                                <Media style={{ paddingTop: \"25px\", paddingBottom: \"25px\" }}>\n                                    <img\n                                        width={320}\n                                        height={200}\n                                        className=\"mr-3\"\n                                        src={article.urlToImage}\n                                        alt=\"Loading Image...\"\n                                    />\n                                    <Media.Body>\n                                        <h6><Badge variant=\"info\">{article.source.name}</Badge></h6>\n                                        <h4\n                                            onMouseEnter={event => onMouseOver(event)}\n                                            onMouseOut={event => onMouseOut(event)}\n                                            onClick={() => openInNewTab(article.url)}>\n                                            {article.title}</h4>\n                                        <p>{article.content.substring(0, 200)}</p>\n                                        <p style={{ color: \"silver\" }}>{article.publishedAt.substring(0, 10)}</p>\n                                    </Media.Body>\n                                </Media>\n                            );\n                        })}\n                    </Container>\n                </>\n            }\n        </>\n    );\n}\n\nexport default News;","export default __webpack_public_path__ + \"static/media/northAmerica.3c49df03.png\";","export default __webpack_public_path__ + \"static/media/southAmerica.b61c5b62.png\";","export default __webpack_public_path__ + \"static/media/europe.36249986.png\";","export default __webpack_public_path__ + \"static/media/asia.0404f597.png\";","export default __webpack_public_path__ + \"static/media/africa.26a705a6.png\";","export default __webpack_public_path__ + \"static/media/australia.210a5f7a.png\";","import { Component } from \"react\";\nimport {\n  Image,\n  Row,\n  Col,\n  Container,\n  Modal,\n  Button,\n  Jumbotron,\n} from \"react-bootstrap\";\nimport Fade from \"react-reveal/Fade\";\nimport USAMap from \"react-usa-map\";\nimport axios from \"axios\";\nimport \"../css/map.css\";\n\n//images\nimport northAmerica from \"../images/northAmerica.png\";\nimport southAmerica from \"../images/southAmerica.png\";\nimport europe from \"../images/europe.png\";\nimport asia from \"../images/asia.png\";\nimport africa from \"../images/africa.png\";\nimport australia from \"../images/australia.png\";\n\nexport default class Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      continents: [],\n      images: new Map(),\n      states: [],\n      clickedState: {},\n      stateModal: false,\n    };\n    this.state.images.set(\"North America\", northAmerica);\n    this.state.images.set(\"South America\", southAmerica);\n    this.state.images.set(\"Europe\", europe);\n    this.state.images.set(\"Asia\", asia);\n    this.state.images.set(\"Africa\", africa);\n    this.state.images.set(\"Australia/Oceania\", australia);\n  }\n\n  componentDidMount() {\n    Promise.all([\n      axios.get(\"http://localhost:8080/data/continents\"),\n      axios.get(\"http://localhost:8080/data/states\"),\n    ])\n      .then(([result1, result2]) => {\n        this.setState({\n          continents: result1.data,\n          states: result2.data,\n        });\n        console.log(this.state.states);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  mapHandler = (event) => {\n    const stateList = {\n      AZ: \"Arizona\",\n      AL: \"Alabama\",\n      AK: \"Alaska\",\n      AR: \"Arkansas\",\n      CA: \"California\",\n      CO: \"Colorado\",\n      CT: \"Connecticut\",\n      DC: \"District of Columbia\",\n      DE: \"Delaware\",\n      FL: \"Florida\",\n      GA: \"Georgia\",\n      HI: \"Hawaii\",\n      ID: \"Idaho\",\n      IL: \"Illinois\",\n      IN: \"Indiana\",\n      IA: \"Iowa\",\n      KS: \"Kansas\",\n      KY: \"Kentucky\",\n      LA: \"Louisiana\",\n      ME: \"Maine\",\n      MD: \"Maryland\",\n      MA: \"Massachusetts\",\n      MI: \"Michigan\",\n      MN: \"Minnesota\",\n      MS: \"Mississippi\",\n      MO: \"Missouri\",\n      MT: \"Montana\",\n      NE: \"Nebraska\",\n      NV: \"Nevada\",\n      NH: \"New Hampshire\",\n      NJ: \"New Jersey\",\n      NM: \"New Mexico\",\n      NY: \"New York\",\n      NC: \"North Carolina\",\n      ND: \"North Dakota\",\n      OH: \"Ohio\",\n      OK: \"Oklahoma\",\n      OR: \"Oregon\",\n      PA: \"Pennsylvania\",\n      RI: \"Rhode Island\",\n      SC: \"South Carolina\",\n      SD: \"South Dakota\",\n      TN: \"Tennessee\",\n      TX: \"Texas\",\n      UT: \"Utah\",\n      VT: \"Vermont\",\n      VA: \"Virginia\",\n      WA: \"Washington\",\n      WV: \"West Virginia\",\n      WI: \"Wisconsin\",\n      WY: \"Wyoming\",\n      AS: \"American Samoa\",\n      GU: \"Guam\",\n      MP: \"Northern Mariana Islands\",\n      PR: \"Puerto Rico\",\n      VI: \"U.S. Virgin Islands\",\n      UM: \"U.S. Minor Outlying Islands\",\n      DC: \"District Of Columbia\",\n    };\n    var abbr = event.target.dataset.name;\n    console.log(abbr);\n    var stateName = stateList[abbr];\n    var stateData = {};\n    this.state.states.forEach(function (item, index) {\n      if (item.state === stateName) {\n        stateData = item;\n      }\n    });\n    this.setState({ clickedState: stateData, stateModal: true });\n  };\n\n  render() {\n    const dataTitleStyle = {\n      fontFamily: \"Helvitica\",\n      fontSize: \"2vw\",\n      color: \"white\",\n    };\n    const dataValueStyle = {\n      fontFamily: \"Helvitica\",\n      fontSize: \"2vw\",\n      color: \"white\",\n    };\n    const dataItemStyle = {\n      marginBottom: \"50px\",\n      color: \"white\",\n    };\n    const continentStyle = {\n      fontSize: \"5vw\",\n      fontFamily: \"Helvitica\",\n      marginBottom: \"100px\",\n      color: \"white\",\n    };\n    return (\n      <>\n        <Jumbotron\n          fluid\n          style={{\n            background: \"#408cb3\",\n          }}\n        >\n          <Container style={{ color: \"white\", marginBottom: \"200px\", marginTop: \"100px\"}}>\n            <Row className=\"justify-content-center\">\n              <USAMap onClick={this.mapHandler} />\n            </Row>\n          </Container>\n          {this.state.continents.map((continent) => (\n            <Container\n              style={{ position: \"relative\", textAlign: \"center\", marginBottom: \"100px\"}}\n              fluid\n            >\n              <Image\n                src={this.state.images.get(continent.continent)}\n                fluid\n                style={{ width: \"auto\", height: \"650px\" }}\n              />\n              <Row\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                }}\n              >\n                <Col>\n                  <Fade bottom>\n                    <Row className=\"justify-content-center\">\n                      <h1 style={continentStyle}>{continent.continent}</h1>\n                    </Row>\n                  </Fade>\n                  <Fade bottom>\n                    <Row style={dataItemStyle}>\n                      <Col>\n                        <Row className=\"justify-content-center\">\n                          <h2 style={dataTitleStyle}>Total Cases:</h2>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                          <h3 style={dataValueStyle}>{continent.cases}</h3>\n                        </Row>\n                      </Col>\n                      <Col>\n                        <Row className=\"justify-content-center\">\n                          <h2 style={dataTitleStyle}>Total Deaths:</h2>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                          <h3 style={dataValueStyle}>{continent.deaths}</h3>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Fade>\n                  <Fade bottom>\n                    <Row style={dataItemStyle}>\n                      <Col>\n                        <Row className=\"justify-content-center\">\n                          <h2 style={dataTitleStyle}>Total Recovered:</h2>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                          <h3 style={dataValueStyle}>{continent.recovered}</h3>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Fade>\n                  <Fade bottom>\n                    <Row style={{ width: \"120%\" }}>\n                      <Col>\n                        <Row className=\"justify-content-center\">\n                          <h2 style={dataTitleStyle}>Today's Cases:</h2>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                          <h3 style={dataValueStyle}>{continent.todayCases}</h3>\n                        </Row>\n                      </Col>\n                      <Col>\n                        <Row className=\"justify-content-center\">\n                          <h2 style={dataTitleStyle}>Today's Deaths:</h2>\n                        </Row>\n                        <Row className=\"justify-content-center\">\n                          <h3 style={dataValueStyle}>\n                            {continent.todayDeaths}\n                          </h3>\n                        </Row>\n                      </Col>\n                    </Row>\n                  </Fade>\n                </Col>\n              </Row>\n            </Container>\n          ))}\n        </Jumbotron>\n        <Modal\n          show={this.state.stateModal}\n          onHide={() => this.setState({ stateModal: false })}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header>\n            <Modal.Title>{this.state.clickedState.state}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col>\n                <Row className=\"justify-content-center\">\n                  <h5>Total Cases:</h5>\n                </Row>\n                <Row className=\"justify-content-center\">\n                  <h5>{this.state.clickedState.cases}</h5>\n                </Row>\n              </Col>\n              <Col>\n                <Row className=\"justify-content-center\">\n                  <h5>Total Deaths:</h5>\n                </Row>\n                <Row className=\"justify-content-center\">\n                  <h5>{this.state.clickedState.deaths}</h5>\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Row className=\"justify-content-center\">\n                  <h5>Total Recovered:</h5>\n                </Row>\n                <Row className=\"justify-content-center\">\n                  <h5>{this.state.clickedState.recovered}</h5>\n                </Row>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Row className=\"justify-content-center\">\n                  <h5>Today's Cases:</h5>\n                </Row>\n                <Row className=\"justify-content-center\">\n                  <h5>{this.state.clickedState.todayCases}</h5>\n                </Row>\n              </Col>\n              <Col>\n                <Row className=\"justify-content-center\">\n                  <h5>Today's Deaths:</h5>\n                </Row>\n                <Row className=\"justify-content-center\">\n                  <h5>{this.state.clickedState.todayDeaths}</h5>\n                </Row>\n              </Col>\n            </Row>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              style={{ background: \"gray\", border: \"gray\" }}\n              onClick={() => this.setState({ stateModal: false })}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nfunction ProtectedRoute({ component: Component, admin = false, ...rest }) {\n    const { authTokens } = useAuth();\n    try {\n        if (admin) {\n            const isAdmin = jwt(localStorage.getItem(\"CHT-tokens\"))?.user?.admin;\n            return (\n                <Route {...rest} render={props => authTokens && isAdmin\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: '/login',\n                        state: { referrer: rest.path }\n                    }} />} />\n            );\n        } else {\n            return (\n                <Route {...rest} render={props => authTokens\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: '/login',\n                        state: { referrer: rest.path }\n                    }} />} />\n            );\n        }\n    } catch (error) {\n        return (\n            <Redirect to={{\n                pathname: '/login',\n                state: { referrer: rest.path }\n            }} />\n        );\n    }\n}\n\nexport default ProtectedRoute;\n","import React, { useState } from \"react\";\nimport CHTNavbar from \"./components/CHTNavbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Settings from \"./pages/Settings\";\nimport Admin from \"./pages/Admin\";\nimport Testing from \"./pages/Testing\";\nimport Users from \"./pages/Users\"\nimport Vaccine from \"./pages/Vaccine\";\nimport News from \"./pages/News\"\nimport Data from \"./pages/Data\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { AuthContext } from \"./context/auth\";\n\nconst CHT_TOKENS = \"CHT-tokens\";\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(CHT_TOKENS));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(CHT_TOKENS, JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n        <Router>\n          <CHTNavbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/testing\">\n              <Testing />\n            </Route>\n            <Route exact path=\"/vaccine\">\n              <Vaccine />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n            <Route exact path=\"/data\">\n              <Data />\n            </Route>\n            <ProtectedRoute exact path=\"/admin\" component={Admin} admin={true} />\n            <ProtectedRoute exact path=\"/admin/users\" component={Users} admin={true} />\n            <ProtectedRoute exact path=\"/profile\" component={Profile} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}