{"version":3,"sources":["context/auth.js","components/CHTNavbar.js","images/covid.jpg","images/covidtesting.jpg","images/covidvaccine.jpg","pages/Home.js","pages/Login.js","pages/Signup.js","pages/Profile.js","pages/Settings.js","pages/Admin.js","pages/Testing.js","pages/Users.js","pages/Vaccine.js","pages/News.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","CHTNavbar","setAuthTokens","token","existingTokens","JSON","parse","localStorage","getItem","getToken","admin","jwt","user","Navbar","sticky","style","background","variant","to","Brand","href","Nav","className","Link","onClick","Home","Jumbotron","fluid","height","Container","color","Button","size","border","Row","Col","md","paddingLeft","Card","Img","src","covid","maxHeight","Body","Title","Text","paddingRight","covidTesting","covidVaccine","Login","props","useState","isLoggedIn","setLoggedIn","isError","setIsError","isAdmin","setIsAdmin","username","setUsername","password","setPassword","referrer","location","state","event","a","preventDefault","fetch","method","headers","body","stringify","response","json","data","status","padding","width","margin","Form","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","block","disabled","length","Alert","Signup","isSignedUp","setSignedUp","errorMessage","setErrorMessage","first_name","setFirst_name","last_name","setLast_name","age","setAge","city","setCity","setState","validateForm","errorMsg","push","map","message","Profile","currentUser","showSymptom","setShowSymptom","showTest","setShowTest","showAddInfo","setAddInfo","editScreen","setEditScreen","showTempAlert","setShowTempAlert","showConfirmation","setShowConfirmation","currentInput","setCurrentInput","temperature","setTemperature","cough","setCough","shortnessOfBreath","setShortnessOfBreath","fatigue","setFatigue","muscleBodyAches","setMuscleBodyAches","lossOfTaste","setLossOfTaste","soreThroat","setSoreThroat","congestion","setCongestion","nausea","setNausea","other","setOther","symptoms","setSymptoms","currentID","setCurrentID","columns","React","useMemo","Header","id","accessor","d","date","substring","shortBreath","bodyAche","tasteLoss","Styles","styled","div","Date","setDate","testResult","setTestResult","testType","setTestType","reset","getSymptoms","axios","post","then","console","log","catch","err","error","useEffect","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","Table","useTable","useRowSelect","hooks","visibleColumns","Cell","row","rows","filter","isSelected","getToggleRowSelectedProps","checked","readOnly","getTableProps","getTableBodyProps","headerGroups","prepareRow","selectedFlatRows","selectedRowIds","ButtonGroup","selectedRow","original","congest","textid","editRow","index","deleteRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","Accordion","Toggle","as","eventKey","Collapse","show","onClose","dismissible","Heading","Modal","onHide","backdrop","keyboard","Check","label","Footer","isNaN","submitSymptoms","selected","dateFormat","result","submitTestResults","placeholder","submitEdit","Settings","firstName","setFirstName","lastName","setLastName","atRisk","setAtRisk","success","setSuccess","getProfile","patchProfile","args","populateProfile","callback","Admin","url","users","setUsers","isLoading","setLoading","arr","name","useFetch","pathname","mapStyles","Testing","findNearby","navigator","permissions","query","showAlert","pos","currentPosition","places","results","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","lat","lng","geolocation","getCurrentPosition","position","prevState","coords","latitude","longitude","this","google","zoom","initialCenter","center","item","geometry","address","formatted_address","visible","Component","GoogleApiWrapper","apiKey","process","Users","useLocation","setRows","descendingComparator","b","orderBy","headCells","disablePadding","EnhancedTableHead","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","root","spacing","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","Tooltip","IconButton","handleDelete","newRows","includes","requestSearch","searched","setSelected","deleteUsers","paper","marginBottom","table","minWidth","clip","overflow","top","useStyles","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","filteredRows","setFilteredRows","emptyRows","Math","min","setSearched","searchedVal","toLowerCase","Paper","searchVal","onCancelSearch","TableContainer","aria-labelledby","aria-label","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","Vaccine","findVaccine","test","zip","noZipAlert","noMatchAlert","distance","locations","Number","MAX_SAFE_INTEGER","defaultValue","place","provider_brand_name","appointments_available","News","news","setNews","today","curDate","formatDate","getTime","input","getFullYear","getMonth","getDate","articles","openInNewTab","newWindow","window","open","opener","Media","urlToImage","alt","Badge","source","onMouseEnter","cursor","textDecoration","onMouseOver","onMouseOut","fontWeight","fontSize","content","publishedAt","article","paddingTop","paddingBottom","ProtectedRoute","authTokens","path","CHT_TOKENS","App","Provider","setItem","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2efe3885.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n","import { Navbar, Nav, Button } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nconst CHTNavbar = () => {\n  const { setAuthTokens } = useAuth();\n  const token = getToken();\n  const admin = (token) ? jwt(localStorage.getItem(\"CHT-tokens\")).user.admin : 0;\n\n  function logOut() {\n    setAuthTokens(null);\n  }\n\n  function getToken() {\n    const existingTokens = JSON.parse(localStorage.getItem(\"CHT-tokens\"));\n    return existingTokens?.token;\n  }\n\n  return (\n    <Navbar sticky=\"top\" style={{ background: \"#408cb3\" }} variant=\"dark\">\n      <LinkContainer to=\"/\">\n        <Navbar.Brand href=\"#home\">COVID Health Tracker</Navbar.Brand>\n      </LinkContainer>\n      <Nav className=\"mr-auto\">\n        {(admin === 1) &&\n          <LinkContainer to=\"/admin\">\n            <Nav.Link>Admin</Nav.Link>\n          </LinkContainer>\n        }\n        <LinkContainer to=\"/profile\">\n          <Nav.Link>Profile</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/#\">\n          <Nav.Link>Data</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/testing\">\n          <Nav.Link>Testing</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/vaccine\">\n          <Nav.Link>Vaccine</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/news\">\n          <Nav.Link>News</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      <Nav>\n        {token ? (\n          <>\n            <LinkContainer to=\"/settings\">\n              <Nav.Link>Settings</Nav.Link>\n            </LinkContainer>\n            <Nav.Link onClick={logOut}>Logout</Nav.Link>\n          </>\n        ) : (\n          <>\n            <LinkContainer to=\"/signup\">\n              <Nav.Link>Signup</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/login\">\n              <Nav.Link>Login</Nav.Link>\n            </LinkContainer>\n          </>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default CHTNavbar;\n","export default __webpack_public_path__ + \"static/media/covid.aa223103.jpg\";","export default __webpack_public_path__ + \"static/media/covidtesting.496d9fb8.jpg\";","export default __webpack_public_path__ + \"static/media/covidvaccine.c207afae.jpg\";","import { Jumbotron, Container, Button, Card, Row, Col } from \"react-bootstrap\";\nimport covid from \"../images/covid.jpg\";\nimport covidTesting from \"../images/covidtesting.jpg\";\nimport covidVaccine from \"../images/covidvaccine.jpg\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"400px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>COVID-19 Health Tracker</h1>\n          <h5>Track your symptoms.</h5>\n          <p>\n            As a central hub for COVID-19 data, keep up with important news and\n            statistics about the virus and vaccine while tracking your symptoms.\n            Update your test results and learn more about contact tracing.\n          </p>\n          <Button\n            href=\"/signup\"\n            size=\"lg\"\n            style={{\n              background: \"#5340b3\",\n              color: \"white\",\n              border: \"#202C42\",\n            }}\n          >\n            Signup\n          </Button>{\" \"}\n          <Button\n            href=\"/login\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#8096A8\",\n            }}\n          >\n            Login\n          </Button>\n        </Container>\n      </Jumbotron>\n\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col md={4} style={{ paddingLeft: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img variant=\"top\" src={covid} style={{ maxHeight: 260 }} />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>COVID-19 Data</Card.Title>\n                <Card.Text>Learn more about important COVID-19 data.</Card.Text>\n                <Button\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Data tracker\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingLeft: 50, paddingRight: 50 }}>\n            <Card style={{ background: \"#408db3\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidTesting}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>Testing</Card.Title>\n                <Card.Text>\n                  Find out more about testing and locations near you.\n                </Card.Text>\n                <Button\n                  href=\"/testing\"\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={4} style={{ paddingRight: 100 }}>\n            <Card style={{ background: \"#40B3A0\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={covidVaccine}\n                style={{ maxHeight: 260 }}\n              />\n              <Card.Body style={{ color: \"white\" }}>\n                <Card.Title>News</Card.Title>\n                <Card.Text>\n                  Read up on news about COVID-19 and the vaccine.\n                </Card.Text>\n                <Button\n                  href=\"/news\"\n                  style={{\n                    background: \"white\",\n                    color: \"#408cb3\",\n                    border: \"#408cb3\",\n                  }}\n                >\n                  Learn More\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      <br />\n\n      <Jumbotron fluid style={{ background: \"#408cb3\", height: \"350px\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h2>Track Your Symptoms</h2>\n          <h5>Stay on top of your health.</h5>\n          <p>\n            If you believe you've come in contact with COVID-19 or have tested\n            postive, input your test results, quarantine, and log your symptoms\n            daily.\n          </p>\n          <Button\n            href=\"/profile\"\n            size=\"lg\"\n            style={{\n              background: \"white\",\n              color: \"#408cb3\",\n              border: \"#202C42\",\n            }}\n          >\n            Log your symptoms\n          </Button>{\" \"}\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\n\nfunction Login(props) {\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  const referrer = props.location.state && props.location.state.referrer || '/';\n\n  if (isAdmin) {\n    return <Redirect to=\"/admin\" />;\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to={referrer} />;\n  }\n\n  function validateForm() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:8080/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        setAuthTokens(data);\n        setIsAdmin(jwt(localStorage.getItem(\"CHT-tokens\"))?.user?.admin);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n\n  return (\n    <div style={{ padding: \"80px 0\" }}>\n      <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n        <Card.Body>\n          <Card.Title>\n            <h3>Login</h3>\n          </Card.Title>\n          <Form>\n            <Form.Group size=\"lg\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                autoFocus\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()} onClick={handleSubmit}>\n              Login\n            </Button>\n          </Form>\n          <br />\n          {isError && <Alert variant='danger'>The username or password provided were incorrect.</Alert>}\n          <LinkContainer to=\"/signup\">\n            <Card.Link>Create new account</Card.Link>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { useAuth } from \"../context/auth\";\n\n\nfunction Signup() {\n    const [isSignedUp, setSignedUp] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [first_name, setFirst_name] = useState(\"\");\n    const [last_name, setLast_name] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const { setAuthTokens } = useAuth();\n\n    if (isSignedUp) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    function validateForm() {\n        const errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (password === '') {\n            errorMsg.push('Password cannot be blank');\n        }\n        if (first_name === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (last_name === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n        if (state.length !== 2) {\n            errorMsg.push('State must be a two-letter abbreviation');\n        }\n        if (errorMsg.length === 0) {\n            return true;\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if (!validateForm()) {\n            return;\n        }\n        try {\n            const response = await fetch('http://localhost:8080/auth/signup', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    first_name,\n                    last_name,\n                    age,\n                    city,\n                    state\n                })\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                setAuthTokens(data);\n                setSignedUp(true);\n                setErrorMessage(\"\");\n            } else {\n                setErrorMessage(<span>{data.message}</span>);\n            }\n        } catch (error) {\n            setErrorMessage(<span>Problem with server, please try again.</span>);\n        }\n    }\n\n    return (\n        <div style={{ padding: \"80px 0\" }}>\n            <Card style={{ width: \"380px\", margin: \"0 auto\" }}>\n                <Card.Body>\n                    <Card.Title>\n                        <h3>Sign Up</h3>\n                    </Card.Title>\n                    <Form>\n                        <Form.Group size=\"lg\" controlId=\"username\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                autoFocus\n                                type=\"username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"first_name\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={first_name}\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"last_name\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={last_name}\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={age}\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"city\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group size=\"lg\" controlId=\"state\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Button block size=\"lg\" type=\"submit\" onClick={handleSubmit}>\n                            Sign Up\n                        </Button>\n                    </Form>\n                    <br />\n                    {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                    <LinkContainer to=\"/login\">\n                        <Card.Link>Already have an account? Log in</Card.Link>\n                    </LinkContainer>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Col,\n  Container,\n  Jumbotron,\n  Row,\n  Accordion,\n  Card,\n  Modal,\n  Form,\n  Alert,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport jwt from \"jwt-decode\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Link } from \"react-router-dom\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport styled from \"styled-components\";\n\nconst Profile = () => {\n  const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n\n  //modals\n  const [showSymptom, setShowSymptom] = useState(false);\n  const [showTest, setShowTest] = useState(false);\n  const [showAddInfo, setAddInfo] = useState(false);\n  const [editScreen, setEditScreen] = useState(false);\n\n  const [showTempAlert, setShowTempAlert] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const [currentInput, setCurrentInput] = useState(false);\n\n  //symptom input\n  const [temperature, setTemperature] = useState(\"\");\n  const [cough, setCough] = useState(false);\n  const [shortnessOfBreath, setShortnessOfBreath] = useState(false);\n  const [fatigue, setFatigue] = useState(false);\n  const [muscleBodyAches, setMuscleBodyAches] = useState(false);\n  const [lossOfTaste, setLossOfTaste] = useState(false);\n  const [soreThroat, setSoreThroat] = useState(false);\n  const [congestion, setCongestion] = useState(false);\n  const [nausea, setNausea] = useState(false);\n  const [other, setOther] = useState(\"\");\n\n  const [symptoms, setSymptoms] = useState([]);\n  const [currentID, setCurrentID] = useState(\"\");\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date\",\n        id: \"date\",\n        accessor: (d) => d.date.substring(0, 10),\n      },\n      {\n        Header: \"Temp\",\n        accessor: \"temperature\",\n      },\n      {\n        Header: \"Cough\",\n        id: \"cough\",\n        accessor: (d) => (d.cough ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Shortness of Breath\",\n        id: \"shortBreath\",\n        accessor: (d) => (d.shortBreath ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Fatigue\",\n        id: \"fatigue\",\n        accessor: (d) => (d.fatigue ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Muscle/Body Aches\",\n        id: \"bodyAche\",\n        accessor: (d) => (d.bodyAche ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Loss of Taste\",\n        id: \"tasteLoss\",\n        accessor: (d) => (d.tasteLoss ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Sore Throat\",\n        id: \"soreThroat\",\n        accessor: (d) => (d.soreThroat ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Congestion\",\n        id: \"congestion\",\n        accessor: (d) => (d.congestion ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Nausea\",\n        id: \"nausea\",\n        accessor: (d) => (d.nausea ? \"Yes\" : \"No\"),\n      },\n      {\n        Header: \"Other\",\n        accessor: \"other\",\n      },\n    ],\n    []\n  );\n\n  const Styles = styled.div`\n    padding: 1rem;\n\n    table {\n      border-spacing: 0;\n      border: 1px solid black;\n\n      tr {\n        :last-child {\n          td {\n            border-bottom: 0;\n          }\n        }\n      }\n\n      th,\n      td {\n        margin: 0;\n        padding: 0.5rem;\n        border-bottom: 1px solid black;\n        border-right: 1px solid black;\n\n        :last-child {\n          border-right: 0;\n        }\n      }\n    }\n  `;\n\n  //test result input\n  const [date, setDate] = useState(new Date());\n  const [testResult, setTestResult] = useState(\"Negative\");\n  const [testType, setTestType] = useState(\"\");\n\n  useEffect(() => {\n    getSymptoms();\n  }, []);\n\n  function reset() {\n    setTemperature(\"\");\n    setCough(false);\n    setShortnessOfBreath(false);\n    setFatigue(false);\n    setMuscleBodyAches(false);\n    setLossOfTaste(false);\n    setSoreThroat(false);\n    setCongestion(false);\n    setNausea(false);\n    setOther(\"\");\n  }\n\n  function getSymptoms() {\n    return axios\n      .post(\"http://localhost:8080/profile/symptoms\", { username: currentUser })\n      .then((response) => {\n        setSymptoms(response.data.symptoms);\n        console.log(response.data.symptoms);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function submitSymptoms() {\n    if (temperature.length == 0 || isNaN(temperature)) {\n      setShowTempAlert(true);\n      return;\n    }\n    const data = {\n      username: currentUser,\n      temperature: temperature,\n      cough: cough,\n      shortBreath: shortnessOfBreath,\n      fatigue: fatigue,\n      bodyAche: muscleBodyAches,\n      tasteLoss: lossOfTaste,\n      soreThroat: soreThroat,\n      congestion: congestion,\n      nausea: nausea,\n      other: other,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/submitSymptoms\", data)\n      .then((response) => {\n        getSymptoms();\n        setCurrentInput(\"Your symptoms have been successfully submitted.\");\n        setShowConfirmation(true);\n        setShowSymptom(false);\n        reset();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function submitTestResults() {\n    const data = {\n      username: currentUser,\n      date: date,\n      type: testType,\n      result: testResult,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/submitTestResults\", data)\n      .then((response) => {\n        setDate(new Date());\n        setCurrentInput(\"Your test results have been successfully submitted.\");\n        setShowConfirmation(true);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef();\n      const resolvedRef = ref || defaultRef;\n\n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n      }, [resolvedRef, indeterminate]);\n\n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      );\n    }\n  );\n\n  function Table({ columns, data }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n      selectedFlatRows,\n      state: { selectedRowIds },\n    } = useTable(\n      {\n        columns,\n        data,\n      },\n      useRowSelect,\n      (hooks) => {\n        hooks.visibleColumns.push((columns) => [\n          {\n            id: \"selection\",\n            Header: () => <div />,\n            Cell: ({ row }) => {\n              if (\n                rows.filter((row) => row.isSelected).length < 1 ||\n                row.isSelected\n              ) {\n                return (\n                  <div>\n                    <IndeterminateCheckbox\n                      {...row.getToggleRowSelectedProps()}\n                    />\n                  </div>\n                );\n              } else {\n                return (\n                  <div>\n                    <IndeterminateCheckbox\n                      checked={false}\n                      readOnly\n                      style={row.getToggleRowSelectedProps().style}\n                    />\n                  </div>\n                );\n              }\n            },\n          },\n          ...columns,\n        ]);\n      }\n    );\n\n    // Render the UI for table\n    return (\n      <>\n        <ButtonGroup>\n          <Button variant=\"secondary\" onClick={() => editRow(selectedFlatRows)}>\n            Edit\n          </Button>\n          <Button\n            variant=\"secondary\"\n            onClick={() => deleteRow(selectedFlatRows)}\n          >\n            Delete\n          </Button>\n        </ButtonGroup>\n        <br />\n        <br />\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n\n  function editRow(selectedRow) {\n    if (selectedRow.length == 0) {\n      return;\n    }\n    setTemperature(selectedRow[0].original.temperature);\n    setCough(selectedRow[0].original.cough);\n    setShortnessOfBreath(selectedRow[0].original.shortBreath);\n    setFatigue(selectedRow[0].original.fatigue);\n    setMuscleBodyAches(selectedRow[0].original.bodyAche);\n    setLossOfTaste(selectedRow[0].original.tasteLoss);\n    setSoreThroat(selectedRow[0].original.soreThroat);\n    setCongestion(selectedRow[0].original.congest);\n    setNausea(selectedRow[0].original.nausea);\n    setOther(selectedRow[0].original.other);\n    setCurrentID(selectedRow[0].original.textid);\n    setEditScreen(true);\n  }\n\n  function submitEdit() {\n    const data = {\n      id: currentID,\n      temperature: temperature,\n      cough: cough,\n      shortBreath: shortnessOfBreath,\n      fatigue: fatigue,\n      bodyAche: muscleBodyAches,\n      tasteLoss: lossOfTaste,\n      soreThroat: soreThroat,\n      congestion: congestion,\n      nausea: nausea,\n      other: other,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/editSymptom\", data)\n      .then((response) => {\n        getSymptoms();\n        setEditScreen(false);\n        setCurrentInput(\"The row has been successfully edited.\");\n        setShowConfirmation(true);\n        reset();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function deleteRow(selectedRow) {\n    if (selectedRow.length == 0) {\n      return;\n    }\n    const data = {\n      id: symptoms[selectedRow[0].index].textid,\n    };\n    return axios\n      .post(\"http://localhost:8080/profile/deleteSymptom\", data)\n      .then((response) => {\n        setCurrentInput(\"The row has been successfully deleted.\");\n        setShowConfirmation(true);\n        getSymptoms();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  return (\n    <>\n      <Jumbotron fluid style={{ background: \"#20475A\" }}>\n        <Container style={{ color: \"white\" }}>\n          <h1>Hello, {currentUser}</h1>\n        </Container>\n      </Jumbotron>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Accordion>\n              <Card\n                style={{\n                  background: \"#316A87\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"0\"\n                    style={{ color: \"white\" }}\n                  >\n                    Log Symptoms\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Log your symptoms daily. People with COVID-19 have had a\n                    wide range of symptoms reported – ranging from mild symptoms\n                    to severe illness. Symptoms may appear 2-14 days after\n                    exposure to the virus.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowSymptom(true)}\n                    >\n                      Log Symptoms\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#408cb3\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"1\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add Test Results\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Who should get tested?\n                    <li>People who have symptoms of COVID-19.</li>\n                    <li>\n                      People who have had close contact (within 6 feet for a\n                      total of 15 minutes or more) with someone with confirmed\n                      COVID-19.\n                    </li>\n                    <li>\n                      People who have taken part in activities that put them at\n                      higher risk for COVID-19 because they cannot socially\n                      distance as needed, such as travel, attending large social\n                      or mass gatherings, or being in crowded indoor settings.\n                    </li>\n                    <li>\n                      People who have been asked or referred to get testing by\n                      their healthcare provider, or state ​health department.\n                    </li>\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setShowTest(true)}\n                    >\n                      Add Test Results\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card\n                style={{\n                  background: \"#69A9C9\",\n                  color: \"white\",\n                  border: \"white\",\n                }}\n              >\n                <Card.Header>\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"link\"\n                    eventKey=\"2\"\n                    style={{ color: \"white\" }}\n                  >\n                    Add More Information\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"2\">\n                  <Card.Body style={{ background: \"#87BAD4\" }}>\n                    Some people are more likely than others to become severely\n                    ill,\n                    <li>older adults</li>\n                    <li>people with medical conditions</li>\n                    Understanding who is at risk can help determine the severity\n                    and precautions you should take.\n                    <br />\n                    <br />\n                    <Button\n                      style={{\n                        background: \"#5340b3\",\n                        color: \"white\",\n                        border: \"#202C42\",\n                      }}\n                      onClick={() => setAddInfo(true)}\n                    >\n                      Add More Information\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <br />\n            <Card>\n              <Card.Body>\n                <strong>\n                  Seek immediate medical attention if someone is showing signs\n                  of:\n                </strong>\n                <li>Trouble breathing</li>\n                <li>Persistent pain or pressure in the chest</li>\n                <li>New Confusion</li>\n                <li>Inability to wake or stay awake</li>\n                <li>\n                  Pale, gray, or blue-colored skin, lips, or nail beds,\n                  depending on skin tone\n                </li>\n              </Card.Body>\n            </Card>\n            <br />\n          </Col>\n          <Col md={8}>\n            <Row className=\"justify-content-center\">\n              <Card>\n                <Card.Body>\n                  <h4>Results:</h4>\n                  <p>\n                    <strong>Likelihood: </strong>\n                  </p>\n                  <p>\n                    <strong>Severity:</strong>\n                  </p>\n                </Card.Body>\n              </Card>\n            </Row>\n            <br />\n            <Row className=\"justify-content-center\">\n              <Alert\n                show={showConfirmation}\n                variant=\"success\"\n                onClose={() => setShowConfirmation(false)}\n                dismissible\n              >\n                <Alert.Heading>{currentInput}</Alert.Heading>\n              </Alert>\n            </Row>\n            <br />\n            <Row>\n              <Styles>\n                <Table columns={columns} data={symptoms} />\n              </Styles>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n\n      <Modal\n        show={showSymptom}\n        onHide={() => setShowSymptom(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Log Symptoms</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"temperature\" type=\"number\">\n              <Form.Label>Temperature (&#176;Fahrenheit)</Form.Label>\n              <Form.Control onChange={(e) => setTemperature(e.target.value)} />\n            </Form.Group>\n            <Alert show={showTempAlert} variant=\"danger\">\n              <p>Please input a valid temperature.</p>\n            </Alert>\n            <br />\n            <p>Please select the symptoms you are experiencing.</p>\n            <Form.Check label={\"Cough\"} onChange={(e) => setCough(!cough)} />\n            <Form.Check\n              label={\"Shortness of breath\"}\n              onChange={(e) => setShortnessOfBreath(!shortnessOfBreath)}\n            />\n            <Form.Check\n              label={\"Fatigue\"}\n              onChange={(e) => setFatigue(!fatigue)}\n            />\n            <Form.Check\n              label={\"Muscle or body aches\"}\n              onChange={(e) => setMuscleBodyAches(!muscleBodyAches)}\n            />\n            <Form.Check\n              label={\"Loss of taste\"}\n              onChange={(e) => setLossOfTaste(!lossOfTaste)}\n            />\n            <Form.Check\n              label={\"Sore throat\"}\n              onChange={(e) => setSoreThroat(!soreThroat)}\n            />\n            <Form.Check\n              label={\"Congestion or runny nose\"}\n              onChange={(e) => setCongestion(!congestion)}\n            />\n            <Form.Check label={\"Nausea\"} onChange={(e) => setNausea(!nausea)} />\n            <Form.Group controlId=\"other\" type=\"text\">\n              <Form.Label>Other</Form.Label>\n              <Form.Control onChange={(e) => setOther(e.target.value)} />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => {\n              setShowSymptom(false);\n              setShowTempAlert(false);\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              submitSymptoms();\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={showTest}\n        onHide={() => setShowTest(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add Test Results</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"testType\" type=\"text\">\n              <Form.Label>Test Type</Form.Label>\n              <Form.Control onChange={(e) => setTestType(e.target.value)} />\n            </Form.Group>\n            <DatePicker\n              selected={date}\n              onChange={(date) => setDate(date)}\n              dateFormat=\"MM/dd/yyyy\"\n            />\n            <br />\n            <br />\n            <Form.Control\n              as=\"select\"\n              onChange={(e) => setTestResult(e.target.value)}\n            >\n              <option value={\"Negative\"}>Negative</option>\n              <option value={\"Positive\"}>Positive</option>\n            </Form.Control>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setShowTest(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              submitTestResults();\n              setShowTest(false);\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        size=\"lg\"\n        show={showAddInfo}\n        onHide={() => setAddInfo(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Add More Information</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <br />\n          <p>\n            Adults of any age with certain underlying medical conditions are at\n            increased risk for severe illness. The conditions are:\n          </p>\n          <li>Cancer</li>\n          <li>Chronic kidney disease</li>\n          <li>COPD (chronic obstructive pulmonary disease</li>\n          <li>Down Syndrome</li>\n          <li>\n            Heart conditions, such as heart failure, coronary artery disease, or\n            cardiomyopathies\n          </li>\n          <li>\n            Immunocompromised state (weakened immune system) from solid organ\n            transplant\n          </li>\n          <li>\n            Obesity (body mass index [BMI] of 30 kg/m<sup>2</sup> or higher but\n            &#60; 40 kg/m<sup>2</sup>)\n          </li>\n          <li>\n            Severe Obesity (BMI ≥ 40 kg/m<sup>2</sup>)\n          </li>\n          <li>Pregancy</li>\n          <li>Sickle cell disease</li>\n          <li>Smoking</li>\n          <li>Type 2 diabetes mellitus</li>\n          <br />\n          <p>\n            Older adults are at the highest risk, and the greatest risk for\n            severe illness from COVID-19 is among those aged 85 or older.\n          </p>\n          <br />\n          <p>You can add this information in the setting page.</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setAddInfo(false)}\n          >\n            Close\n          </Button>\n          <Link to=\"/settings\">\n            <Button\n              style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n              style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            >\n              Go to settings\n            </Button>\n          </Link>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        show={editScreen}\n        onHide={() => setEditScreen(false)}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header>\n          <Modal.Title>Edit Symptom</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"temperature\" type=\"number\">\n              <Form.Label>Temperature (&#176;Fahrenheit)</Form.Label>\n              <Form.Control\n                placeholder={temperature}\n                onChange={(e) => setTemperature(e.target.value)}\n              />\n            </Form.Group>\n            <Alert show={showTempAlert} variant=\"danger\">\n              <p>Please input a valid temperature.</p>\n            </Alert>\n            <br />\n            <p>Please select the symptoms you are experiencing.</p>\n            <Form.Check\n              label={\"Cough\"}\n              onChange={(e) => setCough(!cough)}\n              checked={cough}\n            />\n            <Form.Check\n              label={\"Shortness of breath\"}\n              onChange={(e) => setShortnessOfBreath(!shortnessOfBreath)}\n              checked={shortnessOfBreath}\n            />\n            <Form.Check\n              label={\"Fatigue\"}\n              onChange={(e) => setFatigue(!fatigue)}\n              checked={fatigue}\n            />\n            <Form.Check\n              label={\"Muscle or body aches\"}\n              onChange={(e) => setMuscleBodyAches(!muscleBodyAches)}\n              checked={muscleBodyAches}\n            />\n            <Form.Check\n              label={\"Loss of taste\"}\n              onChange={(e) => setLossOfTaste(!lossOfTaste)}\n              checked={lossOfTaste}\n            />\n            <Form.Check\n              label={\"Sore throat\"}\n              onChange={(e) => setSoreThroat(!soreThroat)}\n              checked={soreThroat}\n            />\n            <Form.Check\n              label={\"Congestion or runny nose\"}\n              onChange={(e) => setCongestion(!congestion)}\n              checked={congestion}\n            />\n            <Form.Check\n              label={\"Nausea\"}\n              onChange={(e) => setNausea(!nausea)}\n              checked={nausea}\n            />\n            <Form.Group controlId=\"other\" type=\"text\">\n              <Form.Label>Other</Form.Label>\n              <Form.Control\n                onChange={(e) => setOther(e.target.value)}\n                placeholder={other}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            style={{ background: \"gray\", border: \"gray\" }}\n            onClick={() => setEditScreen(false)}\n          >\n            Close\n          </Button>\n          <Button\n            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n            onClick={() => {\n              //setEditScreen(false);\n              submitEdit();\n            }}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Col,\n    Container,\n    Row,\n    Form,\n    Alert\n} from \"react-bootstrap\";\nimport jwt from \"jwt-decode\";\n\nconst Settings = () => {\n\n    // Form State\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [atRisk, setAtRisk] = useState(false);\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n\n    // Status State\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n\n    // GET /user/profile/:username\n    async function getProfile(username) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                }\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when fetching profile'];\n        }\n    }\n\n    // PATCH /user/profile/:username\n    async function patchProfile(username, args) {\n        try {\n            const response = await fetch(`http://localhost:8080/user/profile/${username}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `bearer ${localStorage.getItem(\"CHT-tokens\")}`\n                },\n                body: JSON.stringify(args)\n            });\n            const data = await response.json();\n            if (response.status === 200) {\n                return [true, data.user];\n            } else {\n                return [false, data.message];\n            }\n        } catch (error) {\n            return [false, 'Error occurred when updating profile'];\n        }\n    }\n\n    // Fill out Placeholder Values\n    async function populateProfile(args, callback, error) {\n        const currentUser = jwt(localStorage.getItem(\"CHT-tokens\")).user.user;\n        const [status, data] = await callback(currentUser, args);\n        if (status) {\n            setErrorMessage(\"\");\n            // Only don't set success on first load\n            setSuccess(username !== '');\n            setUsername(data.username);\n            setPassword(\"\");\n            setFirstName(data.first_name);\n            setLastName(data.last_name);\n            setAge(data.age);\n            setAtRisk(data.atRisk);\n            setCity(data.city);\n            setState(data.state);\n        } else {\n            setErrorMessage(data);\n            setSuccess(false);\n            if (error) {\n                error(data);\n            }\n        }\n    }\n\n    // Verify Form Submission\n    function submitPatch() {\n        let errorMsg = [];\n        if (username === '') {\n            errorMsg.push('Username cannot be blank');\n        }\n        if (firstName === '') {\n            errorMsg.push('First Name cannot be blank');\n        }\n        if (lastName === '') {\n            errorMsg.push('Last Name cannot be blank');\n        }\n        if (age === '') {\n            errorMsg.push('Age cannot be blank');\n        }\n        if (age <= 0) {\n            errorMsg.push('Age cannot be less than or equal to 0');\n        }\n        if (city === '') {\n            errorMsg.push('City cannot be blank');\n        }\n        if (state === '') {\n            errorMsg.push('State cannot be blank');\n        }\n\n        if (errorMsg.length === 0) {\n            const args = {\n                username,\n                password,\n                first_name: firstName,\n                last_name: lastName,\n                age,\n                atRisk,\n                city,\n                state\n            };\n            populateProfile(args, patchProfile, null);\n        } else {\n            setErrorMessage(\n                <>\n                    <p>Input Field Errors:</p>\n                    <ul>\n                        {errorMsg.map(e => (<li>{e}</li>))}\n                    </ul>\n                </>\n            );\n        }\n    }\n\n    useEffect(() => {\n        populateProfile(null, getProfile);\n    }, []);\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col>\n                    <h1>Update Profile</h1>\n                    <Form>\n                        <Form.Group controlId=\"username\" type=\"text\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                placeholder={username}\n                                onChange={(e) => setUsername(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"password\" type=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"firstName\" type=\"text\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control\n                                placeholder={firstName}\n                                onChange={(e) => setFirstName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"lastName\" type=\"text\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control\n                                placeholder={lastName}\n                                onChange={(e) => setLastName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"age\" type=\"number\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder={age}\n                                onChange={(e) => setAge(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"atRisk\" type=\"checkbox\">\n                            <Form.Label>At Risk</Form.Label>\n                            <Form.Check\n                                checked={atRisk}\n                                onChange={(e) => setAtRisk(e.target.checked)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"city\" type=\"text\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                placeholder={city}\n                                onChange={(e) => setCity(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group controlId=\"state\" type=\"text\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                placeholder={state}\n                                onChange={(e) => setState(e.target.value)} />\n                        </Form.Group>\n                        <Button\n                            style={{ background: \"#5340b3\", border: \"#5340b3\" }}\n                            onClick={submitPatch}>\n                            Save\n                        </Button>\n                        <br />\n                        <br />\n                        {errorMessage !== \"\" && <Alert variant='danger'>{errorMessage}</Alert>}\n                        {success && <Alert variant='success'>Profile Updated Successfully. If you changed the username, pleas logout and log back in.</Alert>}\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Settings;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Container, Card, Col } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\n\nconst useFetch = url => {\n  const [users, setUsers] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  function createData(name, username, age, atRisk, city, state) {\n    return { name, username, age, atRisk, city, state };\n  }\n\n  useEffect(async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const arr = [];\n    for (let i = 0; i < data.length; i++) {\n      arr.push(createData(data[i].first_name + ' ' + data[i].last_name, data[i].username, data[i].age, data[i].atRisk, data[i].city, data[i].state));\n    }\n    setUsers(arr);\n    setLoading(false);\n  }, []);\n\n  return { users, isLoading };\n};\n\nconst Admin = () => {\n  const { users, isLoading } = useFetch(\"http://localhost:8080/admin/users\");\n\n  return (\n    <Container fluid>\n      {isLoading ? <div>Loading...</div> :\n        <Col md={3} style={{ padding: 100 }}>\n          <Card style={{ background: \"#40B3A0\" }}>\n            <Card.Body>\n              <Card.Title><Link to={{\n                pathname: '/admin/users',\n                state: users,\n              }}> User List </Link></Card.Title>\n            </Card.Body>\n          </Card>\n        </Col>\n      }\n    </Container>\n  );\n}\n\nexport default Admin;\n\n","import { Button, Row, Col, Container, Jumbotron, Alert } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: \"90%\",\n  height: \"90%\",\n};\n\nexport class Testing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPosition: {\n        lat: 32.779167,\n        lng: -96.808891,\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      places: [],\n      showAlert: false,\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState((prevState) => ({\n          currentPosition: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          },\n        }));\n      });\n    }\n  }\n\n  findNearby = () => {\n    navigator.permissions.query({ name: \"geolocation\" }).then((result) => {\n      if (result.state == \"denied\") {\n        this.setState({\n          showAlert: true,\n        });\n        return;\n      }\n    });\n\n    const pos = this.state.currentPosition;\n\n    return axios\n      .post(\"http://localhost:8080/location/testing\", pos)\n      .then((response) => {\n        this.setState({ places: response.data.results });\n        console.log(this.state.places);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for nearby testing locations.</h1>\n            (Be sure to turn location permissions on.)\n            <br />\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findNearby}\n            >\n              Find Testing Locations\n            </Button>\n          </Container>\n        </Jumbotron>\n        <Container fluid>\n          <Row className=\"mt-5\">\n            <Col md={4}>\n              <strong>Who should get tested?</strong>\n              <li>People who have symptoms of COVID-19.</li>\n              <li>\n                People who have had close contact (within 6 feet for a total of\n                15 minutes or more) with someone with confirmed COVID-19.\n              </li>\n              <li>\n                People who have taken part in activities that put them at higher\n                risk for COVID-19 because they cannot socially distance as\n                needed, such as travel, attending large social or mass\n                gatherings, or being in crowded indoor settings.\n              </li>\n              <li>\n                People who have been asked or referred to get testing by their\n                healthcare provider, or state ​health department.\n              </li>\n              <br />\n              <strong>There are two types of tests,</strong>\n              <li>A viral test tells you if you have a current infection.</li>\n              <li>\n                An antibody test may tell you if you've had a past infection.\n              </li>\n              <br />\n              Learn more{\" \"}\n              <a href=\" https://www.cdc.gov/coronavirus/2019-ncov/symptoms-testing/testing.html\">\n                here.\n              </a>\n            </Col>\n            <Col md={8} style={{ height: \"800px\" }}>\n              <Alert\n                show={this.state.showAlert}\n                variant=\"danger\"\n                style={{ width: \"80%\" }}\n              >\n                Please turn on location permissions.\n              </Alert>\n              <Map\n                google={this.props.google}\n                zoom={12}\n                style={mapStyles}\n                initialCenter={this.state.currentPosition}\n                center={this.state.currentPosition}\n              >\n                {this.state.places.map((item) => (\n                  <Marker\n                    onClick={this.onMarkerClick}\n                    position={item.geometry.location}\n                    name={item.name}\n                    address={item.formatted_address}\n                  />\n                ))}\n\n                <InfoWindow\n                  marker={this.state.activeMarker}\n                  visible={this.state.showingInfoWindow}\n                  onClose={this.onClose}\n                >\n                  <div>\n                    <strong>{this.state.selectedPlace.name}</strong>\n                    <p>{this.state.selectedPlace.address}</p>\n                  </div>\n                </InfoWindow>\n              </Map>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_API,\n})(Testing);\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\nimport { Toolbar, Typography, Paper, Checkbox, IconButton, Tooltip, FormControlLabel, Switch } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport SearchBar from \"material-ui-search-bar\";\nimport { useLocation } from 'react-router-dom';\nimport axios from \"axios\";\n\nconst Users = () => {\n    const { state } = useLocation();\n    const [rows, setRows] = useState(state);\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    const headCells = [\n        { id: 'name', disablePadding: true, label: 'Name' },\n        { id: 'username', disablePadding: false, label: 'Username' },\n        { id: 'age', disablePadding: false, label: 'Age' },\n        { id: 'atRisk', disablePadding: false, label: 'At Risk' },\n        { id: 'city', disablePadding: false, label: 'City' },\n        { id: 'state', disablePadding: false, label: 'State' },\n    ];\n\n    function EnhancedTableHead(props) {\n        const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n        const createSortHandler = (property) => (event) => {\n            onRequestSort(event, property);\n        };\n\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell padding=\"checkbox\">\n                        <Checkbox\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\n                            checked={rowCount > 0 && numSelected === rowCount}\n                            onChange={onSelectAllClick}\n                            inputProps={{ 'aria-label': 'select all users' }}\n                        />\n                    </TableCell>\n                    {headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            padding={headCell.disablePadding ? 'none' : 'default'}\n                            sortDirection={orderBy === headCell.id ? order : false}\n                        >\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={orderBy === headCell.id ? order : 'asc'}\n                                onClick={createSortHandler(headCell.id)}\n                            >\n                                {headCell.label}\n                                {orderBy === headCell.id ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n        );\n    }\n\n    EnhancedTableHead.propTypes = {\n        classes: PropTypes.object.isRequired,\n        numSelected: PropTypes.number.isRequired,\n        onRequestSort: PropTypes.func.isRequired,\n        onSelectAllClick: PropTypes.func.isRequired,\n        order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n        orderBy: PropTypes.string.isRequired,\n        rowCount: PropTypes.number.isRequired,\n    };\n\n    const useToolbarStyles = makeStyles((theme) => ({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1),\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                    color: theme.palette.secondary.main,\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n                }\n                : {\n                    color: theme.palette.text.primary,\n                    backgroundColor: theme.palette.secondary.dark,\n                },\n        title: {\n            flex: '1 1 100%',\n        },\n    }));\n\n    const EnhancedTableToolbar = (props) => {\n        const classes = useToolbarStyles();\n        const { numSelected, selected } = props;\n\n        const deleteUsers = () => {\n            selected.map(username => handleDelete(username));\n            const newRows = rows.filter((row) => !selected.includes(row.username));\n\n            setRows(newRows);\n            requestSearch(searched, newRows);\n            setSelected([]);\n        }\n\n        return (\n            <Toolbar\n                className={clsx(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                {numSelected > 0 ? (\n                    <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        List of Users\n                    </Typography>\n                )}\n\n                {numSelected > 0 &&\n                    <Tooltip title=\"Remove User(s)\">\n                        <IconButton onClick={() => deleteUsers()}>\n                            <DeleteForeverIcon />\n                        </IconButton>\n                    </Tooltip>\n                }\n            </Toolbar>\n        );\n    };\n\n    EnhancedTableToolbar.propTypes = {\n        numSelected: PropTypes.number.isRequired,\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }));\n\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('name');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = filteredRows.map((n) => n.username);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, username) => {\n        const selectedIndex = selected.indexOf(username);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, username);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const handleDelete = (username) => {\n        const data = {\n            username: username,\n        };\n        return axios\n            .post(\"http://localhost:8080/admin/delete\", data)\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n\n    const isSelected = (username) => selected.indexOf(username) !== -1;\n    const [filteredRows, setFilteredRows] = useState(rows);\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n    const [searched, setSearched] = useState(\"\");\n\n    const requestSearch = (searchedVal, rows) => {\n        setSearched(searchedVal);\n        const newRows = rows.filter((row) => {\n            return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n        });\n        setFilteredRows(newRows);\n    };\n\n    const cancelSearch = () => {\n        setSearched(\"\");\n        requestSearch(searched, rows);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <SearchBar\n                    placeholder='Search Name'\n                    value={searched}\n                    onChange={(searchVal) => requestSearch(searchVal, rows)}\n                    onCancelSearch={() => cancelSearch()}\n                />\n                <EnhancedTableToolbar numSelected={selected.length} selected={selected} />\n\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(filteredRows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.username);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.username)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell>{row.username}</TableCell>\n                                            <TableCell>{row.age}</TableCell>\n                                            <TableCell>{row.atRisk}</TableCell>\n                                            <TableCell>{row.city}</TableCell>\n                                            <TableCell>{row.state}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Minimize\"\n            />\n        </div>\n    );\n}\n\nexport default Users;","import React, { Component } from \"react\";\nimport {\n  Button,\n  Jumbotron,\n  Container,\n  Form,\n  Col,\n  Card,\n  Row,\n  Alert,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n//https://www.vaccinespotter.org/api/\n//https://github.com/GUI/covid-vaccine-spotter\n\nexport default class Vaccine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zip: \"\",\n      distance: Number.MAX_SAFE_INTEGER, // any distance\n      locations: [],\n      noZipAlert: false,\n      noMatchAlert: false,\n    };\n  }\n\n  findVaccine = () => {\n    console.log(/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip));\n    if (!/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(this.state.zip)) {\n      this.setState({\n        noZipAlert: true,\n      });\n      return;\n    }\n    this.setState({\n      noZipAlert: false,\n      noMatchAlert: false,\n    });\n\n    const data = { zip: this.state.zip, distance: this.state.distance };\n    axios\n      .post(\"http://localhost:8080/location/vaccine\", data)\n      .then((response) => {\n        if (response.data == \"No match\") {\n          this.setState({\n            noMatchAlert: true,\n            locations: [],\n          });\n        } else {\n          this.setState({\n            locations: response.data,\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <Jumbotron fluid style={{ background: \"#20475A\" }}>\n          <Container style={{ color: \"white\" }}>\n            <h1>Search for vaccines.</h1>\n            Always be sure to first check\n            <li>your states guidelines on eligibility</li>\n            <li>the availability of a vaccine at each location</li>\n            <li>and to schedule your appointment</li>\n            <br />\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    value={this.state.zip}\n                    onChange={(e) => this.setState({ zip: e.target.value })}\n                  />\n                </Form.Group>\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>Within</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    defaultValue=\"Any Distance\"\n                    onChange={(e) =>\n                      this.setState({ distance: e.target.value })\n                    }\n                  >\n                    <option value={Number.MAX_SAFE_INTEGER}>\n                      Any Distance\n                    </option>\n                    <option value={5}>5 miles</option>\n                    <option value={10}>10 miles</option>\n                    <option value={25}>25 miles</option>\n                    <option value={50}>50 miles</option>\n                    <option value={100}>100 miles</option>\n                  </Form.Control>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n            <Button\n              style={{\n                background: \"white\",\n                color: \"#20475A\",\n                border: \"white\",\n              }}\n              onClick={this.findVaccine}\n            >\n              Find Vaccines\n            </Button>\n          </Container>\n        </Jumbotron>\n\n        <Container fluid className=\"justify-content-center\">\n          <Row className=\"justify-content-md-center mb-5\">\n            <Alert\n              show={this.state.noZipAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              Please enter a zip.\n            </Alert>\n            <Alert\n              show={this.state.noMatchAlert}\n              variant=\"danger\"\n              style={{ width: \"80%\" }}\n            >\n              There are no matches for this area.\n            </Alert>\n          </Row>\n        </Container>\n\n        <Container fluid className=\"justify-content-center\">\n          {this.state.locations.map((place) => (\n            <Row className=\"justify-content-md-center mb-5\">\n              <Card\n                style={{ width: \"50%\", background: \"#408cb3\", color: \"white\" }}\n              >\n                <Card.Header>\n                  <h4>{place.provider_brand_name}</h4>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title>\n                    {place.address}, {place.city}, {place.state}\n                  </Card.Title>\n                  <Card.Text>\n                    Appointments available:{\" \"}\n                    {place.appointments_available ? <p>Yes</p> : <p>No</p>}\n                  </Card.Text>\n                  <Button\n                    style={{\n                      background: \"#5340b3\",\n                      border: \"#5340b3\",\n                    }}\n                  >\n                    <a style={{ color: \"white\" }} href={place.url}>\n                      Visit {place.provider_brand_name}'s site\n                    </a>\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Row>\n          ))}\n        </Container>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Badge, Col, Container, Jumbotron, Media, Row } from \"react-bootstrap\";\n\nconst useFetch = () => {\n    const [news, setNews] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n    const key = \"bb279f1560c14af2b31fb0c75c8e4187\"\n    const today = new Date();\n    const curDate = formatDate(today);\n    const prevDate = formatDate(new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000));\n    const url = \"https://newsapi.org/v2/everything?q=covid19&language=en&from=\" + prevDate + \"&to=\" + curDate + \"&sortBy=popularity&apiKey=\" + key;\n\n    function formatDate(input) {\n        let date = input.getFullYear() + '-' + (input.getMonth() + 1) + '-' + input.getDate();\n        return date;\n    }\n\n    useEffect(async () => {\n        const response = await fetch(url, {\n            \"method\": \"GET\",\n        });\n        const data = await response.json();\n        setNews(data.articles);\n        setLoading(false);\n    }, []);\n\n    return { news, isLoading };\n};\n\nconst News = () => {\n    const { news, isLoading } = useFetch();\n\n    const openInNewTab = (url) => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    const onMouseOver = event => {\n        const el = event.target;\n        el.style.color = \"#0078ff\";\n        el.style.cursor = \"pointer\";\n        el.style.textDecoration = \"underline\"\n    };\n\n    const onMouseOut = event => {\n        const el = event.target;\n        el.style.color = \"white\";\n        el.style.textDecoration = \"none\"\n    };\n\n    return (\n        <>\n            {isLoading ? <div>Loading...</div> :\n                <>\n                    <Jumbotron fluid style={{ background: \"#20475A\" }}>\n                        <Container>\n                            <Media>\n                                <img\n                                    width={500}\n                                    height={315}\n                                    className=\"mr-3\"\n                                    src={news[0].urlToImage}\n                                    alt=\"Loading Image\"\n                                />\n                                <Media.Body>\n                                    <span><Badge variant=\"info\">{news[0].source.name}</Badge></span>\n                                    <h2\n                                        onMouseEnter={event => onMouseOver(event)}\n                                        onMouseOut={event => onMouseOut(event)}\n                                        onClick={() => openInNewTab(news[0].url)}\n                                        style={{ color: \"white\", fontWeight: \"bold\" }}>\n                                        {news[0].title}\n                                    </h2>\n                                    <p style={{ color: \"white\", fontSize: \"95%\" }}>{news[0].content.substring(0, 200)}</p>\n                                    <p style={{ color: \"silver\" }}>{news[0].publishedAt.substring(0, 10)}</p>\n                                </Media.Body>\n                            </Media>\n                        </Container>\n                    </Jumbotron>\n                    <Container>\n                        <Row>\n                            {news.slice(1, 6).map((article) => {\n                                const onMouseOver = event => {\n                                    const el = event.target;\n                                    el.style.color = \"#0078ff\";\n                                    el.style.cursor = \"pointer\";\n                                    el.style.textDecoration = \"underline\"\n                                };\n\n                                const onMouseOut = event => {\n                                    const el = event.target;\n                                    el.style.color = \"blue\";\n                                    el.style.textDecoration = \"none\"\n                                };\n\n                                return (\n                                    <Col>\n                                        <Media>\n                                            <Media.Body>\n                                                <img\n                                                    width={180}\n                                                    height={100}\n                                                    className=\"mr-3\"\n                                                    src={article.urlToImage}\n                                                    alt=\"Loading Image\"\n                                                />\n                                                <p onMouseEnter={event => onMouseOver(event)}\n                                                    onMouseOut={event => onMouseOut(event)}\n                                                    onClick={() => openInNewTab(article.url)}\n                                                    style={{ fontSize: \"80%\", width: \"180px\", color: \"blue\" }}>\n                                                    {article.title.substring(0, 50) + \"...\"}\n                                                </p>\n                                            </Media.Body>\n                                        </Media>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                        {news.slice(6).map((article) => {\n                            const onMouseOver = event => {\n                                const el = event.target;\n                                el.style.color = \"#0078ff\";\n                                el.style.cursor = \"pointer\";\n                            };\n\n                            const onMouseOut = event => {\n                                const el = event.target;\n                                el.style.color = \"#000000\";\n                            };\n\n                            return (\n                                <Media style={{ paddingTop: \"25px\", paddingBottom: \"25px\" }}>\n                                    <img\n                                        width={320}\n                                        height={200}\n                                        className=\"mr-3\"\n                                        src={article.urlToImage}\n                                        alt=\"Loading Image\"\n                                    />\n                                    <Media.Body>\n                                        <h6><Badge variant=\"info\">{article.source.name}</Badge></h6>\n                                        <h4\n                                            onMouseEnter={event => onMouseOver(event)}\n                                            onMouseOut={event => onMouseOut(event)}\n                                            onClick={() => openInNewTab(article.url)}>\n                                            {article.title}</h4>\n                                        <p>{article.content.substring(0, 200)}</p>\n                                        <p style={{ color: \"silver\" }}>{article.publishedAt.substring(0, 10)}</p>\n                                    </Media.Body>\n                                </Media>\n                            );\n                        })}\n                    </Container>\n                </>\n            }\n        </>\n    );\n}\n\nexport default News;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nimport jwt from \"jwt-decode\";\n\nfunction ProtectedRoute({ component: Component, admin = false, ...rest }) {\n    const { authTokens } = useAuth();\n    try {\n        if (admin) {\n            const isAdmin = jwt(localStorage.getItem(\"CHT-tokens\"))?.user?.admin;\n            return (\n                <Route {...rest} render={props => authTokens && isAdmin\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: '/login',\n                        state: { referrer: rest.path }\n                    }} />} />\n            );\n        } else {\n            return (\n                <Route {...rest} render={props => authTokens\n                    ? <Component {...props} />\n                    : <Redirect to={{\n                        pathname: '/login',\n                        state: { referrer: rest.path }\n                    }} />} />\n            );\n        }\n    } catch (error) {\n        return (\n            <Redirect to={{\n                pathname: '/login',\n                state: { referrer: rest.path }\n            }} />\n        );\n    }\n}\n\nexport default ProtectedRoute;\n","import React, { useState } from \"react\";\nimport CHTNavbar from \"./components/CHTNavbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Settings from \"./pages/Settings\";\nimport Admin from \"./pages/Admin\";\nimport Testing from \"./pages/Testing\";\nimport Users from \"./pages/Users\"\nimport Vaccine from \"./pages/Vaccine\";\nimport News from \"./pages/News\"\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { AuthContext } from \"./context/auth\";\n\nconst CHT_TOKENS = \"CHT-tokens\";\n\nfunction App() {\n  const existingTokens = JSON.parse(localStorage.getItem(CHT_TOKENS));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n\n  const setTokens = (data) => {\n    localStorage.setItem(CHT_TOKENS, JSON.stringify(data));\n    setAuthTokens(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n        <Router>\n          <CHTNavbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <Login {...props} />}\n            />\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/testing\">\n              <Testing />\n            </Route>\n            <Route exact path=\"/vaccine\">\n              <Vaccine />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n            <ProtectedRoute exact path=\"/admin\" component={Admin} admin={true} />\n            <ProtectedRoute exact path=\"/admin/users\" component={Users} admin={true} />\n            <ProtectedRoute exact path=\"/profile\" component={Profile} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}